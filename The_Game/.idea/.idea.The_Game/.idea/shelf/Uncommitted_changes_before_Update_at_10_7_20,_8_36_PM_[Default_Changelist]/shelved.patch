Index: Assets/Characters/BaseFire.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/Characters/BaseFire.cs	(date 1602120635248)
+++ Assets/Characters/BaseFire.cs	(date 1602120635248)
@@ -0,0 +1,24 @@
+// using System.Collections;
+// using System.Collections.Generic;
+// using UnityEngine;
+
+// namespace Characters
+// {
+// //inherites base character class
+//     public class BaseFire : BaseCharacter
+//     {
+//         public BaseFire()
+//         {
+//             CharacterElementType = "Fire";
+//             CharacterDescription = "it's lit. ";
+//             level = 1;
+//             hp = 10;
+//             attack = 2;
+//             defense = 4;
+//             speed = 5;
+//             accuracy = 5;
+//         } //end of Fire
+
+//     } //end of BaseFire
+
+// }
\ No newline at end of file
Index: Assets/Characters/BaseFire.cs.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/Characters/BaseFire.cs.meta	(date 1602120545271)
+++ Assets/Characters/BaseFire.cs.meta	(date 1602120545271)
@@ -0,0 +1,3 @@
+fileFormatVersion: 2
+guid: 8faafecb792442de9c6d7280b831f984
+timeCreated: 1602120545
\ No newline at end of file
Index: Library/ScriptAssemblies/BuiltinAssemblies.stamp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>08d85efa39f33400.08d85efa32cc2600
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Library/ScriptAssemblies/BuiltinAssemblies.stamp	(revision afa954d1faa0e6fe3690f1793aab3debda665659)
+++ Library/ScriptAssemblies/BuiltinAssemblies.stamp	(date 1602124579478)
@@ -1,1 +1,1 @@
-08d85efa39f33400.08d85efa32cc2600
\ No newline at end of file
+08d869816c347500.08d869816c347500
\ No newline at end of file
Index: Library/shadercompiler-UnityShaderCompiler.exe2.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Library/shadercompiler-UnityShaderCompiler.exe2.log	(date 1602120286586)
+++ Library/shadercompiler-UnityShaderCompiler.exe2.log	(date 1602120286586)
@@ -0,0 +1,2 @@
+Base path: 'C:/Program Files/Unity/Hub/Editor/2019.4.11f1/Editor/Data', plugins path 'C:/Program Files/Unity/Hub/Editor/2019.4.11f1/Editor/Data/PlaybackEngines'
+Cmd: initializeCompiler
Index: Library/shadercompiler-UnityShaderCompiler.exe1.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Library/shadercompiler-UnityShaderCompiler.exe1.log	(date 1602120286586)
+++ Library/shadercompiler-UnityShaderCompiler.exe1.log	(date 1602120286586)
@@ -0,0 +1,2 @@
+Base path: 'C:/Program Files/Unity/Hub/Editor/2019.4.11f1/Editor/Data', plugins path 'C:/Program Files/Unity/Hub/Editor/2019.4.11f1/Editor/Data/PlaybackEngines'
+Cmd: initializeCompiler
Index: Library/EditorInstance.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Library/EditorInstance.json	(date 1602120286446)
+++ Library/EditorInstance.json	(date 1602120286446)
@@ -0,0 +1,6 @@
+{
+	"process_id" : 12448,
+	"version" : "2019.4.11f1",
+	"app_path" : "C:/Program Files/Unity/Hub/Editor/2019.4.11f1/Editor/Unity.exe",
+	"app_contents_path" : "C:/Program Files/Unity/Hub/Editor/2019.4.11f1/Editor/Data"
+}
\ No newline at end of file
Index: Assets/Textures.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/Textures.meta	(date 1602120286251)
+++ Assets/Textures.meta	(date 1602120286251)
@@ -0,0 +1,8 @@
+fileFormatVersion: 2
+guid: 7b672ca9303504146b800c073d243df2
+folderAsset: yes
+DefaultImporter:
+  externalObjects: {}
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/Scripts.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/Scripts.meta	(date 1602120286245)
+++ Assets/Scripts.meta	(date 1602120286245)
@@ -0,0 +1,8 @@
+fileFormatVersion: 2
+guid: a1ee9953114d8f647a1c159afa1cf5d9
+folderAsset: yes
+DefaultImporter:
+  externalObjects: {}
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/CodeMonkey.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey.meta	(date 1602120286211)
+++ Assets/CodeMonkey.meta	(date 1602120286211)
@@ -0,0 +1,10 @@
+fileFormatVersion: 2
+guid: 16b451a71f8c5644886a3d83a5a80de7
+folderAsset: yes
+timeCreated: 1523804043
+licenseType: Pro
+DefaultImporter:
+  externalObjects: {}
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/Scripts/GameHandler.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/Scripts/GameHandler.cs	(date 1602120286248)
+++ Assets/Scripts/GameHandler.cs	(date 1602120286248)
@@ -0,0 +1,24 @@
+using System.Collections;
+using System.Collections.Generic;
+using UnityEngine;
+using CodeMonkey;
+using CodeMonkey.Utils;
+public class GameHandler : MonoBehaviour
+{
+    // Start is called before the first frame update
+    void Start()
+    {
+        Debug.Log("GameHandler.Start");
+        int i=0;
+        FunctionPeriodic.Create(() => { 
+            CMDebug.TextPopupMouse("testing" + i + "!"); 
+            i++;
+        }, .5f);
+    }
+
+    // Update is called once per frame
+    void Update()
+    {
+        
+    }
+}
Index: Assets/Scripts/GameHandler.cs.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/Scripts/GameHandler.cs.meta	(date 1602120286249)
+++ Assets/Scripts/GameHandler.cs.meta	(date 1602120286249)
@@ -0,0 +1,11 @@
+fileFormatVersion: 2
+guid: 279f69f5572c5414b959c0aa5a4b2ff3
+MonoImporter:
+  externalObjects: {}
+  serializedVersion: 2
+  defaultReferences: []
+  executionOrder: 0
+  icon: {instanceID: 0}
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/Textures/White Pixel.png.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/Textures/White Pixel.png.meta	(date 1602120286252)
+++ Assets/Textures/White Pixel.png.meta	(date 1602120286252)
@@ -0,0 +1,92 @@
+fileFormatVersion: 2
+guid: 3a8aacd64030e014da12c352feb62002
+TextureImporter:
+  internalIDToNameTable: []
+  externalObjects: {}
+  serializedVersion: 11
+  mipmaps:
+    mipMapMode: 0
+    enableMipMap: 0
+    sRGBTexture: 1
+    linearTexture: 0
+    fadeOut: 0
+    borderMipMap: 0
+    mipMapsPreserveCoverage: 0
+    alphaTestReferenceValue: 0.5
+    mipMapFadeDistanceStart: 1
+    mipMapFadeDistanceEnd: 3
+  bumpmap:
+    convertToNormalMap: 0
+    externalNormalMap: 0
+    heightScale: 0.25
+    normalMapFilter: 0
+  isReadable: 0
+  streamingMipmaps: 0
+  streamingMipmapsPriority: 0
+  grayScaleToAlpha: 0
+  generateCubemap: 6
+  cubemapConvolution: 0
+  seamlessCubemap: 0
+  textureFormat: 1
+  maxTextureSize: 2048
+  textureSettings:
+    serializedVersion: 2
+    filterMode: -1
+    aniso: -1
+    mipBias: -100
+    wrapU: 1
+    wrapV: 1
+    wrapW: 1
+  nPOTScale: 0
+  lightmap: 0
+  compressionQuality: 50
+  spriteMode: 1
+  spriteExtrude: 1
+  spriteMeshType: 1
+  alignment: 0
+  spritePivot: {x: 0.5, y: 0.5}
+  spritePixelsToUnits: 100
+  spriteBorder: {x: 0, y: 0, z: 0, w: 0}
+  spriteGenerateFallbackPhysicsShape: 1
+  alphaUsage: 1
+  alphaIsTransparency: 1
+  spriteTessellationDetail: -1
+  textureType: 8
+  textureShape: 1
+  singleChannelComponent: 0
+  maxTextureSizeSet: 0
+  compressionQualitySet: 0
+  textureFormatSet: 0
+  applyGammaDecoding: 0
+  platformSettings:
+  - serializedVersion: 3
+    buildTarget: DefaultTexturePlatform
+    maxTextureSize: 2048
+    resizeAlgorithm: 0
+    textureFormat: -1
+    textureCompression: 1
+    compressionQuality: 50
+    crunchedCompression: 0
+    allowsAlphaSplitting: 0
+    overridden: 0
+    androidETC2FallbackOverride: 0
+    forceMaximumCompressionQuality_BC6H_BC7: 0
+  spriteSheet:
+    serializedVersion: 2
+    sprites: []
+    outline: []
+    physicsShape: []
+    bones: []
+    spriteID: 5e97eb03825dee720800000000000000
+    internalID: 0
+    vertices: []
+    indices: 
+    edges: []
+    weights: []
+    secondaryTextures: []
+  spritePackingTag: 
+  pSDRemoveMatte: 0
+  pSDShowRemoveMatteOption: 0
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/CodeMonkey/Assets.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Assets.meta	(date 1602120286216)
+++ Assets/CodeMonkey/Assets.meta	(date 1602120286216)
@@ -0,0 +1,10 @@
+fileFormatVersion: 2
+guid: 87d70cfb1e610ac4dadb3551cb1dc28b
+folderAsset: yes
+timeCreated: 1524395615
+licenseType: Pro
+DefaultImporter:
+  externalObjects: {}
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/CodeMonkey/CMDebug.cs.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/CMDebug.cs.meta	(date 1602120286219)
+++ Assets/CodeMonkey/CMDebug.cs.meta	(date 1602120286219)
@@ -0,0 +1,13 @@
+fileFormatVersion: 2
+guid: d6005648898e7f647ad2202fe256c311
+timeCreated: 1524945727
+licenseType: Pro
+MonoImporter:
+  externalObjects: {}
+  serializedVersion: 2
+  defaultReferences: []
+  executionOrder: 0
+  icon: {instanceID: 0}
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/CodeMonkey/Utils.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils.meta	(date 1602120286227)
+++ Assets/CodeMonkey/Utils.meta	(date 1602120286227)
@@ -0,0 +1,10 @@
+fileFormatVersion: 2
+guid: d900c58c01968cd42bb98e37d8e4d05c
+folderAsset: yes
+timeCreated: 1524300187
+licenseType: Pro
+DefaultImporter:
+  externalObjects: {}
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/CodeMonkey/Assets.cs.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Assets.cs.meta	(date 1602120286216)
+++ Assets/CodeMonkey/Assets.cs.meta	(date 1602120286216)
@@ -0,0 +1,13 @@
+fileFormatVersion: 2
+guid: eda7ff5f6e8175c4da119ea9ed256f6d
+timeCreated: 1524393850
+licenseType: Pro
+MonoImporter:
+  externalObjects: {}
+  serializedVersion: 2
+  defaultReferences: []
+  executionOrder: 0
+  icon: {instanceID: 0}
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Library/StateCache/Hierarchy/ef44eb-mainStage.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"m_ExpandedPrefabGameObjectFileIDs\":[],\"m_ExpandedSceneGameObjectInstanceIDs\":[-1186,14670],\"m_ScrollY\":0.0,\"m_LastClickedFileID\":0,\"m_LastClickedInstanceID\":0}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Library/StateCache/Hierarchy/ef44eb-mainStage.json	(revision afa954d1faa0e6fe3690f1793aab3debda665659)
+++ Library/StateCache/Hierarchy/ef44eb-mainStage.json	(date 1602124608897)
@@ -1,1 +1,1 @@
-{"m_ExpandedPrefabGameObjectFileIDs":[],"m_ExpandedSceneGameObjectInstanceIDs":[-1186,14670],"m_ScrollY":0.0,"m_LastClickedFileID":0,"m_LastClickedInstanceID":0}
\ No newline at end of file
+{"m_ExpandedPrefabGameObjectFileIDs":[],"m_ExpandedSceneGameObjectInstanceIDs":[-1624,-1598,-1250],"m_ScrollY":0.0,"m_LastClickedFileID":0,"m_LastClickedInstanceID":0}
\ No newline at end of file
Index: Library/StateCache/SceneView/24009e-mainStage.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"cameraMode\":{\"drawMode\":0,\"name\":\"Shaded\",\"section\":\"Shading Mode\"},\"sceneLighting\":true,\"audioPlay\":false,\"sceneViewState\":{\"showFog\":true,\"showMaterialUpdate\":false,\"showSkybox\":true,\"showFlares\":true,\"showImageEffects\":true,\"showParticleSystems\":true},\"in2DMode\":true,\"pivot\":{\"x\":-1.8116424083709717,\"y\":-0.648638904094696,\"z\":-377.1018371582031},\"rotation\":{\"x\":0.0,\"y\":0.0,\"z\":0.0,\"w\":1.0},\"size\":4.245750904083252,\"orthographic\":true}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Library/StateCache/SceneView/24009e-mainStage.json	(revision afa954d1faa0e6fe3690f1793aab3debda665659)
+++ Library/StateCache/SceneView/24009e-mainStage.json	(date 1602124608915)
@@ -1,1 +1,1 @@
-{"cameraMode":{"drawMode":0,"name":"Shaded","section":"Shading Mode"},"sceneLighting":true,"audioPlay":false,"sceneViewState":{"showFog":true,"showMaterialUpdate":false,"showSkybox":true,"showFlares":true,"showImageEffects":true,"showParticleSystems":true},"in2DMode":true,"pivot":{"x":-1.8116424083709717,"y":-0.648638904094696,"z":-377.1018371582031},"rotation":{"x":0.0,"y":0.0,"z":0.0,"w":1.0},"size":4.245750904083252,"orthographic":true}
\ No newline at end of file
+{"cameraMode":{"drawMode":0,"name":"Shaded","section":"Shading Mode"},"sceneLighting":true,"audioPlay":false,"sceneViewState":{"showFog":true,"showMaterialUpdate":false,"showSkybox":true,"showFlares":true,"showImageEffects":true,"showParticleSystems":true},"in2DMode":false,"pivot":{"x":0.5902010202407837,"y":-1.154299259185791,"z":-377.864990234375},"rotation":{"x":-0.08717229217290878,"y":0.8995905518531799,"z":-0.21045254170894624,"w":-0.37262260913848879},"size":4.653509140014648,"orthographic":false}
\ No newline at end of file
Index: Assets/CodeMonkey/Resources.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Resources.meta	(date 1602120286226)
+++ Assets/CodeMonkey/Resources.meta	(date 1602120286226)
@@ -0,0 +1,10 @@
+fileFormatVersion: 2
+guid: 9c480003fd87d3548ae91e921a89a579
+folderAsset: yes
+timeCreated: 1524394058
+licenseType: Pro
+DefaultImporter:
+  externalObjects: {}
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/CodeMonkey/README.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/README.txt	(date 1602120286226)
+++ Assets/CodeMonkey/README.txt	(date 1602120286226)
@@ -0,0 +1,12 @@
+------------------- Code Monkey -------------------
+
+Thank you for downloading the Code Monkey Utilities
+I hope you find them useful in your projects
+If you have any questions use the contact form
+Cheers!
+
+           unitycodemonkey.com
+--------------------------------------------------
+
+Version: 1.02
+Date: 01-06-2018
\ No newline at end of file
Index: Assets/CodeMonkey/MonoBehaviours.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/MonoBehaviours.meta	(date 1602120286223)
+++ Assets/CodeMonkey/MonoBehaviours.meta	(date 1602120286223)
@@ -0,0 +1,10 @@
+fileFormatVersion: 2
+guid: 5abf4c77cbf61d94995a40be42eeaee0
+folderAsset: yes
+timeCreated: 1527582733
+licenseType: Pro
+DefaultImporter:
+  externalObjects: {}
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: ProjectSettings/ProjectSettings.asset
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>%YAML 1.1\n%TAG !u! tag:unity3d.com,2011:\n--- !u!129 &1\nPlayerSettings:\n  m_ObjectHideFlags: 0\n  serializedVersion: 20\n  productGUID: 74d31a66082773841b7b9924730a70fe\n  AndroidProfiler: 0\n  AndroidFilterTouchesWhenObscured: 0\n  AndroidEnableSustainedPerformanceMode: 0\n  defaultScreenOrientation: 4\n  targetDevice: 2\n  useOnDemandResources: 0\n  accelerometerFrequency: 60\n  companyName: DefaultCompany\n  productName: The_Game\n  defaultCursor: {fileID: 0}\n  cursorHotspot: {x: 0, y: 0}\n  m_SplashScreenBackgroundColor: {r: 0.13725491, g: 0.12156863, b: 0.1254902, a: 1}\n  m_ShowUnitySplashScreen: 1\n  m_ShowUnitySplashLogo: 1\n  m_SplashScreenOverlayOpacity: 1\n  m_SplashScreenAnimation: 1\n  m_SplashScreenLogoStyle: 1\n  m_SplashScreenDrawMode: 0\n  m_SplashScreenBackgroundAnimationZoom: 1\n  m_SplashScreenLogoAnimationZoom: 1\n  m_SplashScreenBackgroundLandscapeAspect: 1\n  m_SplashScreenBackgroundPortraitAspect: 1\n  m_SplashScreenBackgroundLandscapeUvs:\n    serializedVersion: 2\n    x: 0\n    y: 0\n    width: 1\n    height: 1\n  m_SplashScreenBackgroundPortraitUvs:\n    serializedVersion: 2\n    x: 0\n    y: 0\n    width: 1\n    height: 1\n  m_SplashScreenLogos: []\n  m_VirtualRealitySplashScreen: {fileID: 0}\n  m_HolographicTrackingLossScreen: {fileID: 0}\n  defaultScreenWidth: 1024\n  defaultScreenHeight: 768\n  defaultScreenWidthWeb: 960\n  defaultScreenHeightWeb: 600\n  m_StereoRenderingPath: 0\n  m_ActiveColorSpace: 0\n  m_MTRendering: 1\n  m_StackTraceTypes: 010000000100000001000000010000000100000001000000\n  iosShowActivityIndicatorOnLoading: -1\n  androidShowActivityIndicatorOnLoading: -1\n  iosUseCustomAppBackgroundBehavior: 0\n  iosAllowHTTPDownload: 1\n  allowedAutorotateToPortrait: 1\n  allowedAutorotateToPortraitUpsideDown: 1\n  allowedAutorotateToLandscapeRight: 1\n  allowedAutorotateToLandscapeLeft: 1\n  useOSAutorotation: 1\n  use32BitDisplayBuffer: 1\n  preserveFramebufferAlpha: 0\n  disableDepthAndStencilBuffers: 0\n  androidStartInFullscreen: 1\n  androidRenderOutsideSafeArea: 1\n  androidUseSwappy: 0\n  androidBlitType: 0\n  defaultIsNativeResolution: 1\n  macRetinaSupport: 1\n  runInBackground: 1\n  captureSingleScreen: 0\n  muteOtherAudioSources: 0\n  Prepare IOS For Recording: 0\n  Force IOS Speakers When Recording: 0\n  deferSystemGesturesMode: 0\n  hideHomeButton: 0\n  submitAnalytics: 1\n  usePlayerLog: 1\n  bakeCollisionMeshes: 0\n  forceSingleInstance: 0\n  useFlipModelSwapchain: 1\n  resizableWindow: 0\n  useMacAppStoreValidation: 0\n  macAppStoreCategory: public.app-category.games\n  gpuSkinning: 0\n  xboxPIXTextureCapture: 0\n  xboxEnableAvatar: 0\n  xboxEnableKinect: 0\n  xboxEnableKinectAutoTracking: 0\n  xboxEnableFitness: 0\n  visibleInBackground: 1\n  allowFullscreenSwitch: 1\n  fullscreenMode: 1\n  xboxSpeechDB: 0\n  xboxEnableHeadOrientation: 0\n  xboxEnableGuest: 0\n  xboxEnablePIXSampling: 0\n  metalFramebufferOnly: 0\n  xboxOneResolution: 0\n  xboxOneSResolution: 0\n  xboxOneXResolution: 3\n  xboxOneMonoLoggingLevel: 0\n  xboxOneLoggingLevel: 1\n  xboxOneDisableEsram: 0\n  xboxOneEnableTypeOptimization: 0\n  xboxOnePresentImmediateThreshold: 0\n  switchQueueCommandMemory: 0\n  switchQueueControlMemory: 16384\n  switchQueueComputeMemory: 262144\n  switchNVNShaderPoolsGranularity: 33554432\n  switchNVNDefaultPoolsGranularity: 16777216\n  switchNVNOtherPoolsGranularity: 16777216\n  switchNVNMaxPublicTextureIDCount: 0\n  switchNVNMaxPublicSamplerIDCount: 0\n  stadiaPresentMode: 0\n  stadiaTargetFramerate: 0\n  vulkanNumSwapchainBuffers: 3\n  vulkanEnableSetSRGBWrite: 0\n  vulkanEnableLateAcquireNextImage: 0\n  m_SupportedAspectRatios:\n    4:3: 1\n    5:4: 1\n    16:10: 1\n    16:9: 1\n    Others: 1\n  bundleVersion: 0.1\n  preloadedAssets: []\n  metroInputSource: 0\n  wsaTransparentSwapchain: 0\n  m_HolographicPauseOnTrackingLoss: 1\n  xboxOneDisableKinectGpuReservation: 1\n  xboxOneEnable7thCore: 1\n  vrSettings:\n    cardboard:\n      depthFormat: 0\n      enableTransitionView: 0\n    daydream:\n      depthFormat: 0\n      useSustainedPerformanceMode: 0\n      enableVideoLayer: 0\n      useProtectedVideoMemory: 0\n      minimumSupportedHeadTracking: 0\n      maximumSupportedHeadTracking: 1\n    hololens:\n      depthFormat: 1\n      depthBufferSharingEnabled: 1\n    lumin:\n      depthFormat: 0\n      frameTiming: 2\n      enableGLCache: 0\n      glCacheMaxBlobSize: 524288\n      glCacheMaxFileSize: 8388608\n    oculus:\n      sharedDepthBuffer: 1\n      dashSupport: 1\n      lowOverheadMode: 0\n      protectedContext: 0\n      v2Signing: 1\n    enable360StereoCapture: 0\n  isWsaHolographicRemotingEnabled: 0\n  enableFrameTimingStats: 0\n  useHDRDisplay: 0\n  D3DHDRBitDepth: 0\n  m_ColorGamuts: 00000000\n  targetPixelDensity: 30\n  resolutionScalingMode: 0\n  androidSupportedAspectRatio: 1\n  androidMaxAspectRatio: 2.1\n  applicationIdentifier: {}\n  buildNumber: {}\n  AndroidBundleVersionCode: 1\n  AndroidMinSdkVersion: 19\n  AndroidTargetSdkVersion: 0\n  AndroidPreferredInstallLocation: 1\n  aotOptions: \n  stripEngineCode: 1\n  iPhoneStrippingLevel: 0\n  iPhoneScriptCallOptimization: 0\n  ForceInternetPermission: 0\n  ForceSDCardPermission: 0\n  CreateWallpaper: 0\n  APKExpansionFiles: 0\n  keepLoadedShadersAlive: 0\n  StripUnusedMeshComponents: 1\n  VertexChannelCompressionMask: 4054\n  iPhoneSdkVersion: 988\n  iOSTargetOSVersionString: 10.0\n  tvOSSdkVersion: 0\n  tvOSRequireExtendedGameController: 0\n  tvOSTargetOSVersionString: 10.0\n  uIPrerenderedIcon: 0\n  uIRequiresPersistentWiFi: 0\n  uIRequiresFullScreen: 1\n  uIStatusBarHidden: 1\n  uIExitOnSuspend: 0\n  uIStatusBarStyle: 0\n  appleTVSplashScreen: {fileID: 0}\n  appleTVSplashScreen2x: {fileID: 0}\n  tvOSSmallIconLayers: []\n  tvOSSmallIconLayers2x: []\n  tvOSLargeIconLayers: []\n  tvOSLargeIconLayers2x: []\n  tvOSTopShelfImageLayers: []\n  tvOSTopShelfImageLayers2x: []\n  tvOSTopShelfImageWideLayers: []\n  tvOSTopShelfImageWideLayers2x: []\n  iOSLaunchScreenType: 0\n  iOSLaunchScreenPortrait: {fileID: 0}\n  iOSLaunchScreenLandscape: {fileID: 0}\n  iOSLaunchScreenBackgroundColor:\n    serializedVersion: 2\n    rgba: 0\n  iOSLaunchScreenFillPct: 100\n  iOSLaunchScreenSize: 100\n  iOSLaunchScreenCustomXibPath: \n  iOSLaunchScreeniPadType: 0\n  iOSLaunchScreeniPadImage: {fileID: 0}\n  iOSLaunchScreeniPadBackgroundColor:\n    serializedVersion: 2\n    rgba: 0\n  iOSLaunchScreeniPadFillPct: 100\n  iOSLaunchScreeniPadSize: 100\n  iOSLaunchScreeniPadCustomXibPath: \n  iOSUseLaunchScreenStoryboard: 0\n  iOSLaunchScreenCustomStoryboardPath: \n  iOSDeviceRequirements: []\n  iOSURLSchemes: []\n  iOSBackgroundModes: 0\n  iOSMetalForceHardShadows: 0\n  metalEditorSupport: 1\n  metalAPIValidation: 1\n  iOSRenderExtraFrameOnPause: 0\n  appleDeveloperTeamID: \n  iOSManualSigningProvisioningProfileID: \n  tvOSManualSigningProvisioningProfileID: \n  iOSManualSigningProvisioningProfileType: 0\n  tvOSManualSigningProvisioningProfileType: 0\n  appleEnableAutomaticSigning: 0\n  iOSRequireARKit: 0\n  iOSAutomaticallyDetectAndAddCapabilities: 1\n  appleEnableProMotion: 0\n  clonedFromGUID: 5f34be1353de5cf4398729fda238591b\n  templatePackageId: com.unity.template.2d@3.3.2\n  templateDefaultScene: Assets/Scenes/SampleScene.unity\n  AndroidTargetArchitectures: 1\n  AndroidSplashScreenScale: 0\n  androidSplashScreen: {fileID: 0}\n  AndroidKeystoreName: \n  AndroidKeyaliasName: \n  AndroidBuildApkPerCpuArchitecture: 0\n  AndroidTVCompatibility: 0\n  AndroidIsGame: 1\n  AndroidEnableTango: 0\n  androidEnableBanner: 1\n  androidUseLowAccuracyLocation: 0\n  androidUseCustomKeystore: 0\n  m_AndroidBanners:\n  - width: 320\n    height: 180\n    banner: {fileID: 0}\n  androidGamepadSupportLevel: 0\n  AndroidValidateAppBundleSize: 1\n  AndroidAppBundleSizeToValidate: 150\n  m_BuildTargetIcons: []\n  m_BuildTargetPlatformIcons: []\n  m_BuildTargetBatching: []\n  m_BuildTargetGraphicsJobs:\n  - m_BuildTarget: MacStandaloneSupport\n    m_GraphicsJobs: 0\n  - m_BuildTarget: Switch\n    m_GraphicsJobs: 0\n  - m_BuildTarget: MetroSupport\n    m_GraphicsJobs: 0\n  - m_BuildTarget: AppleTVSupport\n    m_GraphicsJobs: 0\n  - m_BuildTarget: BJMSupport\n    m_GraphicsJobs: 0\n  - m_BuildTarget: LinuxStandaloneSupport\n    m_GraphicsJobs: 0\n  - m_BuildTarget: PS4Player\n    m_GraphicsJobs: 0\n  - m_BuildTarget: iOSSupport\n    m_GraphicsJobs: 0\n  - m_BuildTarget: WindowsStandaloneSupport\n    m_GraphicsJobs: 0\n  - m_BuildTarget: XboxOnePlayer\n    m_GraphicsJobs: 0\n  - m_BuildTarget: LuminSupport\n    m_GraphicsJobs: 0\n  - m_BuildTarget: AndroidPlayer\n    m_GraphicsJobs: 0\n  - m_BuildTarget: WebGLSupport\n    m_GraphicsJobs: 0\n  m_BuildTargetGraphicsJobMode:\n  - m_BuildTarget: PS4Player\n    m_GraphicsJobMode: 0\n  - m_BuildTarget: XboxOnePlayer\n    m_GraphicsJobMode: 0\n  m_BuildTargetGraphicsAPIs:\n  - m_BuildTarget: AndroidPlayer\n    m_APIs: 150000000b000000\n    m_Automatic: 0\n  m_BuildTargetVRSettings: []\n  openGLRequireES31: 0\n  openGLRequireES31AEP: 0\n  openGLRequireES32: 0\n  m_TemplateCustomTags: {}\n  mobileMTRendering:\n    Android: 1\n    iPhone: 1\n    tvOS: 1\n  m_BuildTargetGroupLightmapEncodingQuality: []\n  m_BuildTargetGroupLightmapSettings: []\n  playModeTestRunnerEnabled: 0\n  runPlayModeTestAsEditModeTest: 0\n  actionOnDotNetUnhandledException: 1\n  enableInternalProfiler: 0\n  logObjCUncaughtExceptions: 1\n  enableCrashReportAPI: 0\n  cameraUsageDescription: \n  locationUsageDescription: \n  microphoneUsageDescription: \n  switchNetLibKey: \n  switchSocketMemoryPoolSize: 6144\n  switchSocketAllocatorPoolSize: 128\n  switchSocketConcurrencyLimit: 14\n  switchScreenResolutionBehavior: 2\n  switchUseCPUProfiler: 0\n  switchApplicationID: 0x01004b9000490000\n  switchNSODependencies: \n  switchTitleNames_0: \n  switchTitleNames_1: \n  switchTitleNames_2: \n  switchTitleNames_3: \n  switchTitleNames_4: \n  switchTitleNames_5: \n  switchTitleNames_6: \n  switchTitleNames_7: \n  switchTitleNames_8: \n  switchTitleNames_9: \n  switchTitleNames_10: \n  switchTitleNames_11: \n  switchTitleNames_12: \n  switchTitleNames_13: \n  switchTitleNames_14: \n  switchPublisherNames_0: \n  switchPublisherNames_1: \n  switchPublisherNames_2: \n  switchPublisherNames_3: \n  switchPublisherNames_4: \n  switchPublisherNames_5: \n  switchPublisherNames_6: \n  switchPublisherNames_7: \n  switchPublisherNames_8: \n  switchPublisherNames_9: \n  switchPublisherNames_10: \n  switchPublisherNames_11: \n  switchPublisherNames_12: \n  switchPublisherNames_13: \n  switchPublisherNames_14: \n  switchIcons_0: {fileID: 0}\n  switchIcons_1: {fileID: 0}\n  switchIcons_2: {fileID: 0}\n  switchIcons_3: {fileID: 0}\n  switchIcons_4: {fileID: 0}\n  switchIcons_5: {fileID: 0}\n  switchIcons_6: {fileID: 0}\n  switchIcons_7: {fileID: 0}\n  switchIcons_8: {fileID: 0}\n  switchIcons_9: {fileID: 0}\n  switchIcons_10: {fileID: 0}\n  switchIcons_11: {fileID: 0}\n  switchIcons_12: {fileID: 0}\n  switchIcons_13: {fileID: 0}\n  switchIcons_14: {fileID: 0}\n  switchSmallIcons_0: {fileID: 0}\n  switchSmallIcons_1: {fileID: 0}\n  switchSmallIcons_2: {fileID: 0}\n  switchSmallIcons_3: {fileID: 0}\n  switchSmallIcons_4: {fileID: 0}\n  switchSmallIcons_5: {fileID: 0}\n  switchSmallIcons_6: {fileID: 0}\n  switchSmallIcons_7: {fileID: 0}\n  switchSmallIcons_8: {fileID: 0}\n  switchSmallIcons_9: {fileID: 0}\n  switchSmallIcons_10: {fileID: 0}\n  switchSmallIcons_11: {fileID: 0}\n  switchSmallIcons_12: {fileID: 0}\n  switchSmallIcons_13: {fileID: 0}\n  switchSmallIcons_14: {fileID: 0}\n  switchManualHTML: \n  switchAccessibleURLs: \n  switchLegalInformation: \n  switchMainThreadStackSize: 1048576\n  switchPresenceGroupId: \n  switchLogoHandling: 0\n  switchReleaseVersion: 0\n  switchDisplayVersion: 1.0.0\n  switchStartupUserAccount: 0\n  switchTouchScreenUsage: 0\n  switchSupportedLanguagesMask: 0\n  switchLogoType: 0\n  switchApplicationErrorCodeCategory: \n  switchUserAccountSaveDataSize: 0\n  switchUserAccountSaveDataJournalSize: 0\n  switchApplicationAttribute: 0\n  switchCardSpecSize: -1\n  switchCardSpecClock: -1\n  switchRatingsMask: 0\n  switchRatingsInt_0: 0\n  switchRatingsInt_1: 0\n  switchRatingsInt_2: 0\n  switchRatingsInt_3: 0\n  switchRatingsInt_4: 0\n  switchRatingsInt_5: 0\n  switchRatingsInt_6: 0\n  switchRatingsInt_7: 0\n  switchRatingsInt_8: 0\n  switchRatingsInt_9: 0\n  switchRatingsInt_10: 0\n  switchRatingsInt_11: 0\n  switchRatingsInt_12: 0\n  switchLocalCommunicationIds_0: \n  switchLocalCommunicationIds_1: \n  switchLocalCommunicationIds_2: \n  switchLocalCommunicationIds_3: \n  switchLocalCommunicationIds_4: \n  switchLocalCommunicationIds_5: \n  switchLocalCommunicationIds_6: \n  switchLocalCommunicationIds_7: \n  switchParentalControl: 0\n  switchAllowsScreenshot: 1\n  switchAllowsVideoCapturing: 1\n  switchAllowsRuntimeAddOnContentInstall: 0\n  switchDataLossConfirmation: 0\n  switchUserAccountLockEnabled: 0\n  switchSystemResourceMemory: 16777216\n  switchSupportedNpadStyles: 22\n  switchNativeFsCacheSize: 32\n  switchIsHoldTypeHorizontal: 0\n  switchSupportedNpadCount: 8\n  switchSocketConfigEnabled: 0\n  switchTcpInitialSendBufferSize: 32\n  switchTcpInitialReceiveBufferSize: 64\n  switchTcpAutoSendBufferSizeMax: 256\n  switchTcpAutoReceiveBufferSizeMax: 256\n  switchUdpSendBufferSize: 9\n  switchUdpReceiveBufferSize: 42\n  switchSocketBufferEfficiency: 4\n  switchSocketInitializeEnabled: 1\n  switchNetworkInterfaceManagerInitializeEnabled: 1\n  switchPlayerConnectionEnabled: 1\n  ps4NPAgeRating: 12\n  ps4NPTitleSecret: \n  ps4NPTrophyPackPath: \n  ps4ParentalLevel: 11\n  ps4ContentID: ED1633-NPXX51362_00-0000000000000000\n  ps4Category: 0\n  ps4MasterVersion: 01.00\n  ps4AppVersion: 01.00\n  ps4AppType: 0\n  ps4ParamSfxPath: \n  ps4VideoOutPixelFormat: 0\n  ps4VideoOutInitialWidth: 1920\n  ps4VideoOutBaseModeInitialWidth: 1920\n  ps4VideoOutReprojectionRate: 60\n  ps4PronunciationXMLPath: \n  ps4PronunciationSIGPath: \n  ps4BackgroundImagePath: \n  ps4StartupImagePath: \n  ps4StartupImagesFolder: \n  ps4IconImagesFolder: \n  ps4SaveDataImagePath: \n  ps4SdkOverride: \n  ps4BGMPath: \n  ps4ShareFilePath: \n  ps4ShareOverlayImagePath: \n  ps4PrivacyGuardImagePath: \n  ps4ExtraSceSysFile: \n  ps4NPtitleDatPath: \n  ps4RemotePlayKeyAssignment: -1\n  ps4RemotePlayKeyMappingDir: \n  ps4PlayTogetherPlayerCount: 0\n  ps4EnterButtonAssignment: 1\n  ps4ApplicationParam1: 0\n  ps4ApplicationParam2: 0\n  ps4ApplicationParam3: 0\n  ps4ApplicationParam4: 0\n  ps4DownloadDataSize: 0\n  ps4GarlicHeapSize: 2048\n  ps4ProGarlicHeapSize: 2560\n  playerPrefsMaxSize: 32768\n  ps4Passcode: frAQBc8Wsa1xVPfvJcrgRYwTiizs2trQ\n  ps4pnSessions: 1\n  ps4pnPresence: 1\n  ps4pnFriends: 1\n  ps4pnGameCustomData: 1\n  playerPrefsSupport: 0\n  enableApplicationExit: 0\n  resetTempFolder: 1\n  restrictedAudioUsageRights: 0\n  ps4UseResolutionFallback: 0\n  ps4ReprojectionSupport: 0\n  ps4UseAudio3dBackend: 0\n  ps4UseLowGarlicFragmentationMode: 1\n  ps4SocialScreenEnabled: 0\n  ps4ScriptOptimizationLevel: 0\n  ps4Audio3dVirtualSpeakerCount: 14\n  ps4attribCpuUsage: 0\n  ps4PatchPkgPath: \n  ps4PatchLatestPkgPath: \n  ps4PatchChangeinfoPath: \n  ps4PatchDayOne: 0\n  ps4attribUserManagement: 0\n  ps4attribMoveSupport: 0\n  ps4attrib3DSupport: 0\n  ps4attribShareSupport: 0\n  ps4attribExclusiveVR: 0\n  ps4disableAutoHideSplash: 0\n  ps4videoRecordingFeaturesUsed: 0\n  ps4contentSearchFeaturesUsed: 0\n  ps4CompatibilityPS5: 0\n  ps4GPU800MHz: 1\n  ps4attribEyeToEyeDistanceSettingVR: 0\n  ps4IncludedModules: []\n  ps4attribVROutputEnabled: 0\n  monoEnv: \n  splashScreenBackgroundSourceLandscape: {fileID: 0}\n  splashScreenBackgroundSourcePortrait: {fileID: 0}\n  blurSplashScreenBackground: 1\n  spritePackerPolicy: \n  webGLMemorySize: 16\n  webGLExceptionSupport: 1\n  webGLNameFilesAsHashes: 0\n  webGLDataCaching: 1\n  webGLDebugSymbols: 0\n  webGLEmscriptenArgs: \n  webGLModulesDirectory: \n  webGLTemplate: APPLICATION:Default\n  webGLAnalyzeBuildSize: 0\n  webGLUseEmbeddedResources: 0\n  webGLCompressionFormat: 1\n  webGLLinkerTarget: 1\n  webGLThreadsSupport: 0\n  webGLWasmStreaming: 0\n  scriptingDefineSymbols: {}\n  platformArchitecture: {}\n  scriptingBackend: {}\n  il2cppCompilerConfiguration: {}\n  managedStrippingLevel: {}\n  incrementalIl2cppBuild: {}\n  allowUnsafeCode: 0\n  additionalIl2CppArgs: \n  scriptingRuntimeVersion: 1\n  gcIncremental: 0\n  gcWBarrierValidation: 0\n  apiCompatibilityLevelPerPlatform: {}\n  m_RenderingPath: 1\n  m_MobileRenderingPath: 1\n  metroPackageName: Template_2D\n  metroPackageVersion: \n  metroCertificatePath: \n  metroCertificatePassword: \n  metroCertificateSubject: \n  metroCertificateIssuer: \n  metroCertificateNotAfter: 0000000000000000\n  metroApplicationDescription: Template_2D\n  wsaImages: {}\n  metroTileShortName: \n  metroTileShowName: 0\n  metroMediumTileShowName: 0\n  metroLargeTileShowName: 0\n  metroWideTileShowName: 0\n  metroSupportStreamingInstall: 0\n  metroLastRequiredScene: 0\n  metroDefaultTileSize: 1\n  metroTileForegroundText: 2\n  metroTileBackgroundColor: {r: 0.13333334, g: 0.17254902, b: 0.21568628, a: 0}\n  metroSplashScreenBackgroundColor: {r: 0.12941177, g: 0.17254902, b: 0.21568628,\n    a: 1}\n  metroSplashScreenUseBackgroundColor: 0\n  platformCapabilities: {}\n  metroTargetDeviceFamilies: {}\n  metroFTAName: \n  metroFTAFileTypes: []\n  metroProtocolName: \n  XboxOneProductId: \n  XboxOneUpdateKey: \n  XboxOneSandboxId: \n  XboxOneContentId: \n  XboxOneTitleId: \n  XboxOneSCId: \n  XboxOneGameOsOverridePath: \n  XboxOnePackagingOverridePath: \n  XboxOneAppManifestOverridePath: \n  XboxOneVersion: 1.0.0.0\n  XboxOnePackageEncryption: 0\n  XboxOnePackageUpdateGranularity: 2\n  XboxOneDescription: \n  XboxOneLanguage:\n  - enus\n  XboxOneCapability: []\n  XboxOneGameRating: {}\n  XboxOneIsContentPackage: 0\n  XboxOneEnableGPUVariability: 1\n  XboxOneSockets: {}\n  XboxOneSplashScreen: {fileID: 0}\n  XboxOneAllowedProductIds: []\n  XboxOnePersistentLocalStorageSize: 0\n  XboxOneXTitleMemory: 8\n  XboxOneOverrideIdentityName: \n  XboxOneOverrideIdentityPublisher: \n  vrEditorSettings:\n    daydream:\n      daydreamIconForeground: {fileID: 0}\n      daydreamIconBackground: {fileID: 0}\n  cloudServicesEnabled:\n    UNet: 1\n  luminIcon:\n    m_Name: \n    m_ModelFolderPath: \n    m_PortalFolderPath: \n  luminCert:\n    m_CertPath: \n    m_SignPackage: 1\n  luminIsChannelApp: 0\n  luminVersion:\n    m_VersionCode: 1\n    m_VersionName: \n  apiCompatibilityLevel: 6\n  cloudProjectId: \n  framebufferDepthMemorylessMode: 0\n  projectName: \n  organizationId: \n  cloudEnabled: 0\n  enableNativePlatformBackendsForNewInputSystem: 0\n  disableOldInputManagerSupport: 0\n  legacyClampBlendShapeWeights: 0\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ProjectSettings/ProjectSettings.asset	(revision afa954d1faa0e6fe3690f1793aab3debda665659)
+++ ProjectSettings/ProjectSettings.asset	(date 1602123812896)
@@ -629,10 +629,10 @@
     m_VersionCode: 1
     m_VersionName: 
   apiCompatibilityLevel: 6
-  cloudProjectId: 
+  cloudProjectId: 04c218f5-63ba-42e2-b3b3-311b4fee5097
   framebufferDepthMemorylessMode: 0
-  projectName: 
-  organizationId: 
+  projectName: The_Game
+  organizationId: devintha
   cloudEnabled: 0
   enableNativePlatformBackendsForNewInputSystem: 0
   disableOldInputManagerSupport: 0
Index: Assets/CodeMonkey/README.txt.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/README.txt.meta	(date 1602120286226)
+++ Assets/CodeMonkey/README.txt.meta	(date 1602120286226)
@@ -0,0 +1,9 @@
+fileFormatVersion: 2
+guid: f59bf2b41588bd44780fc5218f7864e1
+timeCreated: 1526276062
+licenseType: Pro
+TextScriptImporter:
+  externalObjects: {}
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/CodeMonkey/CMDebug.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/CMDebug.cs	(date 1602120286218)
+++ Assets/CodeMonkey/CMDebug.cs	(date 1602120286218)
@@ -0,0 +1,95 @@
+/* 
+    ------------------- Code Monkey -------------------
+
+    Thank you for downloading the Code Monkey Utilities
+    I hope you find them useful in your projects
+    If you have any questions use the contact form
+    Cheers!
+
+               unitycodemonkey.com
+    --------------------------------------------------
+ */
+
+using System;
+using UnityEngine;
+using CodeMonkey.Utils;
+
+namespace CodeMonkey {
+
+    /*
+     * Debug Class with various helper functions to quickly create buttons, text, etc
+     * */
+    public static class CMDebug {
+
+        // Creates a Button in the World
+        public static World_Sprite Button(Transform parent, Vector3 localPosition, string text, System.Action ClickFunc, int fontSize = 30, float paddingX = 5, float paddingY = 5) {
+            return World_Sprite.CreateDebugButton(parent, localPosition, text, ClickFunc, fontSize, paddingX, paddingY);
+        }
+
+        // Creates a Button in the UI
+        public static UI_Sprite ButtonUI(Vector2 anchoredPosition, string text, Action ClickFunc) {
+            return UI_Sprite.CreateDebugButton(anchoredPosition, text, ClickFunc);
+        }
+
+        // Creates a World Text object at the world position
+        public static void Text(string text, Vector3 localPosition = default(Vector3), Transform parent = null, int fontSize = 40, Color? color = null, TextAnchor textAnchor = TextAnchor.UpperLeft, TextAlignment textAlignment = TextAlignment.Left, int sortingOrder = UtilsClass.sortingOrderDefault) {
+            UtilsClass.CreateWorldText(text, parent, localPosition, fontSize, color, textAnchor, textAlignment, sortingOrder);
+        }
+        
+        // World text pop up at mouse position
+        public static void TextPopupMouse(string text) {
+            UtilsClass.CreateWorldTextPopup(text, UtilsClass.GetMouseWorldPosition());
+        }
+
+        // Creates a Text pop up at the world position
+        public static void TextPopup(string text, Vector3 position) {
+            UtilsClass.CreateWorldTextPopup(text, position);
+        }
+
+        // Text Updater in World, (parent == null) = world position
+        public static FunctionUpdater TextUpdater(Func<string> GetTextFunc, Vector3 localPosition, Transform parent = null) {
+            return UtilsClass.CreateWorldTextUpdater(GetTextFunc, localPosition, parent);
+        }
+
+        // Text Updater in UI
+        public static FunctionUpdater TextUpdaterUI(Func<string> GetTextFunc, Vector2 anchoredPosition) {
+            return UtilsClass.CreateUITextUpdater(GetTextFunc, anchoredPosition);
+        }
+
+        // Text Updater always following mouse
+        public static void MouseTextUpdater(Func<string> GetTextFunc, Vector3 positionOffset = default(Vector3)) {
+            GameObject gameObject = new GameObject();
+            FunctionUpdater.Create(() => {
+                gameObject.transform.position = UtilsClass.GetMouseWorldPosition() + positionOffset;
+                return false;
+            });
+            TextUpdater(GetTextFunc, Vector3.zero, gameObject.transform);
+        }
+
+        // Trigger Action on Key
+        public static FunctionUpdater KeyCodeAction(KeyCode keyCode, Action onKeyDown) {
+            return UtilsClass.CreateKeyCodeAction(keyCode, onKeyDown);
+        }
+        
+
+
+        // Debug DrawLine to draw a projectile, turn Gizmos On
+        public static void DebugProjectile(Vector3 from, Vector3 to, float speed, float projectileSize) {
+            Vector3 dir = (to - from).normalized;
+            Vector3 pos = from;
+            FunctionUpdater.Create(() => {
+                Debug.DrawLine(pos, pos + dir * projectileSize);
+                float distanceBefore = Vector3.Distance(pos, to);
+                pos += dir * speed * Time.deltaTime;
+                float distanceAfter = Vector3.Distance(pos, to);
+                if (distanceBefore < distanceAfter) {
+                    return true;
+                }
+                return false;
+            });
+        }
+
+
+    }
+
+}
\ No newline at end of file
Index: Assets/CodeMonkey/Assets.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Assets.cs	(date 1602120286212)
+++ Assets/CodeMonkey/Assets.cs	(date 1602120286212)
@@ -0,0 +1,44 @@
+/* 
+    ------------------- Code Monkey -------------------
+
+    Thank you for downloading the Code Monkey Utilities
+    I hope you find them useful in your projects
+    If you have any questions use the contact form
+    Cheers!
+
+               unitycodemonkey.com
+    --------------------------------------------------
+ */
+
+using System.Collections;
+using System.Collections.Generic;
+using UnityEngine;
+
+namespace CodeMonkey {
+
+    /*
+     * Global Asset references
+     * Edit Asset references in the prefab CodeMonkey/Resources/CodeMonkeyAssets
+     * */
+    public class Assets : MonoBehaviour {
+
+        // Internal instance reference
+        private static Assets _i; 
+
+        // Instance reference
+        public static Assets i {
+            get {
+                if (_i == null) _i = Instantiate(Resources.Load<Assets>("CodeMonkeyAssets")); 
+                return _i; 
+            }
+        }
+
+
+        // All references
+
+        public Sprite s_White;
+        public Material m_White;
+
+    }
+
+}
Index: Assets/CodeMonkey/Utils/UI_BarMultiple.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/UI_BarMultiple.cs	(date 1602120286236)
+++ Assets/CodeMonkey/Utils/UI_BarMultiple.cs	(date 1602120286236)
@@ -0,0 +1,93 @@
+/* 
+    ------------------- Code Monkey -------------------
+
+    Thank you for downloading the Code Monkey Utilities
+    I hope you find them useful in your projects
+    If you have any questions use the contact form
+    Cheers!
+
+               unitycodemonkey.com
+    --------------------------------------------------
+ */
+
+using System.Collections.Generic;
+using UnityEngine;
+using UnityEngine.UI;
+
+namespace CodeMonkey.Utils {
+    
+    /*
+     * UI Container with multiple bars, useful for displaying one bar with multiple inner bars like success chance and failure chance
+     * */
+    public class UI_BarMultiple {
+        
+        private GameObject gameObject;
+        private RectTransform rectTransform;
+        private RectTransform[] barArr;
+        private Image[] barImageArr;
+        private Vector2 size;
+        
+        public class Outline {
+            public float size = 1f;
+            public Color color = Color.black;
+            public Outline(float size, Color color) {
+                this.size = size;
+                this.color = color;
+            }
+        }
+
+        public UI_BarMultiple(Transform parent, Vector2 anchoredPosition, Vector2 size, Color[] barColorArr, Outline outline) {
+            this.size = size;
+            SetupParent(parent, anchoredPosition, size);
+            if (outline != null) SetupOutline(outline, size);
+            List<RectTransform> barList = new List<RectTransform>();
+            List<Image> barImageList = new List<Image>();
+            List<float> defaultSizeList = new List<float>();
+            foreach (Color color in barColorArr) {
+                barList.Add(SetupBar(color));
+                defaultSizeList.Add(1f / barColorArr.Length);
+            }
+            barArr = barList.ToArray();
+            barImageArr = barImageList.ToArray();
+            SetSizes(defaultSizeList.ToArray());
+        }
+        private void SetupParent(Transform parent, Vector2 anchoredPosition, Vector2 size) {
+            gameObject = new GameObject("UI_BarMultiple", typeof(RectTransform));
+            rectTransform = gameObject.GetComponent<RectTransform>();
+            rectTransform.SetParent(parent, false);
+            rectTransform.sizeDelta = size;
+            rectTransform.anchorMin = new Vector2(0, .5f);
+            rectTransform.anchorMax = new Vector2(0, .5f);
+            rectTransform.pivot = new Vector2(0, .5f);
+            rectTransform.anchoredPosition = anchoredPosition;
+        }
+        private void SetupOutline(Outline outline, Vector2 size) {
+            UtilsClass.DrawSprite(outline.color, gameObject.transform, Vector2.zero, size + new Vector2(outline.size, outline.size), "Outline");
+        }
+        private RectTransform SetupBar(Color barColor) {
+            RectTransform bar = UtilsClass.DrawSprite(barColor, gameObject.transform, Vector2.zero, Vector2.zero, "Bar");
+            bar.anchorMin = new Vector2(0,0);
+            bar.anchorMax = new Vector2(0,1f);
+            bar.pivot = new Vector2(0,.5f);
+            return bar;
+        }
+        public void SetSizes(float[] sizeArr) {
+            if (sizeArr.Length != barArr.Length) {
+                throw new System.Exception("Length doesn't match!");
+            }
+            Vector2 pos = Vector2.zero;
+            for (int i=0; i<sizeArr.Length; i++) {
+                float scaledSize = sizeArr[i] * size.x;
+                barArr[i].anchoredPosition = pos;
+                barArr[i].sizeDelta = new Vector2(scaledSize, 0f);
+                pos.x += scaledSize;
+            }
+        }
+        public Vector2 GetSize() {
+            return size;
+        }
+        public void DestroySelf() {
+            UnityEngine.Object.Destroy(gameObject);
+        }
+    }
+}
Index: Assets/CodeMonkey/Utils/UI_TextComplex.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/UI_TextComplex.cs	(date 1602120286240)
+++ Assets/CodeMonkey/Utils/UI_TextComplex.cs	(date 1602120286240)
@@ -0,0 +1,141 @@
+/* 
+    ------------------- Code Monkey -------------------
+
+    Thank you for downloading the Code Monkey Utilities
+    I hope you find them useful in your projects
+    If you have any questions use the contact form
+    Cheers!
+
+               unitycodemonkey.com
+    --------------------------------------------------
+ */
+
+using UnityEngine;
+using UnityEngine.UI;
+
+namespace CodeMonkey.Utils {
+    
+    /*
+     * Displays text with icons in between the text
+     * */
+    public class UI_TextComplex {
+        
+        private static Transform GetCanvasTransform() {
+            return UtilsClass.GetCanvasTransform();
+        }
+
+        public struct Icon {
+            public Sprite sprite;
+            public Vector2 size;
+            public Color color;
+            public Icon(Sprite sprite, Vector2 size, Color? color = null) {
+                this.sprite = sprite;
+                this.size = size;
+                if (color == null) {
+                    this.color = Color.white;
+                } else {
+                    this.color = (Color) color;
+                }
+            }
+        }
+
+        public  GameObject gameObject;
+        private Transform transform;
+        private RectTransform rectTransform;
+
+        // iconChar prepends the iconArr index; 
+        // Example using iconChar '#': 
+        //      test #0 asdf
+        // Displays "test [iconArr[0]] asdf"
+        public UI_TextComplex(Transform parent, Vector2 anchoredPosition, int fontSize, char iconChar, string text, Icon[] iconArr, Font font) {
+            SetupParent(parent, anchoredPosition);
+            string tmp = text;
+            float textPosition = 0f;
+            while (tmp.IndexOf(iconChar) != -1) {
+                string untilTmp = tmp.Substring(0, tmp.IndexOf(iconChar));
+                string iconNumber = tmp.Substring(tmp.IndexOf(iconChar)+1);
+                int indexOfSpaceAfterIconNumber = iconNumber.IndexOf(" ");
+                if (indexOfSpaceAfterIconNumber != -1) {
+                    // Still has more space after iconNumber
+                    iconNumber = iconNumber.Substring(0, indexOfSpaceAfterIconNumber);
+                } else {
+                    // No more space after iconNumber
+                }
+                tmp = tmp.Substring(tmp.IndexOf(iconChar+iconNumber) + (iconChar+iconNumber).Length);
+                if (untilTmp.Trim() != "") {
+                    Text uiText = UtilsClass.DrawTextUI(untilTmp, transform, new Vector2(textPosition,0), fontSize, font);
+                    textPosition += uiText.preferredWidth;
+                }
+                // Draw Icon
+                int iconIndex = UtilsClass.Parse_Int(iconNumber, 0);
+                Icon icon = iconArr[iconIndex];
+                UtilsClass.DrawSprite(icon.sprite, transform, new Vector2(textPosition + icon.size.x / 2f, 0), icon.size);
+                textPosition += icon.size.x;
+            }
+            if (tmp.Trim() != "") {
+                UtilsClass.DrawTextUI(tmp, transform, new Vector2(textPosition,0), fontSize, font);
+            }
+        }
+        private void SetupParent(Transform parent, Vector2 anchoredPosition) {
+            gameObject = new GameObject("UI_TextComplex", typeof(RectTransform));
+            transform = gameObject.transform;
+            rectTransform = gameObject.GetComponent<RectTransform>();
+            rectTransform.SetParent(parent, false);
+            rectTransform.sizeDelta = new Vector2(0, 0);
+            rectTransform.anchorMin = new Vector2(0, .5f);
+            rectTransform.anchorMax = new Vector2(0, .5f);
+            rectTransform.pivot = new Vector2(0, .5f);
+            rectTransform.anchoredPosition = anchoredPosition;
+        }
+        public void SetTextColor(Color color) {
+            foreach (Transform trans in transform) {
+                Text text = trans.GetComponent<Text>();
+                if (text != null) {
+                    text.color = color;
+                }
+            }
+        }
+        public float GetTotalWidth() {
+            float textPosition = 0f;
+            foreach (Transform trans in transform) {
+                Text text = trans.GetComponent<Text>();
+                if (text != null) {
+                    textPosition += text.preferredWidth;
+                }
+                Image image = trans.GetComponent<Image>();
+                if (image != null) {
+                    textPosition += image.GetComponent<RectTransform>().sizeDelta.x;
+                }
+            }
+            return textPosition;
+        }
+        public float GetTotalHeight() {
+            foreach (Transform trans in transform) {
+                Text text = trans.GetComponent<Text>();
+                if (text != null) {
+                    return text.preferredHeight;
+                }
+            }
+            return 0f;
+        }
+        public void AddTextOutline(Color color, float size) {
+            foreach (Transform textComplexTrans in transform) {
+                if (textComplexTrans.GetComponent<Text>() != null) {
+                    Outline outline = textComplexTrans.gameObject.AddComponent<Outline>();
+                    outline.effectColor = color;
+                    outline.effectDistance = new Vector2(size, size);
+                }
+            }
+        }
+        public void SetAnchorMiddle() {
+            rectTransform.anchorMin = new Vector2(.5f, .5f);
+            rectTransform.anchorMax = new Vector2(.5f, .5f);
+        }
+        public void CenterOnPosition(Vector2 position) {
+            rectTransform.anchoredPosition = position + new Vector2(-GetTotalWidth() / 2f, 0);
+        }
+        public void DestroySelf() {
+            Object.Destroy(gameObject);
+        }
+    }
+}
Index: Assets/CodeMonkey/Utils/FunctionUpdater.cs.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/FunctionUpdater.cs.meta	(date 1602120286234)
+++ Assets/CodeMonkey/Utils/FunctionUpdater.cs.meta	(date 1602120286234)
@@ -0,0 +1,8 @@
+fileFormatVersion: 2
+guid: 7eacfbf662ad34e46932f36084c15e11
+MonoImporter:
+  serializedVersion: 2
+  defaultReferences: []
+  executionOrder: 0
+  icon: {instanceID: 0}
+  userData: 
Index: Assets/CodeMonkey/Utils/World_Mesh.cs.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/World_Mesh.cs.meta	(date 1602120286242)
+++ Assets/CodeMonkey/Utils/World_Mesh.cs.meta	(date 1602120286242)
@@ -0,0 +1,13 @@
+fileFormatVersion: 2
+guid: 91ce8dcaef210db41a183b4558f16bb2
+timeCreated: 1524300280
+licenseType: Pro
+MonoImporter:
+  externalObjects: {}
+  serializedVersion: 2
+  defaultReferences: []
+  executionOrder: 0
+  icon: {instanceID: 0}
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/CodeMonkey/Utils/FunctionTimer.cs.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/FunctionTimer.cs.meta	(date 1602120286234)
+++ Assets/CodeMonkey/Utils/FunctionTimer.cs.meta	(date 1602120286234)
@@ -0,0 +1,8 @@
+fileFormatVersion: 2
+guid: 9c8b5f0217e73fa47827cf77f22c2f8d
+MonoImporter:
+  serializedVersion: 2
+  defaultReferences: []
+  executionOrder: 0
+  icon: {instanceID: 0}
+  userData: 
Index: Assets/CodeMonkey/Utils/UI_TextComplex.cs.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/UI_TextComplex.cs.meta	(date 1602120286240)
+++ Assets/CodeMonkey/Utils/UI_TextComplex.cs.meta	(date 1602120286240)
@@ -0,0 +1,13 @@
+fileFormatVersion: 2
+guid: 8ba4b604c0e9db241bb3d130165415cd
+timeCreated: 1524300347
+licenseType: Pro
+MonoImporter:
+  externalObjects: {}
+  serializedVersion: 2
+  defaultReferences: []
+  executionOrder: 0
+  icon: {instanceID: 0}
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: ProjectSettings/TagManager.asset
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>%YAML 1.1\n%TAG !u! tag:unity3d.com,2011:\n--- !u!78 &1\nTagManager:\n  serializedVersion: 2\n  tags: []\n  layers:\n  - Default\n  - TransparentFX\n  - Ignore Raycast\n  - \n  - Water\n  - UI\n  - \n  - \n  - \n  - \n  - \n  - \n  - \n  - \n  - \n  - \n  - \n  - \n  - \n  - \n  - \n  - \n  - \n  - \n  - \n  - \n  - \n  - \n  - \n  - \n  - \n  - \n  m_SortingLayers:\n  - name: Default\n    uniqueID: 0\n    locked: 0\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ProjectSettings/TagManager.asset	(revision c48c6c44b412e2223cd63bb83caac2f8baf651f2)
+++ ProjectSettings/TagManager.asset	(date 1602120286587)
@@ -38,6 +38,12 @@
   - 
   - 
   m_SortingLayers:
+  - name: Background
+    uniqueID: 3546330713
+    locked: 0
   - name: Default
     uniqueID: 0
     locked: 0
+  - name: GameObjects
+    uniqueID: 3894017391
+    locked: 0
Index: Assets/CodeMonkey/Utils/World_Mesh.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/World_Mesh.cs	(date 1602120286242)
+++ Assets/CodeMonkey/Utils/World_Mesh.cs	(date 1602120286242)
@@ -0,0 +1,195 @@
+/* 
+    ------------------- Code Monkey -------------------
+
+    Thank you for downloading the Code Monkey Utilities
+    I hope you find them useful in your projects
+    If you have any questions use the contact form
+    Cheers!
+
+               unitycodemonkey.com
+    --------------------------------------------------
+ */
+
+using UnityEngine;
+
+namespace CodeMonkey.Utils {
+
+    /*
+     * Mesh in the World
+     * */
+    public class World_Mesh {
+        
+        private const int sortingOrderDefault = 5000;
+
+        public GameObject gameObject;
+        public Transform transform;
+        private Material material;
+        private Vector3[] vertices;
+        private Vector2[] uv;
+        private int[] triangles;
+        private Mesh mesh;
+
+
+        public static World_Mesh Create(Vector3 position, float eulerZ, float meshWidth, float meshHeight, Material material, UVCoords uvCoords, int sortingOrderOffset = 0) {
+            return new World_Mesh(null, position, Vector3.one, eulerZ, meshWidth, meshHeight, material, uvCoords, sortingOrderOffset);
+        }
+
+        public static World_Mesh Create(Vector3 lowerLeftCorner, float width, float height, Material material, UVCoords uvCoords, int sortingOrderOffset = 0) {
+            return Create(lowerLeftCorner, lowerLeftCorner + new Vector3(width, height), material, uvCoords, sortingOrderOffset);
+        }
+
+        public static World_Mesh Create(Vector3 lowerLeftCorner, Vector3 upperRightCorner, Material material, UVCoords uvCoords, int sortingOrderOffset = 0) {
+            float width = upperRightCorner.x - lowerLeftCorner.x;
+            float height = upperRightCorner.y - lowerLeftCorner.y;
+            Vector3 localScale = upperRightCorner - lowerLeftCorner;
+            Vector3 position = lowerLeftCorner + localScale * .5f;
+            return new World_Mesh(null, position, Vector3.one, 0f, width, height, material, uvCoords, sortingOrderOffset);
+        }
+
+
+        private static int GetSortingOrder(Vector3 position, int offset, int baseSortingOrder = sortingOrderDefault) {
+            return (int)(baseSortingOrder - position.y) + offset;
+        }
+
+
+        public class UVCoords {
+            public int x, y, width, height;
+            public UVCoords(int x, int y, int width, int height) {
+                this.x = x;
+                this.y = y;
+                this.width = width;
+                this.height = height;
+            }
+        }
+
+
+        public World_Mesh(Transform parent, Vector3 localPosition, Vector3 localScale, float eulerZ, float meshWidth, float meshHeight, Material material, UVCoords uvCoords, int sortingOrderOffset) {
+            this.material = material;
+
+            vertices = new Vector3[4];
+            uv = new Vector2[4];
+            triangles = new int[6];
+
+            /* 0,1
+             * 1,1
+             * 0,0
+             * 1,0
+             */
+            
+            float meshWidthHalf  = meshWidth  / 2f;
+            float meshHeightHalf = meshHeight / 2f;
+
+            vertices[0] = new Vector3(-meshWidthHalf,  meshHeightHalf);
+            vertices[1] = new Vector3( meshWidthHalf,  meshHeightHalf);
+            vertices[2] = new Vector3(-meshWidthHalf, -meshHeightHalf);
+            vertices[3] = new Vector3( meshWidthHalf, -meshHeightHalf);
+            
+            if (uvCoords == null) {
+                uvCoords = new UVCoords(0, 0, material.mainTexture.width, material.mainTexture.height);
+            }
+
+            Vector2[] uvArray = GetUVRectangleFromPixels(uvCoords.x, uvCoords.y, uvCoords.width, uvCoords.height, material.mainTexture.width, material.mainTexture.height);
+
+            ApplyUVToUVArray(uvArray, ref uv);
+
+            triangles[0] = 0;
+            triangles[1] = 1;
+            triangles[2] = 2;
+            triangles[3] = 2;
+            triangles[4] = 1;
+            triangles[5] = 3;
+
+            mesh = new Mesh();
+
+            mesh.vertices = vertices;
+            mesh.uv = uv;
+            mesh.triangles = triangles;
+
+            gameObject = new GameObject("Mesh", typeof(MeshFilter), typeof(MeshRenderer));
+            gameObject.transform.parent = parent;
+            gameObject.transform.localPosition = localPosition;
+            gameObject.transform.localScale = localScale;
+            gameObject.transform.localEulerAngles = new Vector3(0, 0, eulerZ);
+
+            gameObject.GetComponent<MeshFilter>().mesh = mesh;
+            gameObject.GetComponent<MeshRenderer>().material = material;
+
+            transform = gameObject.transform;
+
+            SetSortingOrderOffset(sortingOrderOffset);
+        }
+
+        private Vector2 ConvertPixelsToUVCoordinates(int x, int y, int textureWidth, int textureHeight) {
+            return new Vector2((float)x / textureWidth, (float)y / textureHeight);
+        }
+
+        private Vector2[] GetUVRectangleFromPixels(int x, int y, int width, int height, int textureWidth, int textureHeight) {
+            /* 0, 1
+             * 1, 1
+             * 0, 0
+             * 1, 0
+             * */
+            return new Vector2[] { 
+                ConvertPixelsToUVCoordinates(x, y + height, textureWidth, textureHeight),
+                ConvertPixelsToUVCoordinates(x + width, y + height, textureWidth, textureHeight),
+                ConvertPixelsToUVCoordinates(x, y, textureWidth, textureHeight),
+                ConvertPixelsToUVCoordinates(x + width, y, textureWidth, textureHeight)
+            };
+        }
+
+        private void ApplyUVToUVArray(Vector2[] uv, ref Vector2[] mainUV) {
+            if (uv == null || uv.Length < 4 || mainUV == null || mainUV.Length < 4) throw new System.Exception();
+            mainUV[0] = uv[0];
+            mainUV[1] = uv[1];
+            mainUV[2] = uv[2];
+            mainUV[3] = uv[3];
+        }
+
+        public void SetUVCoords(UVCoords uvCoords) {
+            Vector2[] uvArray = GetUVRectangleFromPixels(uvCoords.x, uvCoords.y, uvCoords.width, uvCoords.height, material.mainTexture.width, material.mainTexture.height);
+            ApplyUVToUVArray(uvArray, ref uv);
+            mesh.uv = uv;
+        }
+
+        public void SetSortingOrderOffset(int sortingOrderOffset) {
+            SetSortingOrder(GetSortingOrder(gameObject.transform.position, sortingOrderOffset));
+        }
+
+        public void SetSortingOrder(int sortingOrder) {
+            gameObject.GetComponent<Renderer>().sortingOrder = sortingOrder;
+        }
+
+        public void SetLocalScale(Vector3 localScale) {
+            transform.localScale = localScale;
+        }
+
+        public void SetPosition(Vector3 localPosition) {
+            transform.localPosition = localPosition;
+        }
+
+        public void AddPosition(Vector3 addPosition) {
+            transform.localPosition += addPosition;
+        }
+
+        public Vector3 GetPosition() {
+            return transform.localPosition;
+        }
+
+        public int GetSortingOrder() {
+            return gameObject.GetComponent<Renderer>().sortingOrder;
+        }
+
+        public void Show() {
+            gameObject.SetActive(true);
+        }
+
+        public void Hide() {
+            gameObject.SetActive(false);
+        }
+
+        public void DestroySelf() {
+            Object.Destroy(gameObject);
+        }
+
+    }
+}
\ No newline at end of file
Index: Assets/CodeMonkey/Utils/Button_UI.cs.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/Button_UI.cs.meta	(date 1602120286231)
+++ Assets/CodeMonkey/Utils/Button_UI.cs.meta	(date 1602120286231)
@@ -0,0 +1,8 @@
+fileFormatVersion: 2
+guid: 602f74cbbbd80034b96f88091a8e7c1d
+MonoImporter:
+  serializedVersion: 2
+  defaultReferences: []
+  executionOrder: 0
+  icon: {instanceID: 0}
+  userData: 
Index: Assets/CodeMonkey/Utils/UI_Sprite.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/UI_Sprite.cs	(date 1602120286239)
+++ Assets/CodeMonkey/Utils/UI_Sprite.cs	(date 1602120286239)
@@ -0,0 +1,106 @@
+/* 
+    ------------------- Code Monkey -------------------
+
+    Thank you for downloading the Code Monkey Utilities
+    I hope you find them useful in your projects
+    If you have any questions use the contact form
+    Cheers!
+
+               unitycodemonkey.com
+    --------------------------------------------------
+ */
+
+using System;
+using UnityEngine;
+using UnityEngine.UI;
+
+namespace CodeMonkey.Utils {
+
+    /*
+     * Sprite in the UI
+     * */
+    public class UI_Sprite {
+
+        private static Transform GetCanvasTransform() {
+            return UtilsClass.GetCanvasTransform();
+        }
+
+        public static UI_Sprite CreateDebugButton(Vector2 anchoredPosition, Vector2 size, Action ClickFunc) {
+            return CreateDebugButton(anchoredPosition, size, ClickFunc, Color.green);
+        }
+        public static UI_Sprite CreateDebugButton(Vector2 anchoredPosition, Vector2 size, Action ClickFunc, Color color) {
+            UI_Sprite uiSprite = new UI_Sprite(GetCanvasTransform(), Assets.i.s_White, anchoredPosition, size, color);
+            uiSprite.AddButton(ClickFunc, null, null);
+            return uiSprite;
+        }
+        public static UI_Sprite CreateDebugButton(Vector2 anchoredPosition, string text, Action ClickFunc) {
+            return CreateDebugButton(anchoredPosition, text, ClickFunc, Color.green);
+        }
+        public static UI_Sprite CreateDebugButton(Vector2 anchoredPosition, string text, Action ClickFunc, Color color) {
+            return CreateDebugButton(anchoredPosition, text, ClickFunc, color, new Vector2(30, 20));
+        }
+        public static UI_Sprite CreateDebugButton(Vector2 anchoredPosition, string text, Action ClickFunc, Color color, Vector2 padding) {
+            UI_TextComplex uiTextComplex;
+            UI_Sprite uiSprite = CreateDebugButton(anchoredPosition, Vector2.zero, ClickFunc, color, text, out uiTextComplex);
+            uiSprite.SetSize(new Vector2(uiTextComplex.GetTotalWidth(), uiTextComplex.GetTotalHeight()) + padding);
+            return uiSprite;
+        }
+        public static UI_Sprite CreateDebugButton(Vector2 anchoredPosition, Vector2 size, Action ClickFunc, Color color, string text) {
+            UI_TextComplex uiTextComplex;
+            return CreateDebugButton(anchoredPosition, size, ClickFunc, color, text, out uiTextComplex);
+        }
+        public static UI_Sprite CreateDebugButton(Vector2 anchoredPosition, Vector2 size, Action ClickFunc, Color color, string text, out UI_TextComplex uiTextComplex) {
+            if (color.r >= 1f) color.r = .9f;
+            if (color.g >= 1f) color.g = .9f;
+            if (color.b >= 1f) color.b = .9f;
+            Color colorOver = color * 1.1f; // button over color lighter
+            UI_Sprite uiSprite = new UI_Sprite(GetCanvasTransform(), Assets.i.s_White, anchoredPosition, size, color);
+            uiSprite.AddButton(ClickFunc, () => uiSprite.SetColor(colorOver), () => uiSprite.SetColor(color));
+            uiTextComplex = new UI_TextComplex(uiSprite.gameObject.transform, Vector2.zero, 12, '#', text, null, null);
+            uiTextComplex.SetTextColor(Color.black);
+            uiTextComplex.SetAnchorMiddle();
+            uiTextComplex.CenterOnPosition(Vector2.zero);
+            return uiSprite;
+        }
+        
+
+
+        public GameObject gameObject;
+        public Image image;
+        public RectTransform rectTransform;
+
+
+        public UI_Sprite(Transform parent, Sprite sprite, Vector2 anchoredPosition, Vector2 size, Color color) {
+            rectTransform = UtilsClass.DrawSprite(sprite, parent, anchoredPosition, size, "UI_Sprite");
+            gameObject = rectTransform.gameObject;
+            image = gameObject.GetComponent<Image>();
+            image.color = color;
+        }
+        public void SetColor(Color color) {
+            image.color = color;
+        }
+        public void SetSprite(Sprite sprite) {
+            image.sprite = sprite;
+        }
+        public void SetSize(Vector2 size) {
+            rectTransform.sizeDelta = size;
+        }
+        public void SetAnchoredPosition(Vector2 anchoredPosition) {
+            rectTransform.anchoredPosition = anchoredPosition;
+        }
+        public Button_UI AddButton(Action ClickFunc, Action MouseOverOnceFunc, Action MouseOutOnceFunc) {
+            Button_UI buttonUI = gameObject.AddComponent<Button_UI>();
+            if (ClickFunc != null)
+                buttonUI.ClickFunc = ClickFunc;
+            if (MouseOverOnceFunc != null)
+                buttonUI.MouseOverOnceFunc = MouseOverOnceFunc;
+            if (MouseOutOnceFunc != null)
+                buttonUI.MouseOutOnceFunc = MouseOutOnceFunc;
+            return buttonUI;
+        }
+        public void DestroySelf() {
+            UnityEngine.Object.Destroy(gameObject);
+        }
+
+    }
+}
\ No newline at end of file
Index: Assets/CodeMonkey/Utils/World_Sprite.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/World_Sprite.cs	(date 1602120286243)
+++ Assets/CodeMonkey/Utils/World_Sprite.cs	(date 1602120286243)
@@ -0,0 +1,131 @@
+/* 
+    ------------------- Code Monkey -------------------
+
+    Thank you for downloading the Code Monkey Utilities
+    I hope you find them useful in your projects
+    If you have any questions use the contact form
+    Cheers!
+
+               unitycodemonkey.com
+    --------------------------------------------------
+ */
+
+using UnityEngine;
+
+namespace CodeMonkey.Utils {
+
+    /*
+     * Sprite in the World
+     * */
+    public class World_Sprite {
+        
+        private const int sortingOrderDefault = 5000;
+
+        public GameObject gameObject;
+        public Transform transform;
+        private SpriteRenderer spriteRenderer;
+
+
+        public static World_Sprite CreateDebugButton(Vector3 position, System.Action ClickFunc) {
+            World_Sprite worldSprite = new World_Sprite(null, position, new Vector3(10, 10), Assets.i.s_White, Color.green, sortingOrderDefault);
+            worldSprite.AddButton(ClickFunc, null, null);
+            return worldSprite;
+        }
+        public static World_Sprite CreateDebugButton(Transform parent, Vector3 localPosition, System.Action ClickFunc) {
+            World_Sprite worldSprite = new World_Sprite(parent, localPosition, new Vector3(10, 10), Assets.i.s_White, Color.green, sortingOrderDefault);
+            worldSprite.AddButton(ClickFunc, null, null);
+            return worldSprite;
+        }
+        public static World_Sprite CreateDebugButton(Transform parent, Vector3 localPosition, string text, System.Action ClickFunc, int fontSize = 30, float paddingX = 5, float paddingY = 5) {
+            GameObject gameObject = new GameObject("DebugButton");
+            gameObject.transform.parent = parent;
+            gameObject.transform.localPosition = localPosition;
+            TextMesh textMesh = UtilsClass.CreateWorldText(text, gameObject.transform, Vector3.zero, fontSize, Color.white, TextAnchor.MiddleCenter, TextAlignment.Center, 20000);
+            Bounds rendererBounds = textMesh.GetComponent<MeshRenderer>().bounds;
+
+            Color color = UtilsClass.GetColorFromString("00BA00FF");
+            if (color.r >= 1f) color.r = .9f;
+            if (color.g >= 1f) color.g = .9f;
+            if (color.b >= 1f) color.b = .9f;
+            Color colorOver = color * 1.1f; // button over color lighter
+
+            World_Sprite worldSprite = new World_Sprite(gameObject.transform, Vector3.zero, rendererBounds.size + new Vector3(paddingX, paddingY), Assets.i.s_White, color, sortingOrderDefault);
+            worldSprite.AddButton(ClickFunc, () => worldSprite.SetColor(colorOver), () => worldSprite.SetColor(color));
+            return worldSprite;
+        }
+        public static World_Sprite Create(Transform parent, Vector3 localPosition, Vector3 localScale, Sprite sprite, Color color, int sortingOrderOffset) {
+            return new World_Sprite(parent, localPosition, localScale, sprite, color, sortingOrderOffset);
+        }
+        public static World_Sprite Create(Vector3 worldPosition, Sprite sprite) {
+            return new World_Sprite(null, worldPosition, new Vector3(1, 1, 1), sprite, Color.white, 0);
+        }
+        public static World_Sprite Create(Vector3 worldPosition, Vector3 localScale, Sprite sprite, Color color, int sortingOrderOffset) {
+            return new World_Sprite(null, worldPosition, localScale, sprite, color, sortingOrderOffset);
+        }
+        public static World_Sprite Create(Vector3 worldPosition, Vector3 localScale, Sprite sprite, Color color) {
+            return new World_Sprite(null, worldPosition, localScale, sprite, color, 0);
+        }
+        public static World_Sprite Create(Vector3 worldPosition, Vector3 localScale, Color color) {
+            return new World_Sprite(null, worldPosition, localScale, Assets.i.s_White, color, 0);
+        }
+        public static World_Sprite Create(Vector3 worldPosition, Vector3 localScale) {
+            return new World_Sprite(null, worldPosition, localScale, Assets.i.s_White, Color.white, 0);
+        }
+        public static World_Sprite Create(Vector3 worldPosition, Vector3 localScale, int sortingOrderOffset) {
+            return new World_Sprite(null, worldPosition, localScale, Assets.i.s_White, Color.white, sortingOrderOffset);
+        }
+
+        public static int GetSortingOrder(Vector3 position, int offset, int baseSortingOrder = sortingOrderDefault) {
+            return (int)(baseSortingOrder - position.y) + offset;
+        }
+
+
+
+
+        public World_Sprite(Transform parent, Vector3 localPosition, Vector3 localScale, Sprite sprite, Color color, int sortingOrderOffset) {
+            int sortingOrder = GetSortingOrder(localPosition, sortingOrderOffset);
+            gameObject = UtilsClass.CreateWorldSprite(parent, "Sprite", sprite, localPosition, localScale, sortingOrder, color);
+            transform = gameObject.transform;
+            spriteRenderer = gameObject.GetComponent<SpriteRenderer>();
+        }
+        public void SetSortingOrderOffset(int sortingOrderOffset) {
+            SetSortingOrder(GetSortingOrder(gameObject.transform.position, sortingOrderOffset));
+        }
+        public void SetSortingOrder(int sortingOrder) {
+            gameObject.GetComponent<SpriteRenderer>().sortingOrder = sortingOrder;
+        }
+        public void SetLocalScale(Vector3 localScale) {
+            transform.localScale = localScale;
+        }
+        public void SetPosition(Vector3 localPosition) {
+            transform.localPosition = localPosition;
+        }
+        public void SetColor(Color color) {
+            spriteRenderer.color = color;
+        }
+        public void SetSprite(Sprite sprite) {
+            spriteRenderer.sprite = sprite;
+        }
+        public void Show() {
+            gameObject.SetActive(true);
+        }
+        public void Hide() {
+            gameObject.SetActive(false);
+        }
+        public Button_Sprite AddButton(System.Action ClickFunc, System.Action MouseOverOnceFunc, System.Action MouseOutOnceFunc) {
+            gameObject.AddComponent<BoxCollider2D>();
+            Button_Sprite buttonSprite = gameObject.AddComponent<Button_Sprite>();
+            if (ClickFunc != null)
+                buttonSprite.ClickFunc = ClickFunc;
+            if (MouseOverOnceFunc != null)
+                buttonSprite.MouseOverOnceFunc = MouseOverOnceFunc;
+            if (MouseOutOnceFunc != null)
+                buttonSprite.MouseOutOnceFunc = MouseOutOnceFunc;
+            return buttonSprite;
+        }
+        public void DestroySelf() {
+            Object.Destroy(gameObject);
+        }
+
+    }
+}
\ No newline at end of file
Index: Assets/CodeMonkey/Utils/UI_Bar.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/UI_Bar.cs	(date 1602120286235)
+++ Assets/CodeMonkey/Utils/UI_Bar.cs	(date 1602120286235)
@@ -0,0 +1,131 @@
+/* 
+    ------------------- Code Monkey -------------------
+
+    Thank you for downloading the Code Monkey Utilities
+    I hope you find them useful in your projects
+    If you have any questions use the contact form
+    Cheers!
+
+               unitycodemonkey.com
+    --------------------------------------------------
+ */
+
+using System;
+using UnityEngine;
+using UnityEngine.UI;
+
+namespace CodeMonkey.Utils {
+
+    /*
+     * Bar in the UI with scaleable Bar and Background
+     * */
+    public class UI_Bar {
+        
+        public GameObject gameObject;
+        private RectTransform rectTransform;
+        private RectTransform background;
+        private RectTransform bar;
+        private Vector2 size;
+        
+        /* 
+         * Outline into for Bar
+         * */
+        public class Outline {
+            public float size = 1f;
+            public Color color = Color.black;
+            public Outline(float size, Color color) {
+                this.size = size;
+                this.color = color;
+            }
+        }
+
+        public UI_Bar(Transform parent, Vector2 anchoredPosition, Vector2 size, Color barColor, float sizeRatio) {
+            SetupParent(parent, anchoredPosition, size);
+            SetupBar(barColor);
+            SetSize(sizeRatio);
+        }
+        public UI_Bar(Transform parent, Vector2 anchoredPosition, Vector2 size, Color barColor, float sizeRatio, Outline outline) {
+            SetupParent(parent, anchoredPosition, size);
+            if (outline != null) SetupOutline(outline, size);
+            SetupBar(barColor);
+            SetSize(sizeRatio);
+        }
+        public UI_Bar(Transform parent, Vector2 anchoredPosition, Vector2 size, Color backgroundColor, Color barColor, float sizeRatio) {
+            SetupParent(parent, anchoredPosition, size);
+            SetupBackground(backgroundColor);
+            SetupBar(barColor);
+            SetSize(sizeRatio);
+        }
+        public UI_Bar(Transform parent, Vector2 anchoredPosition, Vector2 size, Color backgroundColor, Color barColor, float sizeRatio, Outline outline) {
+            SetupParent(parent, anchoredPosition, size);
+            if (outline != null) SetupOutline(outline, size);
+            SetupBackground(backgroundColor);
+            SetupBar(barColor);
+            SetSize(sizeRatio);
+        }
+        private void SetupParent(Transform parent, Vector2 anchoredPosition, Vector2 size) {
+            this.size = size;
+            gameObject = new GameObject("UI_Bar", typeof(RectTransform));
+            rectTransform = gameObject.GetComponent<RectTransform>();
+            rectTransform.SetParent(parent, false);
+            rectTransform.sizeDelta = size;
+            rectTransform.anchorMin = new Vector2(0, .5f);
+            rectTransform.anchorMax = new Vector2(0, .5f);
+            rectTransform.pivot = new Vector2(0, .5f);
+            rectTransform.anchoredPosition = anchoredPosition;
+        }
+        private RectTransform SetupOutline(Outline outline, Vector2 size) {
+            return UtilsClass.DrawSprite(outline.color, gameObject.transform, Vector2.zero, size + new Vector2(outline.size, outline.size), "Outline");
+        }
+        private void SetupBackground(Color backgroundColor) {
+            background = UtilsClass.DrawSprite(backgroundColor, gameObject.transform, Vector2.zero, Vector2.zero, "Background");
+            background.anchorMin = new Vector2(0,0);
+            background.anchorMax = new Vector2(1,1);
+        }
+        private void SetupBar(Color barColor) {
+            bar = UtilsClass.DrawSprite(barColor, gameObject.transform, Vector2.zero, Vector2.zero, "Bar");
+            bar.anchorMin = new Vector2(0,0);
+            bar.anchorMax = new Vector2(0,1f);
+            bar.pivot = new Vector2(0,.5f);
+        }
+        public void SetSize(float sizeRatio) {
+            bar.sizeDelta = new Vector2(sizeRatio * size.x, 0);
+        }
+        public void SetColor(Color color) {
+            bar.GetComponent<Image>().color = color;
+        }
+        public void SetActive(bool active) {
+            gameObject.SetActive(active);
+        }
+        public void AddOutline(Outline outline) {
+            RectTransform outlineRectTransform = SetupOutline(outline, size);
+            outlineRectTransform.transform.SetAsFirstSibling();
+        }
+        public void SetRaycastTarget(bool set) {
+            foreach (Transform trans in gameObject.transform) {
+                if (trans.GetComponent<Image>() != null) {
+                    trans.GetComponent<Image>().raycastTarget = set;
+                }
+            }
+        }
+        public void DestroySelf() {
+            UnityEngine.Object.Destroy(gameObject);
+        }
+        public Button_UI AddButton() {
+            return AddButton(null, null, null);
+        }
+        public Button_UI AddButton(Action ClickFunc, Action MouseOverOnceFunc, Action MouseOutOnceFunc) {
+            Button_UI buttonUI = gameObject.AddComponent<Button_UI>();
+            if (ClickFunc != null)
+                buttonUI.ClickFunc = ClickFunc;
+            if (MouseOverOnceFunc != null)
+                buttonUI.MouseOverOnceFunc = MouseOverOnceFunc;
+            if (MouseOutOnceFunc != null)
+                buttonUI.MouseOutOnceFunc = MouseOutOnceFunc;
+            return buttonUI;
+        }
+
+    }
+
+
+}
Index: Assets/CodeMonkey/Utils/UtilsClass.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/UtilsClass.cs	(date 1602120286240)
+++ Assets/CodeMonkey/Utils/UtilsClass.cs	(date 1602120286240)
@@ -0,0 +1,514 @@
+/* 
+    ------------------- Code Monkey -------------------
+
+    Thank you for downloading the Code Monkey Utilities
+    I hope you find them useful in your projects
+    If you have any questions use the contact form
+    Cheers!
+
+               unitycodemonkey.com
+    --------------------------------------------------
+ */
+
+using System;
+using System.Collections.Generic;
+using UnityEngine;
+using UnityEngine.UI;
+using UnityEngine.EventSystems;
+
+namespace CodeMonkey.Utils {
+
+    /*
+     * Various assorted utilities functions
+     * */
+    public static class UtilsClass {
+        
+        private static readonly Vector3 Vector3zero = Vector3.zero;
+        private static readonly Vector3 Vector3one = Vector3.one;
+        private static readonly Vector3 Vector3yDown = new Vector3(0,-1);
+
+        public const int sortingOrderDefault = 5000;
+        
+        // Get Sorting order to set SpriteRenderer sortingOrder, higher position = lower sortingOrder
+        public static int GetSortingOrder(Vector3 position, int offset, int baseSortingOrder = sortingOrderDefault) {
+            return (int)(baseSortingOrder - position.y) + offset;
+        }
+
+
+        // Get Main Canvas Transform
+        private static Transform cachedCanvasTransform;
+        public static Transform GetCanvasTransform() {
+            if (cachedCanvasTransform == null) {
+                Canvas canvas = MonoBehaviour.FindObjectOfType<Canvas>();
+                if (canvas != null) {
+                    cachedCanvasTransform = canvas.transform;
+                }
+            }
+            return cachedCanvasTransform;
+        }
+
+        // Get Default Unity Font, used in text objects if no font given
+        public static Font GetDefaultFont() {
+            return Resources.GetBuiltinResource<Font>("Arial.ttf");
+        }
+
+
+        // Create a Sprite in the World, no parent
+        public static GameObject CreateWorldSprite(string name, Sprite sprite, Vector3 position, Vector3 localScale, int sortingOrder, Color color) {
+            return CreateWorldSprite(null, name, sprite, position, localScale, sortingOrder, color);
+        }
+        
+        // Create a Sprite in the World
+        public static GameObject CreateWorldSprite(Transform parent, string name, Sprite sprite, Vector3 localPosition, Vector3 localScale, int sortingOrder, Color color) {
+            GameObject gameObject = new GameObject(name, typeof(SpriteRenderer));
+            Transform transform = gameObject.transform;
+            transform.SetParent(parent, false);
+            transform.localPosition = localPosition;
+            transform.localScale = localScale;
+            SpriteRenderer spriteRenderer = gameObject.GetComponent<SpriteRenderer>();
+            spriteRenderer.sprite = sprite;
+            spriteRenderer.sortingOrder = sortingOrder;
+            spriteRenderer.color = color;
+            return gameObject;
+        }
+
+        // Create a Sprite in the World with Button_Sprite, no parent
+        public static Button_Sprite CreateWorldSpriteButton(string name, Sprite sprite, Vector3 localPosition, Vector3 localScale, int sortingOrder, Color color) {
+            return CreateWorldSpriteButton(null, name, sprite, localPosition, localScale, sortingOrder, color);
+        }
+
+        // Create a Sprite in the World with Button_Sprite
+        public static Button_Sprite CreateWorldSpriteButton(Transform parent, string name, Sprite sprite, Vector3 localPosition, Vector3 localScale, int sortingOrder, Color color) {
+            GameObject gameObject = CreateWorldSprite(parent, name, sprite, localPosition, localScale, sortingOrder, color);
+            gameObject.AddComponent<BoxCollider2D>();
+            Button_Sprite buttonSprite = gameObject.AddComponent<Button_Sprite>();
+            return buttonSprite;
+        }
+
+        // Creates a Text Mesh in the World and constantly updates it
+        public static FunctionUpdater CreateWorldTextUpdater(Func<string> GetTextFunc, Vector3 localPosition, Transform parent = null) {
+            TextMesh textMesh = CreateWorldText(GetTextFunc(), parent, localPosition);
+            return FunctionUpdater.Create(() => {
+                textMesh.text = GetTextFunc();
+                return false;
+            }, "WorldTextUpdater");
+        }
+
+        // Create Text in the World
+        public static TextMesh CreateWorldText(string text, Transform parent = null, Vector3 localPosition = default(Vector3), int fontSize = 40, Color? color = null, TextAnchor textAnchor = TextAnchor.UpperLeft, TextAlignment textAlignment = TextAlignment.Left, int sortingOrder = sortingOrderDefault) {
+            if (color == null) color = Color.white;
+            return CreateWorldText(parent, text, localPosition, fontSize, (Color)color, textAnchor, textAlignment, sortingOrder);
+        }
+        
+        // Create Text in the World
+        public static TextMesh CreateWorldText(Transform parent, string text, Vector3 localPosition, int fontSize, Color color, TextAnchor textAnchor, TextAlignment textAlignment, int sortingOrder) {
+            GameObject gameObject = new GameObject("World_Text", typeof(TextMesh));
+            Transform transform = gameObject.transform;
+            transform.SetParent(parent, false);
+            transform.localPosition = localPosition;
+            TextMesh textMesh = gameObject.GetComponent<TextMesh>();
+            textMesh.anchor = textAnchor;
+            textMesh.alignment = textAlignment;
+            textMesh.text = text;
+            textMesh.fontSize = fontSize;
+            textMesh.color = color;
+            textMesh.GetComponent<MeshRenderer>().sortingOrder = sortingOrder;
+            return textMesh;
+        }
+
+
+        // Create a Text Popup in the World, no parent
+        public static void CreateWorldTextPopup(string text, Vector3 localPosition) {
+            CreateWorldTextPopup(null, text, localPosition, 40, Color.white, localPosition + new Vector3(0, 20), 1f);
+        }
+        
+        // Create a Text Popup in the World
+        public static void CreateWorldTextPopup(Transform parent, string text, Vector3 localPosition, int fontSize, Color color, Vector3 finalPopupPosition, float popupTime) {
+            TextMesh textMesh = CreateWorldText(parent, text, localPosition, fontSize, color, TextAnchor.LowerLeft, TextAlignment.Left, sortingOrderDefault);
+            Transform transform = textMesh.transform;
+            Vector3 moveAmount = (finalPopupPosition - localPosition) / popupTime;
+            FunctionUpdater.Create(delegate () {
+                transform.position += moveAmount * Time.deltaTime;
+                popupTime -= Time.deltaTime;
+                if (popupTime <= 0f) {
+                    UnityEngine.Object.Destroy(transform.gameObject);
+                    return true;
+                } else {
+                    return false;
+                }
+            }, "WorldTextPopup");
+        }
+
+        // Create Text Updater in UI
+        public static FunctionUpdater CreateUITextUpdater(Func<string> GetTextFunc, Vector2 anchoredPosition) {
+            Text text = DrawTextUI(GetTextFunc(), anchoredPosition,  20, GetDefaultFont());
+            return FunctionUpdater.Create(() => {
+                text.text = GetTextFunc();
+                return false;
+            }, "UITextUpdater");
+        }
+
+
+        // Draw a UI Sprite
+        public static RectTransform DrawSprite(Color color, Transform parent, Vector2 pos, Vector2 size, string name = null) {
+            RectTransform rectTransform = DrawSprite(null, color, parent, pos, size, name);
+            return rectTransform;
+        }
+        
+        // Draw a UI Sprite
+        public static RectTransform DrawSprite(Sprite sprite, Transform parent, Vector2 pos, Vector2 size, string name = null) {
+            RectTransform rectTransform = DrawSprite(sprite, Color.white, parent, pos, size, name);
+            return rectTransform;
+        }
+        
+        // Draw a UI Sprite
+        public static RectTransform DrawSprite(Sprite sprite, Color color, Transform parent, Vector2 pos, Vector2 size, string name = null) {
+            // Setup icon
+            if (name == null || name == "") name = "Sprite";
+            GameObject go = new GameObject(name, typeof(RectTransform), typeof(Image));
+            RectTransform goRectTransform = go.GetComponent<RectTransform>();
+            goRectTransform.SetParent(parent, false);
+            goRectTransform.sizeDelta = size;
+            goRectTransform.anchoredPosition = pos;
+
+            Image image = go.GetComponent<Image>();
+            image.sprite = sprite;
+            image.color = color;
+
+            return goRectTransform;
+        }
+
+        public static Text DrawTextUI(string textString, Vector2 anchoredPosition, int fontSize, Font font) {
+            return DrawTextUI(textString, GetCanvasTransform(), anchoredPosition, fontSize, font);
+        }
+
+        public static Text DrawTextUI(string textString, Transform parent, Vector2 anchoredPosition, int fontSize, Font font) {
+            GameObject textGo = new GameObject("Text", typeof(RectTransform), typeof(Text));
+            textGo.transform.SetParent(parent, false);
+            Transform textGoTrans = textGo.transform;
+            textGoTrans.SetParent(parent, false);
+            textGoTrans.localPosition = Vector3zero;
+            textGoTrans.localScale = Vector3one;
+
+            RectTransform textGoRectTransform = textGo.GetComponent<RectTransform>();
+            textGoRectTransform.sizeDelta = new Vector2(0,0);
+            textGoRectTransform.anchoredPosition = anchoredPosition;
+
+            Text text = textGo.GetComponent<Text>();
+            text.text = textString;
+            text.verticalOverflow = VerticalWrapMode.Overflow;
+            text.horizontalOverflow = HorizontalWrapMode.Overflow;
+            text.alignment = TextAnchor.MiddleLeft;
+            if (font == null) font = GetDefaultFont();
+            text.font = font;
+            text.fontSize = fontSize;
+
+            return text;
+        }
+
+
+        // Parse a float, return default if failed
+	    public static float Parse_Float(string txt, float _default) {
+		    float f;
+		    if (!float.TryParse(txt, out f)) {
+			    f = _default;
+		    }
+		    return f;
+	    }
+        
+        // Parse a int, return default if failed
+	    public static int Parse_Int(string txt, int _default) {
+		    int i;
+		    if (!int.TryParse(txt, out i)) {
+			    i = _default;
+		    }
+		    return i;
+	    }
+	    public static int Parse_Int(string txt) {
+            return Parse_Int(txt, -1);
+	    }
+
+
+
+        // Get Mouse Position in World with Z = 0f
+        public static Vector3 GetMouseWorldPosition() {
+            Vector3 vec = GetMouseWorldPositionWithZ(Input.mousePosition, Camera.main);
+            vec.z = 0f;
+            return vec;
+        }
+        public static Vector3 GetMouseWorldPositionWithZ() {
+            return GetMouseWorldPositionWithZ(Input.mousePosition, Camera.main);
+        }
+        public static Vector3 GetMouseWorldPositionWithZ(Camera worldCamera) {
+            return GetMouseWorldPositionWithZ(Input.mousePosition, worldCamera);
+        }
+        public static Vector3 GetMouseWorldPositionWithZ(Vector3 screenPosition, Camera worldCamera) {
+            Vector3 worldPosition = worldCamera.ScreenToWorldPoint(screenPosition);
+            return worldPosition;
+        }
+        
+
+        // Is Mouse over a UI Element? Used for ignoring World clicks through UI
+        public static bool IsPointerOverUI() {
+            if (EventSystem.current.IsPointerOverGameObject()) {
+                return true;
+            } else {
+                PointerEventData pe = new PointerEventData(EventSystem.current);
+                pe.position =  Input.mousePosition;
+                List<RaycastResult> hits = new List<RaycastResult>();
+                EventSystem.current.RaycastAll( pe, hits );
+                return hits.Count > 0;
+            }
+        }
+
+
+        
+		// Returns 00-FF, value 0->255
+	    public static string Dec_to_Hex(int value) {
+		    return value.ToString("X2");
+	    }
+
+		// Returns 0-255
+	    public static int Hex_to_Dec(string hex) {
+		    return Convert.ToInt32(hex, 16);
+	    }
+        
+		// Returns a hex string based on a number between 0->1
+	    public static string Dec01_to_Hex(float value) {
+		    return Dec_to_Hex((int)Mathf.Round(value*255f));
+	    }
+
+		// Returns a float between 0->1
+	    public static float Hex_to_Dec01(string hex) {
+		    return Hex_to_Dec(hex)/255f;
+	    }
+
+        // Get Hex Color FF00FF
+	    public static string GetStringFromColor(Color color) {
+		    string red = Dec01_to_Hex(color.r);
+		    string green = Dec01_to_Hex(color.g);
+		    string blue = Dec01_to_Hex(color.b);
+		    return red+green+blue;
+	    }
+        
+        // Get Hex Color FF00FFAA
+	    public static string GetStringFromColorWithAlpha(Color color) {
+		    string alpha = Dec01_to_Hex(color.a);
+		    return GetStringFromColor(color)+alpha;
+	    }
+
+        // Sets out values to Hex String 'FF'
+	    public static void GetStringFromColor(Color color, out string red, out string green, out string blue, out string alpha) {
+		    red = Dec01_to_Hex(color.r);
+		    green = Dec01_to_Hex(color.g);
+		    blue = Dec01_to_Hex(color.b);
+		    alpha = Dec01_to_Hex(color.a);
+	    }
+        
+        // Get Hex Color FF00FF
+	    public static string GetStringFromColor(float r, float g, float b) {
+		    string red = Dec01_to_Hex(r);
+		    string green = Dec01_to_Hex(g);
+		    string blue = Dec01_to_Hex(b);
+		    return red+green+blue;
+	    }
+        
+        // Get Hex Color FF00FFAA
+	    public static string GetStringFromColor(float r, float g, float b, float a) {
+		    string alpha = Dec01_to_Hex(a);
+		    return GetStringFromColor(r,g,b)+alpha;
+	    }
+        
+        // Get Color from Hex string FF00FFAA
+	    public static Color GetColorFromString(string color) {
+		    float red = Hex_to_Dec01(color.Substring(0,2));
+		    float green = Hex_to_Dec01(color.Substring(2,2));
+		    float blue = Hex_to_Dec01(color.Substring(4,2));
+            float alpha = 1f;
+            if (color.Length >= 8) {
+                // Color string contains alpha
+                alpha = Hex_to_Dec01(color.Substring(6,2));
+            }
+		    return new Color(red, green, blue, alpha);
+	    }
+
+
+        // Generate random normalized direction
+        public static Vector3 GetRandomDir() {
+            return new Vector3(UnityEngine.Random.Range(-1f,1f), UnityEngine.Random.Range(-1f,1f)).normalized;
+        }
+        
+
+        public static Vector3 GetVectorFromAngle(int angle) {
+            // angle = 0 -> 360
+            float angleRad = angle * (Mathf.PI/180f);
+            return new Vector3(Mathf.Cos(angleRad), Mathf.Sin(angleRad));
+        }
+
+        public static float GetAngleFromVectorFloat(Vector3 dir) {
+            dir = dir.normalized;
+            float n = Mathf.Atan2(dir.y, dir.x) * Mathf.Rad2Deg;
+            if (n < 0) n += 360;
+
+            return n;
+        }
+
+        public static int GetAngleFromVector(Vector3 dir) {
+            dir = dir.normalized;
+            float n = Mathf.Atan2(dir.y, dir.x) * Mathf.Rad2Deg;
+            if (n < 0) n += 360;
+            int angle = Mathf.RoundToInt(n);
+
+            return angle;
+        }
+
+        public static int GetAngleFromVector180(Vector3 dir) {
+            dir = dir.normalized;
+            float n = Mathf.Atan2(dir.y, dir.x) * Mathf.Rad2Deg;
+            int angle = Mathf.RoundToInt(n);
+
+            return angle;
+        }
+
+        public static Vector3 ApplyRotationToVector(Vector3 vec, Vector3 vecRotation) {
+            return ApplyRotationToVector(vec, GetAngleFromVectorFloat(vecRotation));
+        }
+
+        public static Vector3 ApplyRotationToVector(Vector3 vec, float angle) {
+            return Quaternion.Euler(0,0,angle) * vec;
+        }
+
+
+        
+        public static FunctionUpdater CreateMouseDraggingAction(Action<Vector3> onMouseDragging) {
+            return CreateMouseDraggingAction(0, onMouseDragging);
+        }
+
+        public static FunctionUpdater CreateMouseDraggingAction(int mouseButton, Action<Vector3> onMouseDragging) {
+            bool dragging = false;
+            return FunctionUpdater.Create(() => {
+                if (Input.GetMouseButtonDown(mouseButton)) {
+                    dragging = true;
+                }
+                if (Input.GetMouseButtonUp(mouseButton)) {
+                    dragging = false;
+                }
+                if (dragging) {
+                    onMouseDragging(UtilsClass.GetMouseWorldPosition());
+                }
+                return false; 
+            });
+        }
+
+        public static FunctionUpdater CreateMouseClickFromToAction(Action<Vector3, Vector3> onMouseClickFromTo, Action<Vector3, Vector3> onWaitingForToPosition) {
+            return CreateMouseClickFromToAction(0, 1, onMouseClickFromTo, onWaitingForToPosition);
+        }
+
+        public static FunctionUpdater CreateMouseClickFromToAction(int mouseButton, int cancelMouseButton, Action<Vector3, Vector3> onMouseClickFromTo, Action<Vector3, Vector3> onWaitingForToPosition) {
+            int state = 0;
+            Vector3 from = Vector3.zero;
+            return FunctionUpdater.Create(() => {
+                if (state == 1) {
+                    if (onWaitingForToPosition != null) onWaitingForToPosition(from, UtilsClass.GetMouseWorldPosition());
+                }
+                if (state == 1 && Input.GetMouseButtonDown(cancelMouseButton)) {
+                    // Cancel
+                    state = 0;
+                }
+                if (Input.GetMouseButtonDown(mouseButton) && !UtilsClass.IsPointerOverUI()) {
+                    if (state == 0) {
+                        state = 1;
+                        from = UtilsClass.GetMouseWorldPosition();
+                    } else {
+                        state = 0;
+                        onMouseClickFromTo(from, UtilsClass.GetMouseWorldPosition());
+                    }
+                }
+                return false; 
+            });
+        }
+
+        public static FunctionUpdater CreateMouseClickAction(Action<Vector3> onMouseClick) {
+            return CreateMouseClickAction(0, onMouseClick);
+        }
+
+        public static FunctionUpdater CreateMouseClickAction(int mouseButton, Action<Vector3> onMouseClick) {
+            return FunctionUpdater.Create(() => {
+                if (Input.GetMouseButtonDown(mouseButton)) {
+                    onMouseClick(GetWorldPositionFromUI());
+                }
+                return false; 
+            });
+        }
+
+        public static FunctionUpdater CreateKeyCodeAction(KeyCode keyCode, Action onKeyDown) {
+            return FunctionUpdater.Create(() => {
+                if (Input.GetKeyDown(keyCode)) {
+                    onKeyDown();
+                }
+                return false; 
+            });
+        }
+
+        
+
+        // Get UI Position from World Position
+        public static Vector2 GetWorldUIPosition(Vector3 worldPosition, Transform parent, Camera uiCamera, Camera worldCamera) {
+            Vector3 screenPosition = worldCamera.WorldToScreenPoint(worldPosition);
+            Vector3 uiCameraWorldPosition = uiCamera.ScreenToWorldPoint(screenPosition);
+            Vector3 localPos = parent.InverseTransformPoint(uiCameraWorldPosition);
+            return new Vector2(localPos.x, localPos.y);
+        }
+
+        public static Vector3 GetWorldPositionFromUIZeroZ() {
+            Vector3 vec = GetWorldPositionFromUI(Input.mousePosition, Camera.main);
+            vec.z = 0f;
+            return vec;
+        }
+
+        // Get World Position from UI Position
+        public static Vector3 GetWorldPositionFromUI() {
+            return GetWorldPositionFromUI(Input.mousePosition, Camera.main);
+        }
+
+        public static Vector3 GetWorldPositionFromUI(Camera worldCamera) {
+            return GetWorldPositionFromUI(Input.mousePosition, worldCamera);
+        }
+
+        public static Vector3 GetWorldPositionFromUI(Vector3 screenPosition, Camera worldCamera) {
+            Vector3 worldPosition = worldCamera.ScreenToWorldPoint(screenPosition);
+            return worldPosition;
+        }
+    
+        public static Vector3 GetWorldPositionFromUI_Perspective() {
+            return GetWorldPositionFromUI_Perspective(Input.mousePosition, Camera.main);
+        }
+
+        public static Vector3 GetWorldPositionFromUI_Perspective(Camera worldCamera) {
+            return GetWorldPositionFromUI_Perspective(Input.mousePosition, worldCamera);
+        }
+
+        public static Vector3 GetWorldPositionFromUI_Perspective(Vector3 screenPosition, Camera worldCamera) {
+            Ray ray = worldCamera.ScreenPointToRay(screenPosition);
+            Plane xy = new Plane(Vector3.forward, new Vector3(0, 0, 0f));
+            float distance;
+            xy.Raycast(ray, out distance);
+            return ray.GetPoint(distance);
+        }
+
+
+        // Screen Shake
+        public static void ShakeCamera(float intensity, float timer) {
+            Vector3 lastCameraMovement = Vector3.zero;
+            FunctionUpdater.Create(delegate () {
+                timer -= Time.unscaledDeltaTime;
+                Vector3 randomMovement = new Vector3(UnityEngine.Random.Range(-1f, 1f), UnityEngine.Random.Range(-1f, 1f)).normalized * intensity;
+                Camera.main.transform.position = Camera.main.transform.position - lastCameraMovement + randomMovement;
+                lastCameraMovement = randomMovement;
+                return timer <= 0f;
+            }, "CAMERA_SHAKE");
+        }
+
+    }
+
+}
\ No newline at end of file
Index: Assets/CodeMonkey/Utils/FunctionUpdater.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/FunctionUpdater.cs	(date 1602120286234)
+++ Assets/CodeMonkey/Utils/FunctionUpdater.cs	(date 1602120286234)
@@ -0,0 +1,140 @@
+/* 
+    ------------------- Code Monkey -------------------
+
+    Thank you for downloading the Code Monkey Utilities
+    I hope you find them useful in your projects
+    If you have any questions use the contact form
+    Cheers!
+
+               unitycodemonkey.com
+    --------------------------------------------------
+ */
+
+using System;
+using UnityEngine;
+using System.Collections.Generic;
+
+namespace CodeMonkey.Utils {
+
+    /*
+     * Calls function on every Update until it returns true
+     * */
+    public class FunctionUpdater {
+
+        /*
+         * Class to hook Actions into MonoBehaviour
+         * */
+        private class MonoBehaviourHook : MonoBehaviour {
+
+            public Action OnUpdate;
+
+            private void Update() {
+                if (OnUpdate != null) OnUpdate();
+            }
+
+        }
+
+        private static List<FunctionUpdater> updaterList; // Holds a reference to all active updaters
+        private static GameObject initGameObject; // Global game object used for initializing class, is destroyed on scene change
+
+        private static void InitIfNeeded() {
+            if (initGameObject == null) {
+                initGameObject = new GameObject("FunctionUpdater_Global");
+                updaterList = new List<FunctionUpdater>();
+            }
+        }
+
+
+
+        
+        public static FunctionUpdater Create(Action updateFunc) {
+            return Create(() => { updateFunc(); return false; }, "", true, false);
+        }
+        public static FunctionUpdater Create(Func<bool> updateFunc) {
+            return Create(updateFunc, "", true, false);
+        }
+        public static FunctionUpdater Create(Func<bool> updateFunc, string functionName) {
+            return Create(updateFunc, functionName, true, false);
+        }
+        public static FunctionUpdater Create(Func<bool> updateFunc, string functionName, bool active) {
+            return Create(updateFunc, functionName, active, false);
+        }
+        public static FunctionUpdater Create(Func<bool> updateFunc, string functionName, bool active, bool stopAllWithSameName) {
+            InitIfNeeded();
+
+            if (stopAllWithSameName) {
+                StopAllUpdatersWithName(functionName);
+            }
+
+            GameObject gameObject = new GameObject("FunctionUpdater Object " + functionName, typeof(MonoBehaviourHook));
+            FunctionUpdater functionUpdater = new FunctionUpdater(gameObject, updateFunc, functionName, active);
+            gameObject.GetComponent<MonoBehaviourHook>().OnUpdate = functionUpdater.Update;
+
+            updaterList.Add(functionUpdater);
+            return functionUpdater;
+        }
+        private static void RemoveUpdater(FunctionUpdater funcUpdater) {
+            InitIfNeeded();
+            updaterList.Remove(funcUpdater);
+        }
+        public static void DestroyUpdater(FunctionUpdater funcUpdater) {
+            InitIfNeeded();
+            if (funcUpdater != null) {
+                funcUpdater.DestroySelf();
+            }
+        }
+        public static void StopUpdaterWithName(string functionName) {
+            InitIfNeeded();
+            for (int i = 0; i < updaterList.Count; i++) {
+                if (updaterList[i].functionName == functionName) {
+                    updaterList[i].DestroySelf();
+                    return;
+                }
+            }
+        }
+        public static void StopAllUpdatersWithName(string functionName) {
+            InitIfNeeded();
+            for (int i = 0; i < updaterList.Count; i++) {
+                if (updaterList[i].functionName == functionName) {
+                    updaterList[i].DestroySelf();
+                    i--;
+                }
+            }
+        }
+
+
+
+
+
+        private GameObject gameObject;
+        private string functionName;
+        private bool active;
+        private Func<bool> updateFunc; // Destroy Updater if return true;
+
+        public FunctionUpdater(GameObject gameObject, Func<bool> updateFunc, string functionName, bool active) {
+            this.gameObject = gameObject;
+            this.updateFunc = updateFunc;
+            this.functionName = functionName;
+            this.active = active;
+        }
+        public void Pause() {
+            active = false;
+        }
+        public void Resume() {
+            active = true;
+        }
+
+        private void Update() {
+            if (!active) return;
+            if (updateFunc()) {
+                DestroySelf();
+            }
+        }
+        public void DestroySelf() {
+            RemoveUpdater(this);
+            if (gameObject != null) {
+                UnityEngine.Object.Destroy(gameObject);
+            }
+        }
+    }
+}
\ No newline at end of file
Index: Assets/CodeMonkey/Utils/UI_BarMultiple.cs.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/UI_BarMultiple.cs.meta	(date 1602120286236)
+++ Assets/CodeMonkey/Utils/UI_BarMultiple.cs.meta	(date 1602120286236)
@@ -0,0 +1,13 @@
+fileFormatVersion: 2
+guid: 9cf7b152002fbca49b6a1a4623f200a7
+timeCreated: 1524300429
+licenseType: Pro
+MonoImporter:
+  externalObjects: {}
+  serializedVersion: 2
+  defaultReferences: []
+  executionOrder: 0
+  icon: {instanceID: 0}
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/CodeMonkey/Utils/World_Bar.cs.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/World_Bar.cs.meta	(date 1602120286242)
+++ Assets/CodeMonkey/Utils/World_Bar.cs.meta	(date 1602120286242)
@@ -0,0 +1,13 @@
+fileFormatVersion: 2
+guid: cc20fdc736e8c9442b35e4bcc04c596c
+timeCreated: 1524300272
+licenseType: Pro
+MonoImporter:
+  externalObjects: {}
+  serializedVersion: 2
+  defaultReferences: []
+  executionOrder: 0
+  icon: {instanceID: 0}
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/CodeMonkey/Utils/UI_Bar.cs.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/UI_Bar.cs.meta	(date 1602120286236)
+++ Assets/CodeMonkey/Utils/UI_Bar.cs.meta	(date 1602120286236)
@@ -0,0 +1,13 @@
+fileFormatVersion: 2
+guid: 49ffd25ff4b0ca3429d1b1e2dc0ff037
+timeCreated: 1524300423
+licenseType: Pro
+MonoImporter:
+  externalObjects: {}
+  serializedVersion: 2
+  defaultReferences: []
+  executionOrder: 0
+  icon: {instanceID: 0}
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/CodeMonkey/Utils/World_Sprite.cs.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/World_Sprite.cs.meta	(date 1602120286243)
+++ Assets/CodeMonkey/Utils/World_Sprite.cs.meta	(date 1602120286243)
@@ -0,0 +1,13 @@
+fileFormatVersion: 2
+guid: 1460472c3006fb44daea959dda2c4d81
+timeCreated: 1524300280
+licenseType: Pro
+MonoImporter:
+  externalObjects: {}
+  serializedVersion: 2
+  defaultReferences: []
+  executionOrder: 0
+  icon: {instanceID: 0}
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/CodeMonkey/Utils/World_Bar.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/World_Bar.cs	(date 1602120286241)
+++ Assets/CodeMonkey/Utils/World_Bar.cs	(date 1602120286241)
@@ -0,0 +1,96 @@
+/* 
+    ------------------- Code Monkey -------------------
+
+    Thank you for downloading the Code Monkey Utilities
+    I hope you find them useful in your projects
+    If you have any questions use the contact form
+    Cheers!
+
+               unitycodemonkey.com
+    --------------------------------------------------
+ */
+
+using UnityEngine;
+
+namespace CodeMonkey.Utils {
+
+    /*
+     * Bar in the World, great for quickly making a health bar
+     * */
+    public class World_Bar {
+        
+        private GameObject gameObject;
+        private Transform transform;
+        private Transform background;
+        private Transform bar;
+
+        public static int GetSortingOrder(Vector3 position, int offset, int baseSortingOrder = 5000) {
+            return (int)(baseSortingOrder - position.y) + offset;
+        }
+
+        public class Outline {
+            public float size = 1f;
+            public Color color = Color.black;
+        }
+
+        public World_Bar(Transform parent, Vector3 localPosition, Vector3 localScale, Color? backgroundColor, Color barColor, float sizeRatio, int sortingOrder, Outline outline = null) {
+            SetupParent(parent, localPosition);
+            if (outline != null) SetupOutline(outline, localScale, sortingOrder - 1);
+            if (backgroundColor != null) SetupBackground((Color)backgroundColor, localScale, sortingOrder);
+            SetupBar(barColor, localScale, sortingOrder + 1);
+            SetSize(sizeRatio);
+        }
+        private void SetupParent(Transform parent, Vector3 localPosition) {
+            gameObject = new GameObject("World_Bar");
+            transform = gameObject.transform;
+            transform.SetParent(parent);
+            transform.localPosition = localPosition;
+        }
+        private void SetupOutline(Outline outline, Vector3 localScale, int sortingOrder) {
+            UtilsClass.CreateWorldSprite(transform, "Outline", Assets.i.s_White, new Vector3(0,0), localScale + new Vector3(outline.size, outline.size), sortingOrder, outline.color);
+        }
+        private void SetupBackground(Color backgroundColor, Vector3 localScale, int sortingOrder) {
+            background = UtilsClass.CreateWorldSprite(transform, "Background", Assets.i.s_White, new Vector3(0,0), localScale, sortingOrder, backgroundColor).transform;
+        }
+        private void SetupBar(Color barColor, Vector3 localScale, int sortingOrder) {
+            GameObject barGO = new GameObject("Bar");
+            bar = barGO.transform;
+            bar.SetParent(transform);
+            bar.localPosition = new Vector3(-localScale.x / 2f, 0, 0);
+            bar.localScale = new Vector3(1,1,1);
+            Transform barIn = UtilsClass.CreateWorldSprite(bar, "BarIn", Assets.i.s_White, new Vector3(localScale.x / 2f, 0), localScale, sortingOrder, barColor).transform;
+        }
+        public void SetRotation(float rotation) {
+            transform.localEulerAngles = new Vector3(0, 0, rotation);
+        }
+        public void SetSize(float sizeRatio) {
+            bar.localScale = new Vector3(sizeRatio, 1, 1);
+        }
+        public void SetColor(Color color) {
+            bar.Find("BarIn").GetComponent<SpriteRenderer>().color = color;
+        }
+        public void Show() {
+            gameObject.SetActive(true);
+        }
+        public void Hide() {
+            gameObject.SetActive(false);
+        }
+        public Button_Sprite AddButton(System.Action ClickFunc, System.Action MouseOverOnceFunc, System.Action MouseOutOnceFunc) {
+            Button_Sprite buttonSprite = gameObject.AddComponent<Button_Sprite>();
+            if (ClickFunc != null)
+                buttonSprite.ClickFunc = ClickFunc;
+            if (MouseOverOnceFunc != null)
+                buttonSprite.MouseOverOnceFunc = MouseOverOnceFunc;
+            if (MouseOutOnceFunc != null)
+                buttonSprite.MouseOutOnceFunc = MouseOutOnceFunc;
+            return buttonSprite;
+        }
+        public void DestroySelf() {
+            if (gameObject != null) {
+                Object.Destroy(gameObject);
+            }
+        }
+
+    }
+    
+}
Index: Assets/CodeMonkey/Utils/FunctionPeriodic.cs.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/FunctionPeriodic.cs.meta	(date 1602120286232)
+++ Assets/CodeMonkey/Utils/FunctionPeriodic.cs.meta	(date 1602120286232)
@@ -0,0 +1,8 @@
+fileFormatVersion: 2
+guid: f522bd6f08a5c984a9512bb60ebc1818
+MonoImporter:
+  serializedVersion: 2
+  defaultReferences: []
+  executionOrder: 0
+  icon: {instanceID: 0}
+  userData: 
Index: Assets/TestGUI.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing Characters;\nusing UnityEngine;\n\npublic class TestGUI : MonoBehaviour\n{\n    private BaseCharacter Char1 = new BaseFire();\n    private BaseCharacter Char2 = new BaseAir();\n    private BaseCharacter Char3 = new BaseWater();\n    private BaseCharacter Char4 = new BaseEarth();\n    private void Start()\n    {\n    }\n\n    private void Update()\n    {\n    }\n\n    private void OnGUI()\n    {\n        GUILayout.Label(Char1.CharacterElementType);\n        GUILayout.Label(Char1.CharacterDescription);\n        GUILayout.Label(Char2.CharacterElementType);\n        GUILayout.Label(Char2.CharacterDescription);\n        GUILayout.Label(Char3.CharacterElementType);\n        GUILayout.Label(Char3.CharacterDescription);\n        GUILayout.Label(Char4.CharacterElementType);\n        GUILayout.Label(Char4.CharacterDescription);\n        \n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/TestGUI.cs	(revision c48c6c44b412e2223cd63bb83caac2f8baf651f2)
+++ Assets/TestGUI.cs	(date 1602120286250)
@@ -1,33 +1,33 @@
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using Characters;
-using UnityEngine;
+// using System;
+// using System.Collections;
+// using System.Collections.Generic;
+// using Characters;
+// using UnityEngine;
 
-public class TestGUI : MonoBehaviour
-{
-    private BaseCharacter Char1 = new BaseFire();
-    private BaseCharacter Char2 = new BaseAir();
-    private BaseCharacter Char3 = new BaseWater();
-    private BaseCharacter Char4 = new BaseEarth();
-    private void Start()
-    {
-    }
+// public class TestGUI : MonoBehaviour
+// {
+//     private BaseCharacter Char1 = new BaseFire();
+//     private BaseCharacter Char2 = new BaseAir();
+//     private BaseCharacter Char3 = new BaseWater();
+//     private BaseCharacter Char4 = new BaseEarth();
+//     private void Start()
+//     {
+//     }
 
-    private void Update()
-    {
-    }
+//     private void Update()
+//     {
+//     }
 
-    private void OnGUI()
-    {
-        GUILayout.Label(Char1.CharacterElementType);
-        GUILayout.Label(Char1.CharacterDescription);
-        GUILayout.Label(Char2.CharacterElementType);
-        GUILayout.Label(Char2.CharacterDescription);
-        GUILayout.Label(Char3.CharacterElementType);
-        GUILayout.Label(Char3.CharacterDescription);
-        GUILayout.Label(Char4.CharacterElementType);
-        GUILayout.Label(Char4.CharacterDescription);
+//     private void OnGUI()
+//     {
+//         GUILayout.Label(Char1.CharacterElementType);
+//         GUILayout.Label(Char1.CharacterDescription);
+//         GUILayout.Label(Char2.CharacterElementType);
+//         GUILayout.Label(Char2.CharacterDescription);
+//         GUILayout.Label(Char3.CharacterElementType);
+//         GUILayout.Label(Char3.CharacterDescription);
+//         GUILayout.Label(Char4.CharacterElementType);
+//         GUILayout.Label(Char4.CharacterDescription);
         
-    }
-}
\ No newline at end of file
+//     }
+// }
\ No newline at end of file
Index: Assets/CodeMonkey/Utils/FunctionTimer.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/FunctionTimer.cs	(date 1602120286233)
+++ Assets/CodeMonkey/Utils/FunctionTimer.cs	(date 1602120286233)
@@ -0,0 +1,170 @@
+/* 
+    ------------------- Code Monkey -------------------
+
+    Thank you for downloading the Code Monkey Utilities
+    I hope you find them useful in your projects
+    If you have any questions use the contact form
+    Cheers!
+
+               unitycodemonkey.com
+    --------------------------------------------------
+ */
+
+using System;
+using UnityEngine;
+using System.Collections.Generic;
+
+namespace CodeMonkey.Utils {
+
+    /*
+     * Triggers a Action after a certain time 
+     * */
+    public class FunctionTimer {
+
+        /*
+         * Class to hook Actions into MonoBehaviour
+         * */
+        private class MonoBehaviourHook : MonoBehaviour {
+
+            public Action OnUpdate;
+
+            private void Update() {
+                if (OnUpdate != null) OnUpdate();
+            }
+
+        }
+
+
+        private static List<FunctionTimer> timerList; // Holds a reference to all active timers
+        private static GameObject initGameObject; // Global game object used for initializing class, is destroyed on scene change
+
+        private static void InitIfNeeded() {
+            if (initGameObject == null) {
+                initGameObject = new GameObject("FunctionTimer_Global");
+                timerList = new List<FunctionTimer>();
+            }
+        }
+
+
+
+
+        public static FunctionTimer Create(Action action, float timer) {
+            return Create(action, timer, "", false, false);
+        }
+        public static FunctionTimer Create(Action action, float timer, string functionName) {
+            return Create(action, timer, functionName, false, false);
+        }
+        public static FunctionTimer Create(Action action, float timer, string functionName, bool useUnscaledDeltaTime) {
+            return Create(action, timer, functionName, useUnscaledDeltaTime, false);
+        }
+        public static FunctionTimer Create(Action action, float timer, string functionName, bool useUnscaledDeltaTime, bool stopAllWithSameName) {
+            InitIfNeeded();
+
+            if (stopAllWithSameName) {
+                StopAllTimersWithName(functionName);
+            }
+
+            GameObject obj = new GameObject("FunctionTimer Object "+functionName, typeof(MonoBehaviourHook));
+            FunctionTimer funcTimer = new FunctionTimer(obj, action, timer, functionName, useUnscaledDeltaTime);
+            obj.GetComponent<MonoBehaviourHook>().OnUpdate = funcTimer.Update;
+
+            timerList.Add(funcTimer);
+
+            return funcTimer;
+        }
+        public static void RemoveTimer(FunctionTimer funcTimer) {
+            InitIfNeeded();
+            timerList.Remove(funcTimer);
+        }
+        public static void StopAllTimersWithName(string functionName) {
+            InitIfNeeded();
+            for (int i = 0; i < timerList.Count; i++) {
+                if (timerList[i].functionName == functionName) {
+                    timerList[i].DestroySelf();
+                    i--;
+                }
+            }
+        }
+        public static void StopFirstTimerWithName(string functionName) {
+            InitIfNeeded();
+            for (int i = 0; i < timerList.Count; i++) {
+                if (timerList[i].functionName == functionName) {
+                    timerList[i].DestroySelf();
+                    return;
+                }
+            }
+        }
+
+
+
+
+
+        private GameObject gameObject;
+        private float timer;
+        private string functionName;
+        private bool active;
+        private bool useUnscaledDeltaTime;
+        private Action action;
+
+
+
+        public FunctionTimer(GameObject gameObject, Action action, float timer, string functionName, bool useUnscaledDeltaTime) {
+            this.gameObject = gameObject;
+            this.action = action;
+            this.timer = timer;
+            this.functionName = functionName;
+            this.useUnscaledDeltaTime = useUnscaledDeltaTime;
+        }
+
+        private void Update() {
+            if (useUnscaledDeltaTime) {
+                timer -= Time.unscaledDeltaTime;
+            } else {
+                timer -= Time.deltaTime;
+            }
+            if (timer <= 0) {
+                // Timer complete, trigger Action
+                action();
+                DestroySelf();
+            }
+        }
+        private void DestroySelf() {
+            RemoveTimer(this);
+            if (gameObject != null) {
+                UnityEngine.Object.Destroy(gameObject);
+            }
+        }
+
+
+
+
+        /*
+         * Class to trigger Actions manually without creating a GameObject
+         * */
+        public class FunctionTimerObject {
+
+            private float timer;
+            private Action callback;
+
+            public FunctionTimerObject(Action callback, float timer) {
+                this.callback = callback;
+                this.timer = timer;
+            }
+
+            public void Update() {
+                Update(Time.deltaTime);
+            }
+            public void Update(float deltaTime) {
+                timer -= deltaTime;
+                if (timer <= 0) {
+                    callback();
+                }
+            }
+        }
+
+        // Create a Object that must be manually updated through Update();
+        public static FunctionTimerObject CreateObject(Action callback, float timer) {
+            return new FunctionTimerObject(callback, timer);
+        }
+    }
+}
\ No newline at end of file
Index: Assets/CodeMonkey/Utils/Button_Sprite.cs.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/Button_Sprite.cs.meta	(date 1602120286229)
+++ Assets/CodeMonkey/Utils/Button_Sprite.cs.meta	(date 1602120286229)
@@ -0,0 +1,12 @@
+fileFormatVersion: 2
+guid: 4771330f098d1db4898ad07204154d04
+timeCreated: 1513255758
+licenseType: Pro
+MonoImporter:
+  serializedVersion: 2
+  defaultReferences: []
+  executionOrder: 0
+  icon: {instanceID: 0}
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/CodeMonkey/Utils/Button_Sprite.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/Button_Sprite.cs	(date 1602120286228)
+++ Assets/CodeMonkey/Utils/Button_Sprite.cs	(date 1602120286228)
@@ -0,0 +1,211 @@
+/* 
+    ------------------- Code Monkey -------------------
+
+    Thank you for downloading the Code Monkey Utilities
+    I hope you find them useful in your projects
+    If you have any questions use the contact form
+    Cheers!
+
+               unitycodemonkey.com
+    --------------------------------------------------
+ */
+ 
+//#define SOUND_MANAGER // Has Sound_Manager in project
+//#define CURSOR_MANAGER // Has Cursor_Manager in project
+
+using System;
+using UnityEngine;
+using System.Collections.Generic;
+using UnityEngine.EventSystems;
+
+namespace CodeMonkey.Utils {
+
+    /*
+     * Button Actions on a World BoxCollider
+     * */
+    public class Button_Sprite : MonoBehaviour {
+
+        private static Func<Camera> GetWorldCamera;
+
+        public static void SetGetWorldCamera(Func<Camera> GetWorldCamera) {
+            Button_Sprite.GetWorldCamera = GetWorldCamera;
+        }
+
+
+
+
+
+        public Action ClickFunc = null;
+        public Action MouseRightDownOnceFunc = null;
+        public Action MouseRightDownFunc = null;
+        public Action MouseRightUpFunc = null;
+        public Action MouseDownOnceFunc = null;
+        public Action MouseUpOnceFunc = null;
+        public Action MouseOverOnceFunc = null;
+        public Action MouseOutOnceFunc = null;
+        public Action MouseOverOnceTooltipFunc = null;
+        public Action MouseOutOnceTooltipFunc = null;
+
+        private bool draggingMouseRight;
+        private Vector3 mouseRightDragStart;
+        public Action<Vector3, Vector3> MouseRightDragFunc = null;
+        public Action<Vector3, Vector3> MouseRightDragUpdateFunc = null;
+        public bool triggerMouseRightDragOnEnter = false;
+
+        public enum HoverBehaviour {
+            Custom,
+            Change_Color,
+            Change_Image,
+            Change_SetActive,
+        }
+        public HoverBehaviour hoverBehaviourType = HoverBehaviour.Custom;
+        private Action hoverBehaviourFunc_Enter, hoverBehaviourFunc_Exit;
+
+        public Color hoverBehaviour_Color_Enter = new Color(1, 1, 1, 1), hoverBehaviour_Color_Exit = new Color(1, 1, 1, 1);
+        public SpriteRenderer hoverBehaviour_Image;
+        public Sprite hoverBehaviour_Sprite_Exit, hoverBehaviour_Sprite_Enter;
+        public bool hoverBehaviour_Move = false;
+        public Vector2 hoverBehaviour_Move_Amount = Vector2.zero;
+        private Vector3 posExit, posEnter;
+        public bool triggerMouseOutFuncOnClick = false;
+        public bool clickThroughUI = false;
+
+        private Action internalOnMouseDownFunc, internalOnMouseEnterFunc, internalOnMouseExitFunc;
+
+#if SOUND_MANAGER
+        public Sound_Manager.Sound mouseOverSound, mouseClickSound;
+#endif
+#if CURSOR_MANAGER
+        public CursorManager.CursorType cursorMouseOver, cursorMouseOut;
+#endif
+
+
+
+
+        public void SetHoverBehaviourChangeColor(Color colorOver, Color colorOut) {
+            hoverBehaviourType = HoverBehaviour.Change_Color;
+            hoverBehaviour_Color_Enter = colorOver;
+            hoverBehaviour_Color_Exit = colorOut;
+            if (hoverBehaviour_Image == null) hoverBehaviour_Image = transform.GetComponent<SpriteRenderer>();
+            hoverBehaviour_Image.color = hoverBehaviour_Color_Exit;
+            SetupHoverBehaviour();
+        }
+        void OnMouseDown() {
+            if (!clickThroughUI && IsPointerOverUI()) return; // Over UI!
+
+            if (internalOnMouseDownFunc != null) internalOnMouseDownFunc();
+            if (ClickFunc != null) ClickFunc();
+            if (triggerMouseOutFuncOnClick) OnMouseExit();
+        }
+        public void Manual_OnMouseExit() {
+            OnMouseExit();
+        }
+        void OnMouseUp() {
+            if (MouseUpOnceFunc != null) MouseUpOnceFunc();
+        }
+        void OnMouseEnter() {
+            if (!clickThroughUI && IsPointerOverUI()) return; // Over UI!
+            
+            if (internalOnMouseEnterFunc != null) internalOnMouseEnterFunc();
+            if (hoverBehaviour_Move) transform.localPosition = posEnter;
+            if (hoverBehaviourFunc_Enter != null) hoverBehaviourFunc_Enter();
+            if (MouseOverOnceFunc != null) MouseOverOnceFunc();
+            if (MouseOverOnceTooltipFunc != null) MouseOverOnceTooltipFunc();
+        }
+        void OnMouseExit() {
+            if (internalOnMouseExitFunc != null) internalOnMouseExitFunc();
+            if (hoverBehaviour_Move) transform.localPosition = posExit;
+            if (hoverBehaviourFunc_Exit != null) hoverBehaviourFunc_Exit();
+            if (MouseOutOnceFunc != null) MouseOutOnceFunc();
+            if (MouseOutOnceTooltipFunc != null) MouseOutOnceTooltipFunc();
+        }
+
+        void OnMouseOver() {
+            if (!clickThroughUI && IsPointerOverUI()) return; // Over UI!
+
+            if (Input.GetMouseButton(1)) {
+                if (MouseRightDownFunc != null) MouseRightDownFunc();
+                if (!draggingMouseRight && triggerMouseRightDragOnEnter) {
+                    draggingMouseRight = true;
+                    mouseRightDragStart = GetWorldPositionFromUI();
+                }
+            }
+            if (Input.GetMouseButtonDown(1)) {
+                draggingMouseRight = true;
+                mouseRightDragStart = GetWorldPositionFromUI();
+                if (MouseRightDownOnceFunc != null) MouseRightDownOnceFunc();
+            }
+        }
+        void Update() {
+            if (draggingMouseRight) {
+                if (MouseRightDragUpdateFunc != null) MouseRightDragUpdateFunc(mouseRightDragStart, GetWorldPositionFromUI());
+            }
+            if (Input.GetMouseButtonUp(1)) {
+                if (draggingMouseRight) {
+                    draggingMouseRight = false;
+                    if (MouseRightDragFunc != null) MouseRightDragFunc(mouseRightDragStart, GetWorldPositionFromUI());
+                }
+                if (MouseRightUpFunc != null) MouseRightUpFunc();
+            }
+        }
+
+
+        void Awake() {
+            if (GetWorldCamera == null) SetGetWorldCamera(() => Camera.main); // Set default World Camera
+            posExit = transform.localPosition;
+            posEnter = transform.localPosition + (Vector3)hoverBehaviour_Move_Amount;
+            SetupHoverBehaviour();
+
+#if SOUND_MANAGER
+            // Sound Manager
+            internalOnMouseDownFunc += () => { if (mouseClickSound != Sound_Manager.Sound.None) Sound_Manager.PlaySound(mouseClickSound); };
+            internalOnMouseEnterFunc += () => { if (mouseOverSound != Sound_Manager.Sound.None) Sound_Manager.PlaySound(mouseOverSound); };
+#endif
+
+#if CURSOR_MANAGER
+            // Cursor Manager
+            internalOnMouseExitFunc += () => { if (cursorMouseOut != CursorManager.CursorType.None) CursorManager.SetCursor(cursorMouseOut); };
+            internalOnMouseEnterFunc += () => { if (cursorMouseOver != CursorManager.CursorType.None) CursorManager.SetCursor(cursorMouseOver); };
+#endif
+        }
+        private void SetupHoverBehaviour() {
+            switch (hoverBehaviourType) {
+            case HoverBehaviour.Change_Color:
+                hoverBehaviourFunc_Enter = delegate () { hoverBehaviour_Image.color = hoverBehaviour_Color_Enter; };
+                hoverBehaviourFunc_Exit = delegate () { hoverBehaviour_Image.color = hoverBehaviour_Color_Exit; };
+                break;
+            case HoverBehaviour.Change_Image:
+                hoverBehaviourFunc_Enter = delegate () { hoverBehaviour_Image.sprite = hoverBehaviour_Sprite_Enter; };
+                hoverBehaviourFunc_Exit = delegate () { hoverBehaviour_Image.sprite = hoverBehaviour_Sprite_Exit; };
+                break;
+            case HoverBehaviour.Change_SetActive:
+                hoverBehaviourFunc_Enter = delegate () { hoverBehaviour_Image.gameObject.SetActive(true); };
+                hoverBehaviourFunc_Exit = delegate () { hoverBehaviour_Image.gameObject.SetActive(false); };
+                break;
+            }
+        }
+
+
+
+
+
+
+
+        private static Vector3 GetWorldPositionFromUI() {
+            Vector3 worldPosition = GetWorldCamera().ScreenToWorldPoint(Input.mousePosition);
+            return worldPosition;
+        }
+        private static bool IsPointerOverUI() {
+            if (EventSystem.current.IsPointerOverGameObject()) {
+                return true;
+            } else {
+                PointerEventData pe = new PointerEventData(EventSystem.current);
+                pe.position = Input.mousePosition;
+                List<RaycastResult> hits = new List<RaycastResult>();
+                EventSystem.current.RaycastAll(pe, hits);
+                return hits.Count > 0;
+            }
+        }
+    }
+
+}
\ No newline at end of file
Index: Assets/Scenes/SampleScene.unity
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>%YAML 1.1\n%TAG !u! tag:unity3d.com,2011:\n--- !u!29 &1\nOcclusionCullingSettings:\n  m_ObjectHideFlags: 0\n  serializedVersion: 2\n  m_OcclusionBakeSettings:\n    smallestOccluder: 5\n    smallestHole: 0.25\n    backfaceThreshold: 100\n  m_SceneGUID: 00000000000000000000000000000000\n  m_OcclusionCullingData: {fileID: 0}\n--- !u!104 &2\nRenderSettings:\n  m_ObjectHideFlags: 0\n  serializedVersion: 9\n  m_Fog: 0\n  m_FogColor: {r: 0.5, g: 0.5, b: 0.5, a: 1}\n  m_FogMode: 3\n  m_FogDensity: 0.01\n  m_LinearFogStart: 0\n  m_LinearFogEnd: 300\n  m_AmbientSkyColor: {r: 0.212, g: 0.227, b: 0.259, a: 1}\n  m_AmbientEquatorColor: {r: 0.114, g: 0.125, b: 0.133, a: 1}\n  m_AmbientGroundColor: {r: 0.047, g: 0.043, b: 0.035, a: 1}\n  m_AmbientIntensity: 1\n  m_AmbientMode: 3\n  m_SubtractiveShadowColor: {r: 0.42, g: 0.478, b: 0.627, a: 1}\n  m_SkyboxMaterial: {fileID: 0}\n  m_HaloStrength: 0.5\n  m_FlareStrength: 1\n  m_FlareFadeSpeed: 3\n  m_HaloTexture: {fileID: 0}\n  m_SpotCookie: {fileID: 10001, guid: 0000000000000000e000000000000000, type: 0}\n  m_DefaultReflectionMode: 0\n  m_DefaultReflectionResolution: 128\n  m_ReflectionBounces: 1\n  m_ReflectionIntensity: 1\n  m_CustomReflection: {fileID: 0}\n  m_Sun: {fileID: 0}\n  m_IndirectSpecularColor: {r: 0, g: 0, b: 0, a: 1}\n  m_UseRadianceAmbientProbe: 0\n--- !u!157 &3\nLightmapSettings:\n  m_ObjectHideFlags: 0\n  serializedVersion: 11\n  m_GIWorkflowMode: 1\n  m_GISettings:\n    serializedVersion: 2\n    m_BounceScale: 1\n    m_IndirectOutputScale: 1\n    m_AlbedoBoost: 1\n    m_EnvironmentLightingMode: 0\n    m_EnableBakedLightmaps: 0\n    m_EnableRealtimeLightmaps: 0\n  m_LightmapEditorSettings:\n    serializedVersion: 12\n    m_Resolution: 2\n    m_BakeResolution: 40\n    m_AtlasSize: 1024\n    m_AO: 0\n    m_AOMaxDistance: 1\n    m_CompAOExponent: 1\n    m_CompAOExponentDirect: 0\n    m_ExtractAmbientOcclusion: 0\n    m_Padding: 2\n    m_LightmapParameters: {fileID: 0}\n    m_LightmapsBakeMode: 1\n    m_TextureCompression: 1\n    m_FinalGather: 0\n    m_FinalGatherFiltering: 1\n    m_FinalGatherRayCount: 256\n    m_ReflectionCompression: 2\n    m_MixedBakeMode: 2\n    m_BakeBackend: 0\n    m_PVRSampling: 1\n    m_PVRDirectSampleCount: 32\n    m_PVRSampleCount: 500\n    m_PVRBounces: 2\n    m_PVREnvironmentSampleCount: 500\n    m_PVREnvironmentReferencePointCount: 2048\n    m_PVRFilteringMode: 2\n    m_PVRDenoiserTypeDirect: 0\n    m_PVRDenoiserTypeIndirect: 0\n    m_PVRDenoiserTypeAO: 0\n    m_PVRFilterTypeDirect: 0\n    m_PVRFilterTypeIndirect: 0\n    m_PVRFilterTypeAO: 0\n    m_PVREnvironmentMIS: 0\n    m_PVRCulling: 1\n    m_PVRFilteringGaussRadiusDirect: 1\n    m_PVRFilteringGaussRadiusIndirect: 5\n    m_PVRFilteringGaussRadiusAO: 2\n    m_PVRFilteringAtrousPositionSigmaDirect: 0.5\n    m_PVRFilteringAtrousPositionSigmaIndirect: 2\n    m_PVRFilteringAtrousPositionSigmaAO: 1\n    m_ExportTrainingData: 0\n    m_TrainingDataDestination: TrainingData\n    m_LightProbeSampleCountMultiplier: 4\n  m_LightingDataAsset: {fileID: 0}\n  m_UseShadowmask: 1\n--- !u!196 &4\nNavMeshSettings:\n  serializedVersion: 2\n  m_ObjectHideFlags: 0\n  m_BuildSettings:\n    serializedVersion: 2\n    agentTypeID: 0\n    agentRadius: 0.5\n    agentHeight: 2\n    agentSlope: 45\n    agentClimb: 0.4\n    ledgeDropHeight: 0\n    maxJumpAcrossDistance: 0\n    minRegionArea: 2\n    manualCellSize: 0\n    cellSize: 0.16666667\n    manualTileSize: 0\n    tileSize: 256\n    accuratePlacement: 0\n    debug:\n      m_Flags: 0\n  m_NavMeshData: {fileID: 0}\n--- !u!1 &135492999\nGameObject:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  serializedVersion: 6\n  m_Component:\n  - component: {fileID: 135493001}\n  - component: {fileID: 135493000}\n  m_Layer: 0\n  m_Name: GameObject\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!114 &135493000\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 135492999}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: 5ea77f3f794b95b4cb75825510ca9d51, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n--- !u!4 &135493001\nTransform:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 135492999}\n  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}\n  m_LocalPosition: {x: 0, y: 0, z: 0}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_Children: []\n  m_Father: {fileID: 0}\n  m_RootOrder: 1\n  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}\n--- !u!1 &519420028\nGameObject:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  serializedVersion: 6\n  m_Component:\n  - component: {fileID: 519420032}\n  - component: {fileID: 519420031}\n  - component: {fileID: 519420029}\n  m_Layer: 0\n  m_Name: Main Camera\n  m_TagString: MainCamera\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!81 &519420029\nAudioListener:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 519420028}\n  m_Enabled: 1\n--- !u!20 &519420031\nCamera:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 519420028}\n  m_Enabled: 1\n  serializedVersion: 2\n  m_ClearFlags: 2\n  m_BackGroundColor: {r: 0.19215687, g: 0.3019608, b: 0.4745098, a: 0}\n  m_projectionMatrixMode: 1\n  m_GateFitMode: 2\n  m_FOVAxisMode: 0\n  m_SensorSize: {x: 36, y: 24}\n  m_LensShift: {x: 0, y: 0}\n  m_FocalLength: 50\n  m_NormalizedViewPortRect:\n    serializedVersion: 2\n    x: 0\n    y: 0\n    width: 1\n    height: 1\n  near clip plane: 0.3\n  far clip plane: 1000\n  field of view: 60\n  orthographic: 1\n  orthographic size: 5\n  m_Depth: -1\n  m_CullingMask:\n    serializedVersion: 2\n    m_Bits: 4294967295\n  m_RenderingPath: -1\n  m_TargetTexture: {fileID: 0}\n  m_TargetDisplay: 0\n  m_TargetEye: 0\n  m_HDR: 1\n  m_AllowMSAA: 0\n  m_AllowDynamicResolution: 0\n  m_ForceIntoRT: 0\n  m_OcclusionCulling: 0\n  m_StereoConvergence: 10\n  m_StereoSeparation: 0.022\n--- !u!4 &519420032\nTransform:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 519420028}\n  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}\n  m_LocalPosition: {x: 0, y: 0, z: -10}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_Children: []\n  m_Father: {fileID: 0}\n  m_RootOrder: 0\n  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/Scenes/SampleScene.unity	(revision c48c6c44b412e2223cd63bb83caac2f8baf651f2)
+++ Assets/Scenes/SampleScene.unity	(date 1602120286244)
@@ -132,24 +132,62 @@
   - component: {fileID: 135493001}
   - component: {fileID: 135493000}
   m_Layer: 0
-  m_Name: GameObject
+  m_Name: Background
   m_TagString: Untagged
   m_Icon: {fileID: 0}
   m_NavMeshLayer: 0
   m_StaticEditorFlags: 0
   m_IsActive: 1
---- !u!114 &135493000
-MonoBehaviour:
+--- !u!212 &135493000
+SpriteRenderer:
   m_ObjectHideFlags: 0
   m_CorrespondingSourceObject: {fileID: 0}
   m_PrefabInstance: {fileID: 0}
   m_PrefabAsset: {fileID: 0}
   m_GameObject: {fileID: 135492999}
   m_Enabled: 1
-  m_EditorHideFlags: 0
-  m_Script: {fileID: 11500000, guid: 5ea77f3f794b95b4cb75825510ca9d51, type: 3}
-  m_Name: 
-  m_EditorClassIdentifier: 
+  m_CastShadows: 0
+  m_ReceiveShadows: 0
+  m_DynamicOccludee: 1
+  m_MotionVectors: 1
+  m_LightProbeUsage: 1
+  m_ReflectionProbeUsage: 1
+  m_RayTracingMode: 0
+  m_RenderingLayerMask: 1
+  m_RendererPriority: 0
+  m_Materials:
+  - {fileID: 10754, guid: 0000000000000000f000000000000000, type: 0}
+  m_StaticBatchInfo:
+    firstSubMesh: 0
+    subMeshCount: 0
+  m_StaticBatchRoot: {fileID: 0}
+  m_ProbeAnchor: {fileID: 0}
+  m_LightProbeVolumeOverride: {fileID: 0}
+  m_ScaleInLightmap: 1
+  m_ReceiveGI: 1
+  m_PreserveUVs: 0
+  m_IgnoreNormalsForChartDetection: 0
+  m_ImportantGI: 0
+  m_StitchLightmapSeams: 1
+  m_SelectedEditorRenderState: 0
+  m_MinimumChartSize: 4
+  m_AutoUVMaxDistance: 0.5
+  m_AutoUVMaxAngle: 89
+  m_LightmapParameters: {fileID: 0}
+  m_SortingLayerID: -748636583
+  m_SortingLayer: -1
+  m_SortingOrder: 0
+  m_Sprite: {fileID: 21300000, guid: 3a8aacd64030e014da12c352feb62002, type: 3}
+  m_Color: {r: 0.32168195, g: 0.5943396, b: 0.23268954, a: 1}
+  m_FlipX: 0
+  m_FlipY: 0
+  m_DrawMode: 0
+  m_Size: {x: 0.01, y: 0.01}
+  m_AdaptiveModeThreshold: 0.5
+  m_SpriteTileMode: 0
+  m_WasSpriteAssigned: 1
+  m_MaskInteraction: 0
+  m_SpriteSortPoint: 0
 --- !u!4 &135493001
 Transform:
   m_ObjectHideFlags: 0
@@ -158,11 +196,41 @@
   m_PrefabAsset: {fileID: 0}
   m_GameObject: {fileID: 135492999}
   m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}
-  m_LocalPosition: {x: 0, y: 0, z: 0}
+  m_LocalPosition: {x: -0.02, y: 0.16, z: 0}
+  m_LocalScale: {x: 2872.0493, y: 1356.0658, z: 1}
+  m_Children: []
+  m_Father: {fileID: 0}
+  m_RootOrder: 0
+  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
+--- !u!1 &320748448
+GameObject:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  serializedVersion: 6
+  m_Component:
+  - component: {fileID: 320748449}
+  m_Layer: 0
+  m_Name: Pointer
+  m_TagString: Untagged
+  m_Icon: {fileID: -964228994112308473, guid: 0000000000000000d000000000000000, type: 0}
+  m_NavMeshLayer: 0
+  m_StaticEditorFlags: 4294967295
+  m_IsActive: 1
+--- !u!4 &320748449
+Transform:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  m_GameObject: {fileID: 320748448}
+  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}
+  m_LocalPosition: {x: -0.2778266, y: 0.028401965, z: -369.8955}
   m_LocalScale: {x: 1, y: 1, z: 1}
   m_Children: []
   m_Father: {fileID: 0}
-  m_RootOrder: 1
+  m_RootOrder: 2
   m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
 --- !u!1 &519420028
 GameObject:
@@ -240,10 +308,122 @@
   m_PrefabInstance: {fileID: 0}
   m_PrefabAsset: {fileID: 0}
   m_GameObject: {fileID: 519420028}
+  m_LocalRotation: {x: -0, y: -0, z: -0, w: 1}
+  m_LocalPosition: {x: 1.6585187, y: -0.08937156, z: 362.34506}
+  m_LocalScale: {x: 1, y: 1, z: 1}
+  m_Children: []
+  m_Father: {fileID: 623252151}
+  m_RootOrder: 0
+  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
+--- !u!1 &623252150
+GameObject:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  serializedVersion: 6
+  m_Component:
+  - component: {fileID: 623252151}
+  m_Layer: 0
+  m_Name: GameObject
+  m_TagString: Untagged
+  m_Icon: {fileID: 0}
+  m_NavMeshLayer: 0
+  m_StaticEditorFlags: 0
+  m_IsActive: 1
+--- !u!4 &623252151
+Transform:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  m_GameObject: {fileID: 623252150}
   m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}
-  m_LocalPosition: {x: 0, y: 0, z: -10}
+  m_LocalPosition: {x: -1.6585187, y: 0.08937156, z: -372.34506}
   m_LocalScale: {x: 1, y: 1, z: 1}
+  m_Children:
+  - {fileID: 519420032}
+  m_Father: {fileID: 0}
+  m_RootOrder: 3
+  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
+--- !u!1 &866284773
+GameObject:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  serializedVersion: 6
+  m_Component:
+  - component: {fileID: 866284775}
+  - component: {fileID: 866284774}
+  m_Layer: 0
+  m_Name: Player
+  m_TagString: Untagged
+  m_Icon: {fileID: 0}
+  m_NavMeshLayer: 0
+  m_StaticEditorFlags: 0
+  m_IsActive: 1
+--- !u!212 &866284774
+SpriteRenderer:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  m_GameObject: {fileID: 866284773}
+  m_Enabled: 1
+  m_CastShadows: 0
+  m_ReceiveShadows: 0
+  m_DynamicOccludee: 1
+  m_MotionVectors: 1
+  m_LightProbeUsage: 1
+  m_ReflectionProbeUsage: 1
+  m_RayTracingMode: 0
+  m_RenderingLayerMask: 1
+  m_RendererPriority: 0
+  m_Materials:
+  - {fileID: 10754, guid: 0000000000000000f000000000000000, type: 0}
+  m_StaticBatchInfo:
+    firstSubMesh: 0
+    subMeshCount: 0
+  m_StaticBatchRoot: {fileID: 0}
+  m_ProbeAnchor: {fileID: 0}
+  m_LightProbeVolumeOverride: {fileID: 0}
+  m_ScaleInLightmap: 1
+  m_ReceiveGI: 1
+  m_PreserveUVs: 0
+  m_IgnoreNormalsForChartDetection: 0
+  m_ImportantGI: 0
+  m_StitchLightmapSeams: 1
+  m_SelectedEditorRenderState: 0
+  m_MinimumChartSize: 4
+  m_AutoUVMaxDistance: 0.5
+  m_AutoUVMaxAngle: 89
+  m_LightmapParameters: {fileID: 0}
+  m_SortingLayerID: -400949905
+  m_SortingLayer: 1
+  m_SortingOrder: 0
+  m_Sprite: {fileID: 21300000, guid: 3a8aacd64030e014da12c352feb62002, type: 3}
+  m_Color: {r: 0.7169812, g: 0.22659309, b: 0.62645465, a: 1}
+  m_FlipX: 0
+  m_FlipY: 0
+  m_DrawMode: 0
+  m_Size: {x: 0.01, y: 0.01}
+  m_AdaptiveModeThreshold: 0.5
+  m_SpriteTileMode: 0
+  m_WasSpriteAssigned: 1
+  m_MaskInteraction: 0
+  m_SpriteSortPoint: 0
+--- !u!4 &866284775
+Transform:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  m_GameObject: {fileID: 866284773}
+  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}
+  m_LocalPosition: {x: -4.16, y: -1.71, z: 0}
+  m_LocalScale: {x: 99.84145, y: 192.88522, z: 1}
   m_Children: []
   m_Father: {fileID: 0}
-  m_RootOrder: 0
+  m_RootOrder: 1
   m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
Index: Assets/CodeMonkey/Utils/UI_Sprite.cs.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/UI_Sprite.cs.meta	(date 1602120286239)
+++ Assets/CodeMonkey/Utils/UI_Sprite.cs.meta	(date 1602120286239)
@@ -0,0 +1,13 @@
+fileFormatVersion: 2
+guid: d0052e8fbe8cbcd4d8c48038d364333b
+timeCreated: 1524300216
+licenseType: Pro
+MonoImporter:
+  externalObjects: {}
+  serializedVersion: 2
+  defaultReferences: []
+  executionOrder: 0
+  icon: {instanceID: 0}
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/Characters/BaseAir.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\nnamespace Characters\n{\n//inherites base character class\n    public class BaseAir : BaseCharacter\n    {\n        public BaseAir()\n        {\n            CharacterElementType = \"Air\";\n            CharacterDescription = \"it's not lit.\";\n            level = 1;\n            hp = 10;\n            attack = 2;\n            defense = 4;\n            speed = 5;\n            accuracy = 5;\n        } //end of Air\n\n    } //end of BaseAir\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/Characters/BaseAir.cs	(revision c48c6c44b412e2223cd63bb83caac2f8baf651f2)
+++ Assets/Characters/BaseAir.cs	(date 1602120286202)
@@ -1,24 +1,24 @@
-using System.Collections;
-using System.Collections.Generic;
-using UnityEngine;
+// using System.Collections;
+// using System.Collections.Generic;
+// using UnityEngine;
 
-namespace Characters
-{
-//inherites base character class
-    public class BaseAir : BaseCharacter
-    {
-        public BaseAir()
-        {
-            CharacterElementType = "Air";
-            CharacterDescription = "it's not lit.";
-            level = 1;
-            hp = 10;
-            attack = 2;
-            defense = 4;
-            speed = 5;
-            accuracy = 5;
-        } //end of Air
+// namespace Characters
+// {
+// //inherites base character class
+//     public class BaseAir : BaseCharacter
+//     {
+//         public BaseAir()
+//         {
+//             CharacterElementType = "Air";
+//             CharacterDescription = "it's not lit.";
+//             level = 1;
+//             hp = 10;
+//             attack = 2;
+//             defense = 4;
+//             speed = 5;
+//             accuracy = 5;
+//         } //end of Air
 
-    } //end of BaseAir
+//     } //end of BaseAir
 
-}
\ No newline at end of file
+// }
\ No newline at end of file
Index: Assets/CodeMonkey/Utils/UtilsClass.cs.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/UtilsClass.cs.meta	(date 1602120286241)
+++ Assets/CodeMonkey/Utils/UtilsClass.cs.meta	(date 1602120286241)
@@ -0,0 +1,13 @@
+fileFormatVersion: 2
+guid: ce2355f335dcae94abba806390b1bd76
+timeCreated: 1524300728
+licenseType: Pro
+MonoImporter:
+  externalObjects: {}
+  serializedVersion: 2
+  defaultReferences: []
+  executionOrder: 0
+  icon: {instanceID: 0}
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/CodeMonkey/Utils/FunctionPeriodic.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/FunctionPeriodic.cs	(date 1602120286231)
+++ Assets/CodeMonkey/Utils/FunctionPeriodic.cs	(date 1602120286231)
@@ -0,0 +1,177 @@
+/* 
+    ------------------- Code Monkey -------------------
+
+    Thank you for downloading the Code Monkey Utilities
+    I hope you find them useful in your projects
+    If you have any questions use the contact form
+    Cheers!
+
+               unitycodemonkey.com
+    --------------------------------------------------
+ */
+
+using System;
+using System.Collections.Generic;
+using UnityEngine;
+
+namespace CodeMonkey.Utils {
+
+    /*
+     * Executes a Function periodically
+     * */
+    public class FunctionPeriodic {
+
+        /*
+         * Class to hook Actions into MonoBehaviour
+         * */
+        private class MonoBehaviourHook : MonoBehaviour {
+
+            public Action OnUpdate;
+
+            private void Update() {
+                if (OnUpdate != null) OnUpdate();
+            }
+
+        }
+
+
+        private static List<FunctionPeriodic> funcList; // Holds a reference to all active timers
+        private static GameObject initGameObject; // Global game object used for initializing class, is destroyed on scene change
+
+        private static void InitIfNeeded() {
+            if (initGameObject == null) {
+                initGameObject = new GameObject("FunctionPeriodic_Global");
+                funcList = new List<FunctionPeriodic>();
+            }
+        }
+
+
+
+        // Persist through scene loads
+        public static FunctionPeriodic Create_Global(Action action, Func<bool> testDestroy, float timer) {
+            FunctionPeriodic functionPeriodic = Create(action, testDestroy, timer, "", false, false, false);
+            MonoBehaviour.DontDestroyOnLoad(functionPeriodic.gameObject);
+            return functionPeriodic;
+        }
+
+
+        // Trigger [action] every [timer], execute [testDestroy] after triggering action, destroy if returns true
+        public static FunctionPeriodic Create(Action action, Func<bool> testDestroy, float timer) {
+            return Create(action, testDestroy, timer, "", false);
+        }
+
+        public static FunctionPeriodic Create(Action action, float timer) {
+            return Create(action, null, timer, "", false, false, false);
+        }
+
+        public static FunctionPeriodic Create(Action action, float timer, string functionName) {
+            return Create(action, null, timer, functionName, false, false, false);
+        }
+
+        public static FunctionPeriodic Create(Action callback, Func<bool> testDestroy, float timer, string functionName, bool stopAllWithSameName) {
+            return Create(callback, testDestroy, timer, functionName, false, false, stopAllWithSameName);
+        }
+
+        public static FunctionPeriodic Create(Action action, Func<bool> testDestroy, float timer, string functionName, bool useUnscaledDeltaTime, bool triggerImmediately, bool stopAllWithSameName) {
+            InitIfNeeded();
+
+            if (stopAllWithSameName) {
+                StopAllFunc(functionName);
+            }
+
+            GameObject gameObject = new GameObject("FunctionPeriodic Object " + functionName, typeof(MonoBehaviourHook));
+            FunctionPeriodic functionPeriodic = new FunctionPeriodic(gameObject, action, timer, testDestroy, functionName, useUnscaledDeltaTime);
+            gameObject.GetComponent<MonoBehaviourHook>().OnUpdate = functionPeriodic.Update;
+
+            funcList.Add(functionPeriodic);
+
+            if (triggerImmediately) action();
+
+            return functionPeriodic;
+        }
+
+
+
+
+        public static void RemoveTimer(FunctionPeriodic funcTimer) {
+            InitIfNeeded();
+            funcList.Remove(funcTimer);
+        }
+        public static void StopTimer(string _name) {
+            InitIfNeeded();
+            for (int i = 0; i < funcList.Count; i++) {
+                if (funcList[i].functionName == _name) {
+                    funcList[i].DestroySelf();
+                    return;
+                }
+            }
+        }
+        public static void StopAllFunc(string _name) {
+            InitIfNeeded();
+            for (int i = 0; i < funcList.Count; i++) {
+                if (funcList[i].functionName == _name) {
+                    funcList[i].DestroySelf();
+                    i--;
+                }
+            }
+        }
+        public static bool IsFuncActive(string name) {
+            InitIfNeeded();
+            for (int i = 0; i < funcList.Count; i++) {
+                if (funcList[i].functionName == name) {
+                    return true;
+                }
+            }
+            return false;
+        }
+
+
+
+
+        private GameObject gameObject;
+        private float timer;
+        private float baseTimer;
+        private bool useUnscaledDeltaTime;
+        private string functionName;
+        public Action action;
+        public Func<bool> testDestroy;
+
+
+        private FunctionPeriodic(GameObject gameObject, Action action, float timer, Func<bool> testDestroy, string functionName, bool useUnscaledDeltaTime) {
+            this.gameObject = gameObject;
+            this.action = action;
+            this.timer = timer;
+            this.testDestroy = testDestroy;
+            this.functionName = functionName;
+            this.useUnscaledDeltaTime = useUnscaledDeltaTime;
+            baseTimer = timer;
+        }
+        public void SkipTimerTo(float timer) {
+            this.timer = timer;
+        }
+
+        void Update() {
+            if (useUnscaledDeltaTime) {
+                timer -= Time.unscaledDeltaTime;
+            } else {
+                timer -= Time.deltaTime;
+            }
+            if (timer <= 0) {
+                action();
+                if (testDestroy != null && testDestroy()) {
+                    //Destroy
+                    DestroySelf();
+                } else {
+                    //Repeat
+                    timer += baseTimer;
+                }
+            }
+        }
+        public void DestroySelf() {
+            RemoveTimer(this);
+            if (gameObject != null) {
+                UnityEngine.Object.Destroy(gameObject);
+            }
+        }
+    }
+}
\ No newline at end of file
Index: Assets/CodeMonkey/Utils/Button_UI.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Utils/Button_UI.cs	(date 1602120286229)
+++ Assets/CodeMonkey/Utils/Button_UI.cs	(date 1602120286229)
@@ -0,0 +1,205 @@
+/* 
+    ------------------- Code Monkey -------------------
+
+    Thank you for downloading the Code Monkey Utilities
+    I hope you find them useful in your projects
+    If you have any questions use the contact form
+    Cheers!
+
+               unitycodemonkey.com
+    --------------------------------------------------
+ */
+ 
+//#define SOUND_MANAGER // Has Sound_Manager in project
+//#define CURSOR_MANAGER // Has Cursor_Manager in project
+
+using System;
+using UnityEngine;
+using UnityEngine.UI;
+using UnityEngine.EventSystems;
+
+namespace CodeMonkey.Utils {
+    
+    /*
+     * Button in the UI
+     * */
+    public class Button_UI : MonoBehaviour, IPointerEnterHandler, IPointerExitHandler, IPointerClickHandler, IPointerDownHandler, IPointerUpHandler {
+
+        public Action ClickFunc = null;
+        public Action MouseRightClickFunc = null;
+        public Action MouseMiddleClickFunc = null;
+        public Action MouseDownOnceFunc = null;
+        public Action MouseUpFunc = null;
+        public Action MouseOverOnceTooltipFunc = null;
+        public Action MouseOutOnceTooltipFunc = null;
+        public Action MouseOverOnceFunc = null;
+        public Action MouseOutOnceFunc = null;
+        public Action MouseOverFunc = null;
+        public Action MouseOverPerSecFunc = null; //Triggers every sec if mouseOver
+        public Action MouseUpdate = null;
+        public Action<PointerEventData> OnPointerClickFunc;
+
+        public enum HoverBehaviour {
+            Custom,
+            Change_Color,
+            Change_Image,
+            Change_SetActive,
+        }
+        public HoverBehaviour hoverBehaviourType = HoverBehaviour.Custom;
+        private Action hoverBehaviourFunc_Enter, hoverBehaviourFunc_Exit;
+
+        public Color hoverBehaviour_Color_Enter, hoverBehaviour_Color_Exit;
+        public Image hoverBehaviour_Image;
+        public Sprite hoverBehaviour_Sprite_Exit, hoverBehaviour_Sprite_Enter;
+        public bool hoverBehaviour_Move = false;
+        public Vector2 hoverBehaviour_Move_Amount = Vector2.zero;
+        private Vector2 posExit, posEnter;
+        public bool triggerMouseOutFuncOnClick = false;
+        private bool mouseOver;
+        private float mouseOverPerSecFuncTimer;
+
+        private Action internalOnPointerEnterFunc, internalOnPointerExitFunc, internalOnPointerClickFunc;
+
+#if SOUND_MANAGER
+        public Sound_Manager.Sound mouseOverSound, mouseClickSound;
+#endif
+#if CURSOR_MANAGER
+        public CursorManager.CursorType cursorMouseOver, cursorMouseOut;
+#endif
+
+
+        public virtual void OnPointerEnter(PointerEventData eventData) {
+            if (internalOnPointerEnterFunc != null) internalOnPointerEnterFunc();
+            if (hoverBehaviour_Move) transform.localPosition = posEnter;
+            if (hoverBehaviourFunc_Enter != null) hoverBehaviourFunc_Enter();
+            if (MouseOverOnceFunc != null) MouseOverOnceFunc();
+            if (MouseOverOnceTooltipFunc != null) MouseOverOnceTooltipFunc();
+            mouseOver = true;
+            mouseOverPerSecFuncTimer = 0f;
+        }
+        public virtual void OnPointerExit(PointerEventData eventData) {
+            if (internalOnPointerExitFunc != null) internalOnPointerExitFunc();
+            if (hoverBehaviour_Move) transform.localPosition = posExit;
+            if (hoverBehaviourFunc_Exit != null) hoverBehaviourFunc_Exit();
+            if (MouseOutOnceFunc != null) MouseOutOnceFunc();
+            if (MouseOutOnceTooltipFunc != null) MouseOutOnceTooltipFunc();
+            mouseOver = false;
+        }
+        public virtual void OnPointerClick(PointerEventData eventData) {
+            if (internalOnPointerClickFunc != null) internalOnPointerClickFunc();
+            if (OnPointerClickFunc != null) OnPointerClickFunc(eventData);
+            if (eventData.button == PointerEventData.InputButton.Left) {
+                if (triggerMouseOutFuncOnClick) {
+                    OnPointerExit(eventData);
+                }
+                if (ClickFunc != null) ClickFunc();
+            }
+            if (eventData.button == PointerEventData.InputButton.Right)
+                if (MouseRightClickFunc != null) MouseRightClickFunc();
+            if (eventData.button == PointerEventData.InputButton.Middle)
+                if (MouseMiddleClickFunc != null) MouseMiddleClickFunc();
+        }
+        public void Manual_OnPointerExit() {
+            OnPointerExit(null);
+        }
+        public bool IsMouseOver() {
+            return mouseOver;
+        }
+        public void OnPointerDown(PointerEventData eventData) {
+            if (MouseDownOnceFunc != null) MouseDownOnceFunc();
+        }
+        public void OnPointerUp(PointerEventData eventData) {
+            if (MouseUpFunc != null) MouseUpFunc();
+        }
+
+        void Update() {
+            if (mouseOver) {
+                if (MouseOverFunc != null) MouseOverFunc();
+                mouseOverPerSecFuncTimer -= Time.unscaledDeltaTime;
+                if (mouseOverPerSecFuncTimer <= 0) {
+                    mouseOverPerSecFuncTimer += 1f;
+                    if (MouseOverPerSecFunc != null) MouseOverPerSecFunc();
+                }
+            }
+            if (MouseUpdate != null) MouseUpdate();
+
+        }
+        void Awake() {
+            posExit = transform.localPosition;
+            posEnter = (Vector2)transform.localPosition + hoverBehaviour_Move_Amount;
+            SetHoverBehaviourType(hoverBehaviourType);
+
+#if SOUND_MANAGER
+            // Sound Manager
+            internalOnPointerEnterFunc += () => { if (mouseOverSound != Sound_Manager.Sound.None) Sound_Manager.PlaySound(mouseOverSound); };
+            internalOnPointerClickFunc += () => { if (mouseClickSound != Sound_Manager.Sound.None) Sound_Manager.PlaySound(mouseClickSound); };
+#endif
+
+#if CURSOR_MANAGER
+            // Cursor Manager
+            internalOnPointerEnterFunc += () => { if (cursorMouseOver != CursorManager.CursorType.None) CursorManager.SetCursor(cursorMouseOver); };
+            internalOnPointerExitFunc += () => { if (cursorMouseOut != CursorManager.CursorType.None) CursorManager.SetCursor(cursorMouseOut); };
+#endif
+        }
+        public void SetHoverBehaviourType(HoverBehaviour hoverBehaviourType) {
+            this.hoverBehaviourType = hoverBehaviourType;
+            switch (hoverBehaviourType) {
+            case HoverBehaviour.Change_Color:
+                hoverBehaviourFunc_Enter = delegate () { hoverBehaviour_Image.color = hoverBehaviour_Color_Enter; };
+                hoverBehaviourFunc_Exit = delegate () { hoverBehaviour_Image.color = hoverBehaviour_Color_Exit; };
+                break;
+            case HoverBehaviour.Change_Image:
+                hoverBehaviourFunc_Enter = delegate () { hoverBehaviour_Image.sprite = hoverBehaviour_Sprite_Enter; };
+                hoverBehaviourFunc_Exit = delegate () { hoverBehaviour_Image.sprite = hoverBehaviour_Sprite_Exit; };
+                break;
+            case HoverBehaviour.Change_SetActive:
+                hoverBehaviourFunc_Enter = delegate () { hoverBehaviour_Image.gameObject.SetActive(true); };
+                hoverBehaviourFunc_Exit = delegate () { hoverBehaviour_Image.gameObject.SetActive(false); };
+                break;
+            }
+        }
+
+
+
+
+
+
+
+
+
+        /*
+         * Class for temporarily intercepting a button action
+         * Useful for Tutorial disabling specific buttons
+         * */
+        public class InterceptActionHandler {
+
+            private Action removeInterceptFunc;
+
+            public InterceptActionHandler(Action removeInterceptFunc) {
+                this.removeInterceptFunc = removeInterceptFunc;
+            }
+            public void RemoveIntercept() {
+                removeInterceptFunc();
+            }
+        }
+        public InterceptActionHandler InterceptActionClick(Func<bool> testPassthroughFunc) {
+            return InterceptAction("ClickFunc", testPassthroughFunc);
+        }
+        public InterceptActionHandler InterceptAction(string fieldName, Func<bool> testPassthroughFunc) {
+            return InterceptAction(GetType().GetField(fieldName), testPassthroughFunc);
+        }
+        public InterceptActionHandler InterceptAction(System.Reflection.FieldInfo fieldInfo, Func<bool> testPassthroughFunc) {
+            Action backFunc = fieldInfo.GetValue(this) as Action;
+            InterceptActionHandler interceptActionHandler = new InterceptActionHandler(() => fieldInfo.SetValue(this, backFunc));
+            fieldInfo.SetValue(this, (Action)delegate () {
+                if (testPassthroughFunc()) {
+                    // Passthrough
+                    interceptActionHandler.RemoveIntercept();
+                    backFunc();
+                }
+            });
+
+            return interceptActionHandler;
+        }
+    }
+}
\ No newline at end of file
Index: Assets/Characters/BaseEarth.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\nnamespace Characters\n{\n//inherites base character class\n    public class BaseEarth : BaseCharacter\n    {\n        public BaseEarth()\n        {\n            CharacterElementType = \"Earth\";\n            CharacterDescription = \"it rocks.\";\n            level = 1;\n            hp = 10;\n            attack = 2;\n            defense = 4;\n            speed = 5;\n            accuracy = 5;\n        } //end of Earth\n\n    } //end of BaseEarth\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/Characters/BaseEarth.cs	(revision c48c6c44b412e2223cd63bb83caac2f8baf651f2)
+++ Assets/Characters/BaseEarth.cs	(date 1602120286207)
@@ -1,24 +1,24 @@
-using System.Collections;
-using System.Collections.Generic;
-using UnityEngine;
+// using System.Collections;
+// using System.Collections.Generic;
+// using UnityEngine;
 
-namespace Characters
-{
-//inherites base character class
-    public class BaseEarth : BaseCharacter
-    {
-        public BaseEarth()
-        {
-            CharacterElementType = "Earth";
-            CharacterDescription = "it rocks.";
-            level = 1;
-            hp = 10;
-            attack = 2;
-            defense = 4;
-            speed = 5;
-            accuracy = 5;
-        } //end of Earth
+// namespace Characters
+// {
+// //inherites base character class
+//     public class BaseEarth : BaseCharacter
+//     {
+//         public BaseEarth()
+//         {
+//             CharacterElementType = "Earth";
+//             CharacterDescription = "it rocks.";
+//             level = 1;
+//             hp = 10;
+//             attack = 2;
+//             defense = 4;
+//             speed = 5;
+//             accuracy = 5;
+//         } //end of Earth
 
-    } //end of BaseEarth
+//     } //end of BaseEarth
 
-}
\ No newline at end of file
+// }
\ No newline at end of file
Index: Assets/CodeMonkey/Assets/White_1x1.mat.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Assets/White_1x1.mat.meta	(date 1602120286217)
+++ Assets/CodeMonkey/Assets/White_1x1.mat.meta	(date 1602120286217)
@@ -0,0 +1,10 @@
+fileFormatVersion: 2
+guid: 7d5e8e2c082a4c44a9abd7d650cf0a15
+timeCreated: 1527582754
+licenseType: Pro
+NativeFormatImporter:
+  externalObjects: {}
+  mainObjectFileID: 2100000
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/CodeMonkey/Assets/White_1x1.psd.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Assets/White_1x1.psd.meta	(date 1602120286218)
+++ Assets/CodeMonkey/Assets/White_1x1.psd.meta	(date 1602120286218)
@@ -0,0 +1,104 @@
+fileFormatVersion: 2
+guid: c33871c8638eb4c41bfb4577f3b58627
+TextureImporter:
+  internalIDToNameTable: []
+  externalObjects: {}
+  serializedVersion: 11
+  mipmaps:
+    mipMapMode: 0
+    enableMipMap: 0
+    sRGBTexture: 1
+    linearTexture: 0
+    fadeOut: 0
+    borderMipMap: 0
+    mipMapsPreserveCoverage: 0
+    alphaTestReferenceValue: 0.5
+    mipMapFadeDistanceStart: 1
+    mipMapFadeDistanceEnd: 3
+  bumpmap:
+    convertToNormalMap: 0
+    externalNormalMap: 0
+    heightScale: 0.25
+    normalMapFilter: 0
+  isReadable: 0
+  streamingMipmaps: 0
+  streamingMipmapsPriority: 0
+  grayScaleToAlpha: 0
+  generateCubemap: 6
+  cubemapConvolution: 0
+  seamlessCubemap: 0
+  textureFormat: 1
+  maxTextureSize: 2048
+  textureSettings:
+    serializedVersion: 2
+    filterMode: -1
+    aniso: -1
+    mipBias: -100
+    wrapU: 1
+    wrapV: 1
+    wrapW: 1
+  nPOTScale: 0
+  lightmap: 0
+  compressionQuality: 50
+  spriteMode: 1
+  spriteExtrude: 1
+  spriteMeshType: 1
+  alignment: 0
+  spritePivot: {x: 0.5, y: 0.5}
+  spritePixelsToUnits: 1
+  spriteBorder: {x: 0, y: 0, z: 0, w: 0}
+  spriteGenerateFallbackPhysicsShape: 1
+  alphaUsage: 1
+  alphaIsTransparency: 1
+  spriteTessellationDetail: -1
+  textureType: 8
+  textureShape: 1
+  singleChannelComponent: 0
+  maxTextureSizeSet: 0
+  compressionQualitySet: 0
+  textureFormatSet: 0
+  applyGammaDecoding: 1
+  platformSettings:
+  - serializedVersion: 3
+    buildTarget: DefaultTexturePlatform
+    maxTextureSize: 2048
+    resizeAlgorithm: 0
+    textureFormat: -1
+    textureCompression: 1
+    compressionQuality: 50
+    crunchedCompression: 0
+    allowsAlphaSplitting: 0
+    overridden: 0
+    androidETC2FallbackOverride: 0
+    forceMaximumCompressionQuality_BC6H_BC7: 1
+  - serializedVersion: 3
+    buildTarget: Standalone
+    maxTextureSize: 2048
+    resizeAlgorithm: 0
+    textureFormat: -1
+    textureCompression: 1
+    compressionQuality: 50
+    crunchedCompression: 0
+    allowsAlphaSplitting: 0
+    overridden: 0
+    androidETC2FallbackOverride: 0
+    forceMaximumCompressionQuality_BC6H_BC7: 1
+  spriteSheet:
+    serializedVersion: 2
+    sprites: []
+    outline: []
+    physicsShape: []
+    bones: []
+    spriteID: 5e97eb03825dee720800000000000000
+    internalID: 0
+    vertices: []
+    indices: 
+    edges: []
+    weights: []
+    secondaryTextures: []
+  spritePackingTag: 
+  pSDRemoveMatte: 1
+  pSDShowRemoveMatteOption: 1
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/CodeMonkey/Assets/White_1x1.mat
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Assets/White_1x1.mat	(date 1602120286216)
+++ Assets/CodeMonkey/Assets/White_1x1.mat	(date 1602120286216)
@@ -0,0 +1,77 @@
+%YAML 1.1
+%TAG !u! tag:unity3d.com,2011:
+--- !u!21 &2100000
+Material:
+  serializedVersion: 6
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  m_Name: White_1x1
+  m_Shader: {fileID: 10752, guid: 0000000000000000f000000000000000, type: 0}
+  m_ShaderKeywords: 
+  m_LightmapFlags: 4
+  m_EnableInstancingVariants: 0
+  m_DoubleSidedGI: 0
+  m_CustomRenderQueue: -1
+  stringTagMap: {}
+  disabledShaderPasses: []
+  m_SavedProperties:
+    serializedVersion: 3
+    m_TexEnvs:
+    - _BumpMap:
+        m_Texture: {fileID: 0}
+        m_Scale: {x: 1, y: 1}
+        m_Offset: {x: 0, y: 0}
+    - _DetailAlbedoMap:
+        m_Texture: {fileID: 0}
+        m_Scale: {x: 1, y: 1}
+        m_Offset: {x: 0, y: 0}
+    - _DetailMask:
+        m_Texture: {fileID: 0}
+        m_Scale: {x: 1, y: 1}
+        m_Offset: {x: 0, y: 0}
+    - _DetailNormalMap:
+        m_Texture: {fileID: 0}
+        m_Scale: {x: 1, y: 1}
+        m_Offset: {x: 0, y: 0}
+    - _EmissionMap:
+        m_Texture: {fileID: 0}
+        m_Scale: {x: 1, y: 1}
+        m_Offset: {x: 0, y: 0}
+    - _MainTex:
+        m_Texture: {fileID: 2800000, guid: c33871c8638eb4c41bfb4577f3b58627, type: 3}
+        m_Scale: {x: 1, y: 1}
+        m_Offset: {x: 0, y: 0}
+    - _MetallicGlossMap:
+        m_Texture: {fileID: 0}
+        m_Scale: {x: 1, y: 1}
+        m_Offset: {x: 0, y: 0}
+    - _OcclusionMap:
+        m_Texture: {fileID: 0}
+        m_Scale: {x: 1, y: 1}
+        m_Offset: {x: 0, y: 0}
+    - _ParallaxMap:
+        m_Texture: {fileID: 0}
+        m_Scale: {x: 1, y: 1}
+        m_Offset: {x: 0, y: 0}
+    m_Floats:
+    - _BumpScale: 1
+    - _Cutoff: 0.5
+    - _DetailNormalMapScale: 1
+    - _DstBlend: 0
+    - _GlossMapScale: 1
+    - _Glossiness: 0.5
+    - _GlossyReflections: 1
+    - _Metallic: 0
+    - _Mode: 0
+    - _OcclusionStrength: 1
+    - _Parallax: 0.02
+    - _SmoothnessTextureChannel: 0
+    - _SpecularHighlights: 1
+    - _SrcBlend: 1
+    - _UVSec: 0
+    - _ZWrite: 1
+    m_Colors:
+    - _Color: {r: 1, g: 1, b: 1, a: 1}
+    - _EmissionColor: {r: 0, g: 0, b: 0, a: 1}
Index: Assets/CodeMonkey/Resources/CodeMonkeyAssets.prefab
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Resources/CodeMonkeyAssets.prefab	(date 1602120286227)
+++ Assets/CodeMonkey/Resources/CodeMonkeyAssets.prefab	(date 1602120286227)
@@ -0,0 +1,47 @@
+%YAML 1.1
+%TAG !u! tag:unity3d.com,2011:
+--- !u!1 &1010336202903800
+GameObject:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  serializedVersion: 6
+  m_Component:
+  - component: {fileID: 4240258222200348}
+  - component: {fileID: 114165315123428144}
+  m_Layer: 0
+  m_Name: CodeMonkeyAssets
+  m_TagString: Untagged
+  m_Icon: {fileID: 0}
+  m_NavMeshLayer: 0
+  m_StaticEditorFlags: 0
+  m_IsActive: 1
+--- !u!4 &4240258222200348
+Transform:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  m_GameObject: {fileID: 1010336202903800}
+  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}
+  m_LocalPosition: {x: 991.20996, y: 137.51582, z: 149.5}
+  m_LocalScale: {x: 1, y: 1, z: 1}
+  m_Children: []
+  m_Father: {fileID: 0}
+  m_RootOrder: 0
+  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
+--- !u!114 &114165315123428144
+MonoBehaviour:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  m_GameObject: {fileID: 1010336202903800}
+  m_Enabled: 1
+  m_EditorHideFlags: 0
+  m_Script: {fileID: 11500000, guid: eda7ff5f6e8175c4da119ea9ed256f6d, type: 3}
+  m_Name: 
+  m_EditorClassIdentifier: 
+  s_White: {fileID: 21300000, guid: c33871c8638eb4c41bfb4577f3b58627, type: 3}
+  m_White: {fileID: 2100000, guid: 7d5e8e2c082a4c44a9abd7d650cf0a15, type: 2}
Index: Assets/CodeMonkey/Resources/CodeMonkeyAssets.prefab.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/Resources/CodeMonkeyAssets.prefab.meta	(date 1602120286227)
+++ Assets/CodeMonkey/Resources/CodeMonkeyAssets.prefab.meta	(date 1602120286227)
@@ -0,0 +1,10 @@
+fileFormatVersion: 2
+guid: 6cb9ffb1fe7e89d4a890b91c62fa7e8b
+timeCreated: 1524393897
+licenseType: Pro
+NativeFormatImporter:
+  externalObjects: {}
+  mainObjectFileID: 100100000
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/CodeMonkey/MonoBehaviours/PositionRendererSorter.cs.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/MonoBehaviours/PositionRendererSorter.cs.meta	(date 1602120286225)
+++ Assets/CodeMonkey/MonoBehaviours/PositionRendererSorter.cs.meta	(date 1602120286225)
@@ -0,0 +1,13 @@
+fileFormatVersion: 2
+guid: b330b302c69005c4f98a928f7d71b877
+timeCreated: 1526502963
+licenseType: Pro
+MonoImporter:
+  externalObjects: {}
+  serializedVersion: 2
+  defaultReferences: []
+  executionOrder: 0
+  icon: {instanceID: 0}
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/CodeMonkey/MonoBehaviours/PositionRendererSorter.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/MonoBehaviours/PositionRendererSorter.cs	(date 1602120286225)
+++ Assets/CodeMonkey/MonoBehaviours/PositionRendererSorter.cs	(date 1602120286225)
@@ -0,0 +1,51 @@
+/* 
+    ------------------- Code Monkey -------------------
+    
+    Thank you for downloading the Code Monkey Utilities
+    I hope you find them useful in your projects
+    If you have any questions use the contact form
+    Cheers!
+
+               unitycodemonkey.com
+    --------------------------------------------------
+ */
+ 
+using UnityEngine;
+
+namespace CodeMonkey.MonoBehaviours {
+
+    /*
+     * Automatically sort a Renderer (SpriteRenderer, MeshRenderer) based on his Y position
+     * */
+    public class PositionRendererSorter : MonoBehaviour {
+
+        [SerializeField] private int sortingOrderBase = 5000; // This number should be higher than what any of your sprites will be on the position.y
+        [SerializeField] private int offset = 0;
+        [SerializeField] private bool runOnlyOnce = false;
+
+        private float timer;
+        private float timerMax = .1f;
+        private Renderer myRenderer;
+
+        private void Awake() {
+            myRenderer = gameObject.GetComponent<Renderer>();
+        }
+
+        private void LateUpdate() {
+            timer -= Time.deltaTime;
+            if (timer <= 0f) {
+                timer = timerMax;
+                myRenderer.sortingOrder = (int)(sortingOrderBase - transform.position.y - offset);
+                if (runOnlyOnce) {
+                    Destroy(this);
+                }
+            }
+        }
+
+        public void SetOffset(int offset) {
+            this.offset = offset;
+        }
+
+    }
+
+}
\ No newline at end of file
Index: Assets/Characters/BaseWater.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\nnamespace Characters\n{\n//inherites base character class\n    public class BaseWater : BaseCharacter\n    {\n        public BaseWater()\n        {\n            CharacterElementType = \"Water\";\n            CharacterDescription = \"it's a WAP (Wet Ass Paladin). \";\n            level = 1;\n            hp = 10;\n            attack = 2;\n            defense = 4;\n            speed = 5;\n            accuracy = 5;\n        } //end of Water\n\n    } //end of BaseWater\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/Characters/BaseWater.cs	(revision c48c6c44b412e2223cd63bb83caac2f8baf651f2)
+++ Assets/Characters/BaseWater.cs	(date 1602120286210)
@@ -1,24 +1,24 @@
-using System.Collections;
-using System.Collections.Generic;
-using UnityEngine;
+// using System.Collections;
+// using System.Collections.Generic;
+// using UnityEngine;
 
-namespace Characters
-{
-//inherites base character class
-    public class BaseWater : BaseCharacter
-    {
-        public BaseWater()
-        {
-            CharacterElementType = "Water";
-            CharacterDescription = "it's a WAP (Wet Ass Paladin). ";
-            level = 1;
-            hp = 10;
-            attack = 2;
-            defense = 4;
-            speed = 5;
-            accuracy = 5;
-        } //end of Water
+// namespace Characters
+// {
+// //inherites base character class
+//     public class BaseWater : BaseCharacter
+//     {
+//         public BaseWater()
+//         {
+//             CharacterElementType = "Water";
+//             CharacterDescription = "it's a WAP (Wet Ass Paladin). ";
+//             level = 1;
+//             hp = 10;
+//             attack = 2;
+//             defense = 4;
+//             speed = 5;
+//             accuracy = 5;
+//         } //end of Water
 
-    } //end of BaseWater
+//     } //end of BaseWater
 
-}
\ No newline at end of file
+// }
\ No newline at end of file
Index: Assets/CodeMonkey/MonoBehaviours/ComponentActions.cs.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/MonoBehaviours/ComponentActions.cs.meta	(date 1602120286225)
+++ Assets/CodeMonkey/MonoBehaviours/ComponentActions.cs.meta	(date 1602120286225)
@@ -0,0 +1,12 @@
+fileFormatVersion: 2
+guid: cb3e855e7fda2944b91078893f9e8fd8
+timeCreated: 1511794191
+licenseType: Pro
+MonoImporter:
+  serializedVersion: 2
+  defaultReferences: []
+  executionOrder: 0
+  icon: {instanceID: 0}
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/CodeMonkey/MonoBehaviours/CameraFollow.cs.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/MonoBehaviours/CameraFollow.cs.meta	(date 1602120286224)
+++ Assets/CodeMonkey/MonoBehaviours/CameraFollow.cs.meta	(date 1602120286224)
@@ -0,0 +1,13 @@
+fileFormatVersion: 2
+guid: f73a3eab49f30d344a207d7d3d931d98
+timeCreated: 1527867131
+licenseType: Pro
+MonoImporter:
+  externalObjects: {}
+  serializedVersion: 2
+  defaultReferences: []
+  executionOrder: 0
+  icon: {instanceID: 0}
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/CodeMonkey/MonoBehaviours/ComponentActions.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/MonoBehaviours/ComponentActions.cs	(date 1602120286224)
+++ Assets/CodeMonkey/MonoBehaviours/ComponentActions.cs	(date 1602120286224)
@@ -0,0 +1,55 @@
+/* 
+    ------------------- Code Monkey -------------------
+
+    Thank you for downloading the Code Monkey Utilities
+    I hope you find them useful in your projects
+    If you have any questions use the contact form
+    Cheers!
+
+               unitycodemonkey.com
+    --------------------------------------------------
+ */
+
+using System;
+using UnityEngine;
+
+namespace CodeMonkey.MonoBehaviours {
+
+    /*
+     * Trigger Actions on MonoBehaviour Component events
+     * */
+    public class ComponentActions : MonoBehaviour {
+
+        public Action OnDestroyFunc;
+        public Action OnEnableFunc;
+        public Action OnDisableFunc;
+        public Action OnUpdate;
+
+        void OnDestroy() {
+            if (OnDestroyFunc != null) OnDestroyFunc();
+        }
+        void OnEnable() {
+            if (OnEnableFunc != null) OnEnableFunc();
+        }
+        void OnDisable() {
+            if (OnDisableFunc != null) OnDisableFunc();
+        }
+        void Update() {
+            if (OnUpdate != null) OnUpdate();
+        }
+
+
+        public static void CreateComponent(Action OnDestroyFunc = null, Action OnEnableFunc = null, Action OnDisableFunc = null, Action OnUpdate = null) {
+            GameObject gameObject = new GameObject("ComponentActions");
+            AddComponent(gameObject, OnDestroyFunc, OnEnableFunc, OnDisableFunc, OnUpdate);
+        }
+        public static void AddComponent(GameObject gameObject, Action OnDestroyFunc = null, Action OnEnableFunc = null, Action OnDisableFunc = null, Action OnUpdate = null) {
+            ComponentActions componentFuncs = gameObject.AddComponent<ComponentActions>();
+            componentFuncs.OnDestroyFunc = OnDestroyFunc;
+            componentFuncs.OnEnableFunc = OnEnableFunc;
+            componentFuncs.OnDisableFunc = OnDisableFunc;
+            componentFuncs.OnUpdate = OnUpdate;
+        }
+    }
+
+}
\ No newline at end of file
Index: Assets/CodeMonkey/MonoBehaviours/CameraFollowSetup.cs.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/MonoBehaviours/CameraFollowSetup.cs.meta	(date 1602120286224)
+++ Assets/CodeMonkey/MonoBehaviours/CameraFollowSetup.cs.meta	(date 1602120286224)
@@ -0,0 +1,13 @@
+fileFormatVersion: 2
+guid: 31e947e7eb3216d40b72c592fa6847a3
+timeCreated: 1527867131
+licenseType: Pro
+MonoImporter:
+  externalObjects: {}
+  serializedVersion: 2
+  defaultReferences: []
+  executionOrder: 0
+  icon: {instanceID: 0}
+  userData: 
+  assetBundleName: 
+  assetBundleVariant: 
Index: Assets/CodeMonkey/MonoBehaviours/CameraFollowSetup.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/MonoBehaviours/CameraFollowSetup.cs	(date 1602120286224)
+++ Assets/CodeMonkey/MonoBehaviours/CameraFollowSetup.cs	(date 1602120286224)
@@ -0,0 +1,37 @@
+/* 
+    ------------------- Code Monkey -------------------
+    
+    Thank you for downloading the Code Monkey Utilities
+    I hope you find them useful in your projects
+    If you have any questions use the contact form
+    Cheers!
+
+               unitycodemonkey.com
+    --------------------------------------------------
+ */
+ 
+using System.Collections.Generic;
+using UnityEngine;
+
+namespace CodeMonkey.MonoBehaviours {
+
+    /*
+     * Easy set up for CameraFollow, it will follow the transform with zoom
+     * */
+    public class CameraFollowSetup : MonoBehaviour {
+
+        [SerializeField] private CameraFollow cameraFollow;
+        [SerializeField] private Transform followTransform;
+        [SerializeField] private float zoom;
+
+        private void Start() {
+            if (followTransform == null) {
+                Debug.LogError("followTransform is null! Intended?");
+                cameraFollow.Setup(() => Vector3.zero, () => zoom);
+            } else {
+                cameraFollow.Setup(() => followTransform.position, () => zoom);
+            }
+        }
+    }
+
+}
\ No newline at end of file
Index: Assets/CodeMonkey/MonoBehaviours/CameraFollow.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/CodeMonkey/MonoBehaviours/CameraFollow.cs	(date 1602120286223)
+++ Assets/CodeMonkey/MonoBehaviours/CameraFollow.cs	(date 1602120286223)
@@ -0,0 +1,103 @@
+/* 
+    ------------------- Code Monkey -------------------
+    
+    Thank you for downloading the Code Monkey Utilities
+    I hope you find them useful in your projects
+    If you have any questions use the contact form
+    Cheers!
+
+               unitycodemonkey.com
+    --------------------------------------------------
+ */
+ 
+using System;
+using System.Collections.Generic;
+using UnityEngine;
+
+namespace CodeMonkey.MonoBehaviours {
+
+    /*
+     * Script to handle Camera Movement and Zoom
+     * Place on Camera GameObject
+     * */
+    public class CameraFollow : MonoBehaviour {
+
+        private Camera myCamera;
+        private Func<Vector3> GetCameraFollowPositionFunc;
+        private Func<float> GetCameraZoomFunc;
+
+        public void Setup(Func<Vector3> GetCameraFollowPositionFunc, Func<float> GetCameraZoomFunc) {
+            this.GetCameraFollowPositionFunc = GetCameraFollowPositionFunc;
+            this.GetCameraZoomFunc = GetCameraZoomFunc;
+        }
+
+        private void Start() {
+            myCamera = transform.GetComponent<Camera>();
+        }
+
+        public void SetCameraFollowPosition(Vector3 cameraFollowPosition) {
+            SetGetCameraFollowPositionFunc(() => cameraFollowPosition);
+        }
+
+        public void SetGetCameraFollowPositionFunc(Func<Vector3> GetCameraFollowPositionFunc) {
+            this.GetCameraFollowPositionFunc = GetCameraFollowPositionFunc;
+        }
+
+        public void SetCameraZoom(float cameraZoom) {
+            SetGetCameraZoomFunc(() => cameraZoom);
+        }
+
+        public void SetGetCameraZoomFunc(Func<float> GetCameraZoomFunc) {
+            this.GetCameraZoomFunc = GetCameraZoomFunc;
+        }
+
+
+        // Update is called once per frame
+        void Update() {
+            HandleMovement();
+            HandleZoom();
+        }
+
+        private void HandleMovement() {
+            Vector3 cameraFollowPosition = GetCameraFollowPositionFunc();
+            cameraFollowPosition.z = transform.position.z;
+
+            Vector3 cameraMoveDir = (cameraFollowPosition - transform.position).normalized;
+            float distance = Vector3.Distance(cameraFollowPosition, transform.position);
+            float cameraMoveSpeed = 3f;
+
+            if (distance > 0) {
+                Vector3 newCameraPosition = transform.position + cameraMoveDir * distance * cameraMoveSpeed * Time.deltaTime;
+
+                float distanceAfterMoving = Vector3.Distance(newCameraPosition, cameraFollowPosition);
+
+                if (distanceAfterMoving > distance) {
+                    // Overshot the target
+                    newCameraPosition = cameraFollowPosition;
+                }
+
+                transform.position = newCameraPosition;
+            }
+        }
+
+        private void HandleZoom() {
+            float cameraZoom = GetCameraZoomFunc();
+
+            float cameraZoomDifference = cameraZoom - myCamera.orthographicSize;
+            float cameraZoomSpeed = 1f;
+
+            myCamera.orthographicSize += cameraZoomDifference * cameraZoomSpeed * Time.deltaTime;
+
+            if (cameraZoomDifference > 0) {
+                if (myCamera.orthographicSize > cameraZoom) {
+                    myCamera.orthographicSize = cameraZoom;
+                }
+            } else {
+                if (myCamera.orthographicSize < cameraZoom) {
+                    myCamera.orthographicSize = cameraZoom;
+                }
+            }
+        }
+    }
+
+}
\ No newline at end of file
Index: Library/CurrentLayout-default.dwlt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>%YAML 1.1\n%TAG !u! tag:unity3d.com,2011:\n--- !u!114 &1\nMonoBehaviour:\n  m_ObjectHideFlags: 52\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 0}\n  m_Enabled: 1\n  m_EditorHideFlags: 1\n  m_Script: {fileID: 12004, guid: 0000000000000000e000000000000000, type: 0}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_PixelRect:\n    serializedVersion: 2\n    x: 8\n    y: 51\n    width: 1064\n    height: 622\n  m_ShowMode: 4\n  m_Title: \n  m_RootView: {fileID: 6}\n  m_MinSize: {x: 875, y: 542}\n  m_MaxSize: {x: 10000, y: 10000}\n  m_Maximized: 0\n--- !u!114 &2\nMonoBehaviour:\n  m_ObjectHideFlags: 52\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 0}\n  m_Enabled: 1\n  m_EditorHideFlags: 1\n  m_Script: {fileID: 12010, guid: 0000000000000000e000000000000000, type: 0}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_Children:\n  - {fileID: 9}\n  - {fileID: 3}\n  m_Position:\n    serializedVersion: 2\n    x: 0\n    y: 30\n    width: 1064\n    height: 572\n  m_MinSize: {x: 679, y: 492}\n  m_MaxSize: {x: 14002, y: 14042}\n  vertical: 0\n  controlID: 54\n--- !u!114 &3\nMonoBehaviour:\n  m_ObjectHideFlags: 52\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 0}\n  m_Enabled: 1\n  m_EditorHideFlags: 1\n  m_Script: {fileID: 12006, guid: 0000000000000000e000000000000000, type: 0}\n  m_Name: InspectorWindow\n  m_EditorClassIdentifier: \n  m_Children: []\n  m_Position:\n    serializedVersion: 2\n    x: 736\n    y: 0\n    width: 328\n    height: 572\n  m_MinSize: {x: 276, y: 71}\n  m_MaxSize: {x: 4001, y: 4021}\n  m_ActualView: {fileID: 15}\n  m_Panes:\n  - {fileID: 15}\n  - {fileID: 12}\n  m_Selected: 0\n  m_LastSelected: 1\n--- !u!114 &4\nMonoBehaviour:\n  m_ObjectHideFlags: 52\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 0}\n  m_Enabled: 1\n  m_EditorHideFlags: 1\n  m_Script: {fileID: 12006, guid: 0000000000000000e000000000000000, type: 0}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_Children: []\n  m_Position:\n    serializedVersion: 2\n    x: 0\n    y: 0\n    width: 318\n    height: 257\n  m_MinSize: {x: 201, y: 221}\n  m_MaxSize: {x: 4001, y: 4021}\n  m_ActualView: {fileID: 16}\n  m_Panes:\n  - {fileID: 16}\n  m_Selected: 0\n  m_LastSelected: 0\n--- !u!114 &5\nMonoBehaviour:\n  m_ObjectHideFlags: 52\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 0}\n  m_Enabled: 1\n  m_EditorHideFlags: 1\n  m_Script: {fileID: 12006, guid: 0000000000000000e000000000000000, type: 0}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_Children: []\n  m_Position:\n    serializedVersion: 2\n    x: 0\n    y: 257\n    width: 736\n    height: 315\n  m_MinSize: {x: 231, y: 271}\n  m_MaxSize: {x: 10001, y: 10021}\n  m_ActualView: {fileID: 14}\n  m_Panes:\n  - {fileID: 14}\n  - {fileID: 19}\n  m_Selected: 0\n  m_LastSelected: 0\n--- !u!114 &6\nMonoBehaviour:\n  m_ObjectHideFlags: 52\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 0}\n  m_Enabled: 1\n  m_EditorHideFlags: 1\n  m_Script: {fileID: 12008, guid: 0000000000000000e000000000000000, type: 0}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_Children:\n  - {fileID: 7}\n  - {fileID: 2}\n  - {fileID: 8}\n  m_Position:\n    serializedVersion: 2\n    x: 0\n    y: 0\n    width: 1064\n    height: 622\n  m_MinSize: {x: 875, y: 300}\n  m_MaxSize: {x: 10000, y: 10000}\n--- !u!114 &7\nMonoBehaviour:\n  m_ObjectHideFlags: 52\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 0}\n  m_Enabled: 1\n  m_EditorHideFlags: 1\n  m_Script: {fileID: 12011, guid: 0000000000000000e000000000000000, type: 0}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_Children: []\n  m_Position:\n    serializedVersion: 2\n    x: 0\n    y: 0\n    width: 1064\n    height: 30\n  m_MinSize: {x: 0, y: 0}\n  m_MaxSize: {x: 0, y: 0}\n  m_LastLoadedLayoutName: \n--- !u!114 &8\nMonoBehaviour:\n  m_ObjectHideFlags: 52\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 0}\n  m_Enabled: 1\n  m_EditorHideFlags: 1\n  m_Script: {fileID: 12042, guid: 0000000000000000e000000000000000, type: 0}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_Children: []\n  m_Position:\n    serializedVersion: 2\n    x: 0\n    y: 602\n    width: 1064\n    height: 20\n  m_MinSize: {x: 0, y: 0}\n  m_MaxSize: {x: 0, y: 0}\n--- !u!114 &9\nMonoBehaviour:\n  m_ObjectHideFlags: 52\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 0}\n  m_Enabled: 1\n  m_EditorHideFlags: 1\n  m_Script: {fileID: 12010, guid: 0000000000000000e000000000000000, type: 0}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_Children:\n  - {fileID: 10}\n  - {fileID: 5}\n  m_Position:\n    serializedVersion: 2\n    x: 0\n    y: 0\n    width: 736\n    height: 572\n  m_MinSize: {x: 403, y: 492}\n  m_MaxSize: {x: 10001, y: 14042}\n  vertical: 1\n  controlID: 55\n--- !u!114 &10\nMonoBehaviour:\n  m_ObjectHideFlags: 52\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 0}\n  m_Enabled: 1\n  m_EditorHideFlags: 1\n  m_Script: {fileID: 12010, guid: 0000000000000000e000000000000000, type: 0}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_Children:\n  - {fileID: 4}\n  - {fileID: 11}\n  m_Position:\n    serializedVersion: 2\n    x: 0\n    y: 0\n    width: 736\n    height: 257\n  m_MinSize: {x: 403, y: 221}\n  m_MaxSize: {x: 8003, y: 4021}\n  vertical: 0\n  controlID: 56\n--- !u!114 &11\nMonoBehaviour:\n  m_ObjectHideFlags: 52\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 0}\n  m_Enabled: 1\n  m_EditorHideFlags: 1\n  m_Script: {fileID: 12006, guid: 0000000000000000e000000000000000, type: 0}\n  m_Name: SceneView\n  m_EditorClassIdentifier: \n  m_Children: []\n  m_Position:\n    serializedVersion: 2\n    x: 318\n    y: 0\n    width: 418\n    height: 257\n  m_MinSize: {x: 202, y: 221}\n  m_MaxSize: {x: 4002, y: 4021}\n  m_ActualView: {fileID: 17}\n  m_Panes:\n  - {fileID: 17}\n  - {fileID: 18}\n  - {fileID: 13}\n  m_Selected: 0\n  m_LastSelected: 2\n--- !u!114 &12\nMonoBehaviour:\n  m_ObjectHideFlags: 52\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 0}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 12157, guid: 0000000000000000e000000000000000, type: 0}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_MinSize: {x: 275, y: 50}\n  m_MaxSize: {x: 4000, y: 4000}\n  m_TitleContent:\n    m_Text: Services\n    m_Image: {fileID: 0}\n    m_Tooltip: \n  m_Pos:\n    serializedVersion: 2\n    x: 1340\n    y: 200\n    width: 345\n    height: 542\n  m_ViewDataDictionary: {fileID: 0}\n  m_InitialOpenURL: https://public-cdn.cloud.unity3d.com/editor/production/cloud/hub\n  m_GlobalObjectTypeName: \n  m_RegisteredViewURLs:\n  - https://public-cdn.cloud.unity3d.com/editor/production/cloud/hub\n  m_RegisteredViewInstances:\n  - {fileID: 0}\n--- !u!114 &13\nMonoBehaviour:\n  m_ObjectHideFlags: 52\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 0}\n  m_Enabled: 1\n  m_EditorHideFlags: 1\n  m_Script: {fileID: 12111, guid: 0000000000000000e000000000000000, type: 0}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_MinSize: {x: 400, y: 100}\n  m_MaxSize: {x: 2048, y: 2048}\n  m_TitleContent:\n    m_Text: Asset Store\n    m_Image: {fileID: -8693916549880196297, guid: 0000000000000000d000000000000000,\n      type: 0}\n    m_Tooltip: \n  m_Pos:\n    serializedVersion: 2\n    x: 402\n    y: 73\n    width: 962\n    height: 411\n  m_ViewDataDictionary: {fileID: 0}\n--- !u!114 &14\nMonoBehaviour:\n  m_ObjectHideFlags: 52\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 0}\n  m_Enabled: 1\n  m_EditorHideFlags: 1\n  m_Script: {fileID: 12014, guid: 0000000000000000e000000000000000, type: 0}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_MinSize: {x: 230, y: 250}\n  m_MaxSize: {x: 10000, y: 10000}\n  m_TitleContent:\n    m_Text: Project\n    m_Image: {fileID: -5467254957812901981, guid: 0000000000000000d000000000000000,\n      type: 0}\n    m_Tooltip: \n  m_Pos:\n    serializedVersion: 2\n    x: 8\n    y: 338\n    width: 735\n    height: 294\n  m_ViewDataDictionary: {fileID: 0}\n  m_SearchFilter:\n    m_NameFilter: \n    m_ClassNames: []\n    m_AssetLabels: []\n    m_AssetBundleNames: []\n    m_VersionControlStates: []\n    m_SoftLockControlStates: []\n    m_ReferencingInstanceIDs: \n    m_SceneHandles: \n    m_ShowAllHits: 0\n    m_SkipHidden: 0\n    m_SearchArea: 1\n    m_Folders:\n    - Packages\n  m_ViewMode: 1\n  m_StartGridSize: 64\n  m_LastFolders:\n  - Packages\n  m_LastFoldersGridSize: -1\n  m_LastProjectPath: /Users/devin_thaker/RiderProjects/CS371Game/The_Game\n  m_LockTracker:\n    m_IsLocked: 0\n  m_FolderTreeState:\n    scrollPos: {x: 0, y: 0}\n    m_SelectedIDs: ffffff7f\n    m_LastClickedID: 2147483647\n    m_ExpandedIDs: 000000005239000000ca9a3b\n    m_RenameOverlay:\n      m_UserAcceptedRename: 0\n      m_Name: \n      m_OriginalName: \n      m_EditFieldRect:\n        serializedVersion: 2\n        x: 0\n        y: 0\n        width: 0\n        height: 0\n      m_UserData: 0\n      m_IsWaitingForDelay: 0\n      m_IsRenaming: 0\n      m_OriginalEventType: 11\n      m_IsRenamingFilename: 1\n      m_ClientGUIView: {fileID: 0}\n    m_SearchString: \n    m_CreateAssetUtility:\n      m_EndAction: {fileID: 0}\n      m_InstanceID: 0\n      m_Path: \n      m_Icon: {fileID: 0}\n      m_ResourceFile: \n  m_AssetTreeState:\n    scrollPos: {x: 0, y: 0}\n    m_SelectedIDs: \n    m_LastClickedID: 0\n    m_ExpandedIDs: 0000000052390000\n    m_RenameOverlay:\n      m_UserAcceptedRename: 0\n      m_Name: \n      m_OriginalName: \n      m_EditFieldRect:\n        serializedVersion: 2\n        x: 0\n        y: 0\n        width: 0\n        height: 0\n      m_UserData: 0\n      m_IsWaitingForDelay: 0\n      m_IsRenaming: 0\n      m_OriginalEventType: 11\n      m_IsRenamingFilename: 1\n      m_ClientGUIView: {fileID: 0}\n    m_SearchString: \n    m_CreateAssetUtility:\n      m_EndAction: {fileID: 0}\n      m_InstanceID: 0\n      m_Path: \n      m_Icon: {fileID: 0}\n      m_ResourceFile: \n  m_ListAreaState:\n    m_SelectedInstanceIDs: \n    m_LastClickedInstanceID: 0\n    m_HadKeyboardFocusLastEvent: 1\n    m_ExpandedInstanceIDs: c6230000\n    m_RenameOverlay:\n      m_UserAcceptedRename: 0\n      m_Name: \n      m_OriginalName: \n      m_EditFieldRect:\n        serializedVersion: 2\n        x: 0\n        y: 0\n        width: 0\n        height: 0\n      m_UserData: 0\n      m_IsWaitingForDelay: 0\n      m_IsRenaming: 0\n      m_OriginalEventType: 11\n      m_IsRenamingFilename: 1\n      m_ClientGUIView: {fileID: 0}\n    m_CreateAssetUtility:\n      m_EndAction: {fileID: 0}\n      m_InstanceID: 0\n      m_Path: \n      m_Icon: {fileID: 0}\n      m_ResourceFile: \n    m_NewAssetIndexInList: -1\n    m_ScrollPosition: {x: 0, y: 0}\n    m_GridSize: 64\n  m_SkipHiddenPackages: 0\n  m_DirectoriesAreaWidth: 115\n--- !u!114 &15\nMonoBehaviour:\n  m_ObjectHideFlags: 52\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 0}\n  m_Enabled: 1\n  m_EditorHideFlags: 1\n  m_Script: {fileID: 12019, guid: 0000000000000000e000000000000000, type: 0}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_MinSize: {x: 275, y: 50}\n  m_MaxSize: {x: 4000, y: 4000}\n  m_TitleContent:\n    m_Text: Inspector\n    m_Image: {fileID: -2667387946076563598, guid: 0000000000000000d000000000000000,\n      type: 0}\n    m_Tooltip: \n  m_Pos:\n    serializedVersion: 2\n    x: 744\n    y: 81\n    width: 327\n    height: 551\n  m_ViewDataDictionary: {fileID: 0}\n  m_OpenAddComponentMenu: 0\n  m_ObjectsLockedBeforeSerialization: []\n  m_InstanceIDsLockedBeforeSerialization: \n  m_LockTracker:\n    m_IsLocked: 0\n  m_PreviewResizer:\n    m_CachedPref: 160\n    m_ControlHash: -371814159\n    m_PrefName: Preview_InspectorPreview\n  m_PreviewWindow: {fileID: 0}\n  m_LastInspectedObjectInstanceID: -1\n  m_LastVerticalScrollValue: 0\n--- !u!114 &16\nMonoBehaviour:\n  m_ObjectHideFlags: 52\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 0}\n  m_Enabled: 1\n  m_EditorHideFlags: 1\n  m_Script: {fileID: 12061, guid: 0000000000000000e000000000000000, type: 0}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_MinSize: {x: 200, y: 200}\n  m_MaxSize: {x: 4000, y: 4000}\n  m_TitleContent:\n    m_Text: Hierarchy\n    m_Image: {fileID: 7966133145522015247, guid: 0000000000000000d000000000000000,\n      type: 0}\n    m_Tooltip: \n  m_Pos:\n    serializedVersion: 2\n    x: 8\n    y: 81\n    width: 317\n    height: 236\n  m_ViewDataDictionary: {fileID: 0}\n  m_SceneHierarchy:\n    m_TreeViewState:\n      scrollPos: {x: 0, y: 0}\n      m_SelectedIDs: 6a390000\n      m_LastClickedID: 0\n      m_ExpandedIDs: 1afbffff\n      m_RenameOverlay:\n        m_UserAcceptedRename: 0\n        m_Name: \n        m_OriginalName: \n        m_EditFieldRect:\n          serializedVersion: 2\n          x: 0\n          y: 0\n          width: 0\n          height: 0\n        m_UserData: 0\n        m_IsWaitingForDelay: 0\n        m_IsRenaming: 0\n        m_OriginalEventType: 11\n        m_IsRenamingFilename: 0\n        m_ClientGUIView: {fileID: 4}\n      m_SearchString: \n    m_ExpandedScenes: []\n    m_CurrenRootInstanceID: 0\n    m_LockTracker:\n      m_IsLocked: 0\n    m_CurrentSortingName: TransformSorting\n  m_WindowGUID: ef44eb1e44ce761449f5274930dc3fd1\n--- !u!114 &17\nMonoBehaviour:\n  m_ObjectHideFlags: 52\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 0}\n  m_Enabled: 1\n  m_EditorHideFlags: 1\n  m_Script: {fileID: 12013, guid: 0000000000000000e000000000000000, type: 0}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_MinSize: {x: 200, y: 200}\n  m_MaxSize: {x: 4000, y: 4000}\n  m_TitleContent:\n    m_Text: Scene\n    m_Image: {fileID: 2593428753322112591, guid: 0000000000000000d000000000000000,\n      type: 0}\n    m_Tooltip: \n  m_Pos:\n    serializedVersion: 2\n    x: 326\n    y: 81\n    width: 416\n    height: 236\n  m_ViewDataDictionary: {fileID: 0}\n  m_ShowContextualTools: 0\n  m_WindowGUID: 24009e952544c7342950c3ef739af859\n  m_Gizmos: 1\n  m_SceneIsLit: 1\n  m_SceneLighting: 1\n  m_2DMode: 1\n  m_isRotationLocked: 0\n  m_PlayAudio: 0\n  m_AudioPlay: 0\n  m_Position:\n    m_Target: {x: 0, y: 0, z: 0}\n    speed: 2\n    m_Value: {x: 0, y: 0, z: 0}\n  m_RenderMode: 0\n  m_CameraMode:\n    drawMode: 0\n    name: Shaded\n    section: Shading Mode\n  m_ValidateTrueMetals: 0\n  m_DoValidateTrueMetals: 0\n  m_ExposureSliderValue: 0\n  m_ExposureSliderMax: 10\n  m_SceneViewState:\n    showFog: 1\n    showMaterialUpdate: 0\n    showSkybox: 1\n    showFlares: 1\n    showImageEffects: 1\n    showParticleSystems: 1\n  m_Grid:\n    xGrid:\n      m_Fade:\n        m_Target: 0\n        speed: 2\n        m_Value: 0\n      m_Color: {r: 0.5, g: 0.5, b: 0.5, a: 0.4}\n      m_Pivot: {x: 0, y: 0, z: 0}\n      m_Size: {x: 0, y: 0}\n    yGrid:\n      m_Fade:\n        m_Target: 0\n        speed: 2\n        m_Value: 1\n      m_Color: {r: 0.5, g: 0.5, b: 0.5, a: 0.4}\n      m_Pivot: {x: 0, y: 0, z: 0}\n      m_Size: {x: 1, y: 1}\n    zGrid:\n      m_Fade:\n        m_Target: 1\n        speed: 2\n        m_Value: 1\n      m_Color: {r: 0.5, g: 0.5, b: 0.5, a: 0.4}\n      m_Pivot: {x: 0, y: 0, z: 0}\n      m_Size: {x: 1, y: 1}\n    m_ShowGrid: 1\n    m_GridAxis: 1\n    m_gridOpacity: 0.5\n  m_Rotation:\n    m_Target: {x: 0, y: 0, z: 0, w: 1}\n    speed: 2\n    m_Value: {x: 0, y: 0, z: 0, w: 1}\n  m_Size:\n    m_Target: 10\n    speed: 2\n    m_Value: 10\n  m_Ortho:\n    m_Target: 1\n    speed: 2\n    m_Value: 1\n  m_CameraSettings:\n    m_Speed: 1\n    m_SpeedNormalized: 0.5\n    m_SpeedMin: 0.01\n    m_SpeedMax: 2\n    m_EasingEnabled: 1\n    m_EasingDuration: 0.4\n    m_AccelerationEnabled: 1\n    m_FieldOfViewHorizontalOrVertical: 60\n    m_NearClip: 0.03\n    m_FarClip: 10000\n    m_DynamicClip: 1\n    m_OcclusionCulling: 0\n  m_LastSceneViewRotation: {x: -0.08717229, y: 0.89959055, z: -0.21045254, w: -0.3726226}\n  m_LastSceneViewOrtho: 0\n  m_ReplacementShader: {fileID: 0}\n  m_ReplacementString: \n  m_SceneVisActive: 1\n  m_LastLockedObject: {fileID: 0}\n  m_ViewIsLockedToObject: 0\n--- !u!114 &18\nMonoBehaviour:\n  m_ObjectHideFlags: 52\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 0}\n  m_Enabled: 1\n  m_EditorHideFlags: 1\n  m_Script: {fileID: 12015, guid: 0000000000000000e000000000000000, type: 0}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_MinSize: {x: 200, y: 200}\n  m_MaxSize: {x: 4000, y: 4000}\n  m_TitleContent:\n    m_Text: Game\n    m_Image: {fileID: -6423792434712278376, guid: 0000000000000000d000000000000000,\n      type: 0}\n    m_Tooltip: \n  m_Pos:\n    serializedVersion: 2\n    x: 402\n    y: 73\n    width: 962\n    height: 411\n  m_ViewDataDictionary: {fileID: 0}\n  m_SerializedViewNames: []\n  m_SerializedViewValues: []\n  m_SerializedCustomFieldsNames: []\n  m_SerializedCustomFieldsValues: []\n  m_PlayModeViewName: GameView\n  m_ShowGizmos: 0\n  m_TargetDisplay: 0\n  m_ClearColor: {r: 0, g: 0, b: 0, a: 0}\n  m_TargetSize: {x: 962, y: 390}\n  m_TextureFilterMode: 0\n  m_TextureHideFlags: 61\n  m_RenderIMGUI: 1\n  m_MaximizeOnPlay: 0\n  m_UseMipMap: 0\n  m_VSyncEnabled: 0\n  m_Gizmos: 0\n  m_Stats: 0\n  m_SelectedSizes: 00000000000000000000000000000000000000000000000000000000000000000000000000000000\n  m_ZoomArea:\n    m_HRangeLocked: 0\n    m_VRangeLocked: 0\n    hZoomLockedByDefault: 0\n    vZoomLockedByDefault: 0\n    m_HBaseRangeMin: -481\n    m_HBaseRangeMax: 481\n    m_VBaseRangeMin: -205.5\n    m_VBaseRangeMax: 205.5\n    m_HAllowExceedBaseRangeMin: 1\n    m_HAllowExceedBaseRangeMax: 1\n    m_VAllowExceedBaseRangeMin: 1\n    m_VAllowExceedBaseRangeMax: 1\n    m_ScaleWithWindow: 0\n    m_HSlider: 0\n    m_VSlider: 0\n    m_IgnoreScrollWheelUntilClicked: 0\n    m_EnableMouseInput: 1\n    m_EnableSliderZoomHorizontal: 0\n    m_EnableSliderZoomVertical: 0\n    m_UniformScale: 1\n    m_UpDirection: 1\n    m_DrawArea:\n      serializedVersion: 2\n      x: 0\n      y: 0\n      width: 962\n      height: 411\n    m_Scale: {x: 1, y: 1}\n    m_Translation: {x: 481, y: 205.5}\n    m_MarginLeft: 0\n    m_MarginRight: 0\n    m_MarginTop: 0\n    m_MarginBottom: 0\n    m_LastShownAreaInsideMargins:\n      serializedVersion: 2\n      x: -481\n      y: -205.5\n      width: 962\n      height: 411\n    m_MinimalGUI: 1\n  m_defaultScale: 1\n  m_LastWindowPixelSize: {x: 962, y: 411}\n  m_ClearInEditMode: 1\n  m_NoCameraWarning: 1\n  m_LowResolutionForAspectRatios: 01000000000000000000\n  m_XRRenderMode: 0\n  m_RenderTexture: {fileID: 0}\n--- !u!114 &19\nMonoBehaviour:\n  m_ObjectHideFlags: 52\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 0}\n  m_Enabled: 1\n  m_EditorHideFlags: 1\n  m_Script: {fileID: 12003, guid: 0000000000000000e000000000000000, type: 0}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_MinSize: {x: 100, y: 100}\n  m_MaxSize: {x: 4000, y: 4000}\n  m_TitleContent:\n    m_Text: Console\n    m_Image: {fileID: -4327648978806127646, guid: 0000000000000000d000000000000000,\n      type: 0}\n    m_Tooltip: \n  m_Pos:\n    serializedVersion: 2\n    x: 8\n    y: 718\n    width: 1366\n    height: 308\n  m_ViewDataDictionary: {fileID: 0}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Library/CurrentLayout-default.dwlt	(revision c48c6c44b412e2223cd63bb83caac2f8baf651f2)
+++ Library/CurrentLayout-default.dwlt	(date 1602120286446)
@@ -14,10 +14,10 @@
   m_EditorClassIdentifier: 
   m_PixelRect:
     serializedVersion: 2
-    x: 8
+    x: 1
     y: 51
-    width: 1064
-    height: 622
+    width: 1318
+    height: 988
   m_ShowMode: 4
   m_Title: 
   m_RootView: {fileID: 6}
@@ -43,9 +43,9 @@
     serializedVersion: 2
     x: 0
     y: 30
-    width: 1064
-    height: 572
-  m_MinSize: {x: 679, y: 492}
+    width: 1318
+    height: 938
+  m_MinSize: {x: 579, y: 492}
   m_MaxSize: {x: 14002, y: 14042}
   vertical: 0
   controlID: 54
@@ -64,16 +64,16 @@
   m_Children: []
   m_Position:
     serializedVersion: 2
-    x: 736
+    x: 912
     y: 0
-    width: 328
-    height: 572
+    width: 406
+    height: 938
   m_MinSize: {x: 276, y: 71}
   m_MaxSize: {x: 4001, y: 4021}
-  m_ActualView: {fileID: 15}
+  m_ActualView: {fileID: 16}
   m_Panes:
-  - {fileID: 15}
-  - {fileID: 12}
+  - {fileID: 16}
+  - {fileID: 13}
   m_Selected: 0
   m_LastSelected: 1
 --- !u!114 &4
@@ -93,13 +93,13 @@
     serializedVersion: 2
     x: 0
     y: 0
-    width: 318
-    height: 257
+    width: 279
+    height: 426
   m_MinSize: {x: 201, y: 221}
   m_MaxSize: {x: 4001, y: 4021}
-  m_ActualView: {fileID: 16}
+  m_ActualView: {fileID: 17}
   m_Panes:
-  - {fileID: 16}
+  - {fileID: 17}
   m_Selected: 0
   m_LastSelected: 0
 --- !u!114 &5
@@ -112,23 +112,23 @@
   m_Enabled: 1
   m_EditorHideFlags: 1
   m_Script: {fileID: 12006, guid: 0000000000000000e000000000000000, type: 0}
-  m_Name: 
+  m_Name: ProjectBrowser
   m_EditorClassIdentifier: 
   m_Children: []
   m_Position:
     serializedVersion: 2
     x: 0
-    y: 257
-    width: 736
-    height: 315
+    y: 426
+    width: 912
+    height: 512
   m_MinSize: {x: 231, y: 271}
   m_MaxSize: {x: 10001, y: 10021}
-  m_ActualView: {fileID: 14}
+  m_ActualView: {fileID: 15}
   m_Panes:
-  - {fileID: 14}
+  - {fileID: 15}
   - {fileID: 19}
   m_Selected: 0
-  m_LastSelected: 0
+  m_LastSelected: 1
 --- !u!114 &6
 MonoBehaviour:
   m_ObjectHideFlags: 52
@@ -149,9 +149,9 @@
     serializedVersion: 2
     x: 0
     y: 0
-    width: 1064
-    height: 622
-  m_MinSize: {x: 875, y: 300}
+    width: 1318
+    height: 988
+  m_MinSize: {x: 875, y: 542}
   m_MaxSize: {x: 10000, y: 10000}
 --- !u!114 &7
 MonoBehaviour:
@@ -170,7 +170,7 @@
     serializedVersion: 2
     x: 0
     y: 0
-    width: 1064
+    width: 1318
     height: 30
   m_MinSize: {x: 0, y: 0}
   m_MaxSize: {x: 0, y: 0}
@@ -191,8 +191,8 @@
   m_Position:
     serializedVersion: 2
     x: 0
-    y: 602
-    width: 1064
+    y: 968
+    width: 1318
     height: 20
   m_MinSize: {x: 0, y: 0}
   m_MaxSize: {x: 0, y: 0}
@@ -215,9 +215,9 @@
     serializedVersion: 2
     x: 0
     y: 0
-    width: 736
-    height: 572
-  m_MinSize: {x: 403, y: 492}
+    width: 912
+    height: 938
+  m_MinSize: {x: 303, y: 492}
   m_MaxSize: {x: 10001, y: 14042}
   vertical: 1
   controlID: 55
@@ -240,9 +240,9 @@
     serializedVersion: 2
     x: 0
     y: 0
-    width: 736
-    height: 257
-  m_MinSize: {x: 403, y: 221}
+    width: 912
+    height: 426
+  m_MinSize: {x: 303, y: 221}
   m_MaxSize: {x: 8003, y: 4021}
   vertical: 0
   controlID: 56
@@ -256,24 +256,24 @@
   m_Enabled: 1
   m_EditorHideFlags: 1
   m_Script: {fileID: 12006, guid: 0000000000000000e000000000000000, type: 0}
-  m_Name: SceneView
+  m_Name: GameView
   m_EditorClassIdentifier: 
   m_Children: []
   m_Position:
     serializedVersion: 2
-    x: 318
+    x: 279
     y: 0
-    width: 418
-    height: 257
-  m_MinSize: {x: 202, y: 221}
+    width: 633
+    height: 426
+  m_MinSize: {x: 102, y: 121}
   m_MaxSize: {x: 4002, y: 4021}
-  m_ActualView: {fileID: 17}
+  m_ActualView: {fileID: 12}
   m_Panes:
-  - {fileID: 17}
   - {fileID: 18}
-  - {fileID: 13}
-  m_Selected: 0
-  m_LastSelected: 2
+  - {fileID: 14}
+  - {fileID: 12}
+  m_Selected: 2
+  m_LastSelected: 1
 --- !u!114 &12
 MonoBehaviour:
   m_ObjectHideFlags: 52
@@ -283,6 +283,98 @@
   m_GameObject: {fileID: 0}
   m_Enabled: 1
   m_EditorHideFlags: 0
+  m_Script: {fileID: 12015, guid: 0000000000000000e000000000000000, type: 0}
+  m_Name: 
+  m_EditorClassIdentifier: 
+  m_MinSize: {x: 100, y: 100}
+  m_MaxSize: {x: 4000, y: 4000}
+  m_TitleContent:
+    m_Text: Game
+    m_Image: {fileID: -6423792434712278376, guid: 0000000000000000d000000000000000,
+      type: 0}
+    m_Tooltip: 
+  m_Pos:
+    serializedVersion: 2
+    x: 280
+    y: 81
+    width: 631
+    height: 405
+  m_ViewDataDictionary: {fileID: 0}
+  m_SerializedViewNames: []
+  m_SerializedViewValues: []
+  m_SerializedCustomFieldsNames: []
+  m_SerializedCustomFieldsValues: []
+  m_PlayModeViewName: GameView
+  m_ShowGizmos: 0
+  m_TargetDisplay: 0
+  m_ClearColor: {r: 0, g: 0, b: 0, a: 0}
+  m_TargetSize: {x: 631, y: 384}
+  m_TextureFilterMode: 0
+  m_TextureHideFlags: 61
+  m_RenderIMGUI: 1
+  m_MaximizeOnPlay: 0
+  m_UseMipMap: 0
+  m_VSyncEnabled: 0
+  m_Gizmos: 0
+  m_Stats: 0
+  m_SelectedSizes: 00000000000000000000000000000000000000000000000000000000000000000000000000000000
+  m_ZoomArea:
+    m_HRangeLocked: 0
+    m_VRangeLocked: 0
+    hZoomLockedByDefault: 0
+    vZoomLockedByDefault: 0
+    m_HBaseRangeMin: -315.5
+    m_HBaseRangeMax: 315.5
+    m_VBaseRangeMin: -192
+    m_VBaseRangeMax: 192
+    m_HAllowExceedBaseRangeMin: 1
+    m_HAllowExceedBaseRangeMax: 1
+    m_VAllowExceedBaseRangeMin: 1
+    m_VAllowExceedBaseRangeMax: 1
+    m_ScaleWithWindow: 0
+    m_HSlider: 0
+    m_VSlider: 0
+    m_IgnoreScrollWheelUntilClicked: 0
+    m_EnableMouseInput: 1
+    m_EnableSliderZoomHorizontal: 0
+    m_EnableSliderZoomVertical: 0
+    m_UniformScale: 1
+    m_UpDirection: 1
+    m_DrawArea:
+      serializedVersion: 2
+      x: 0
+      y: 21
+      width: 631
+      height: 384
+    m_Scale: {x: 1, y: 1}
+    m_Translation: {x: 315.5, y: 192}
+    m_MarginLeft: 0
+    m_MarginRight: 0
+    m_MarginTop: 0
+    m_MarginBottom: 0
+    m_LastShownAreaInsideMargins:
+      serializedVersion: 2
+      x: -315.5
+      y: -192
+      width: 631
+      height: 384
+    m_MinimalGUI: 1
+  m_defaultScale: 1
+  m_LastWindowPixelSize: {x: 631, y: 405}
+  m_ClearInEditMode: 1
+  m_NoCameraWarning: 1
+  m_LowResolutionForAspectRatios: 01000000000000000000
+  m_XRRenderMode: 0
+  m_RenderTexture: {fileID: 0}
+--- !u!114 &13
+MonoBehaviour:
+  m_ObjectHideFlags: 52
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  m_GameObject: {fileID: 0}
+  m_Enabled: 1
+  m_EditorHideFlags: 0
   m_Script: {fileID: 12157, guid: 0000000000000000e000000000000000, type: 0}
   m_Name: 
   m_EditorClassIdentifier: 
@@ -294,10 +386,10 @@
     m_Tooltip: 
   m_Pos:
     serializedVersion: 2
-    x: 1340
-    y: 200
-    width: 345
-    height: 542
+    x: 1326
+    y: 73
+    width: 593
+    height: 926
   m_ViewDataDictionary: {fileID: 0}
   m_InitialOpenURL: https://public-cdn.cloud.unity3d.com/editor/production/cloud/hub
   m_GlobalObjectTypeName: 
@@ -305,7 +397,7 @@
   - https://public-cdn.cloud.unity3d.com/editor/production/cloud/hub
   m_RegisteredViewInstances:
   - {fileID: 0}
---- !u!114 &13
+--- !u!114 &14
 MonoBehaviour:
   m_ObjectHideFlags: 52
   m_CorrespondingSourceObject: {fileID: 0}
@@ -326,12 +418,12 @@
     m_Tooltip: 
   m_Pos:
     serializedVersion: 2
-    x: 402
-    y: 73
-    width: 962
-    height: 411
+    x: 280
+    y: 81
+    width: 631
+    height: 405
   m_ViewDataDictionary: {fileID: 0}
---- !u!114 &14
+--- !u!114 &15
 MonoBehaviour:
   m_ObjectHideFlags: 52
   m_CorrespondingSourceObject: {fileID: 0}
@@ -352,10 +444,10 @@
     m_Tooltip: 
   m_Pos:
     serializedVersion: 2
-    x: 8
-    y: 338
-    width: 735
-    height: 294
+    x: 1
+    y: 507
+    width: 911
+    height: 491
   m_ViewDataDictionary: {fileID: 0}
   m_SearchFilter:
     m_NameFilter: 
@@ -370,20 +462,20 @@
     m_SkipHidden: 0
     m_SearchArea: 1
     m_Folders:
-    - Packages
+    - Assets/Scripts
   m_ViewMode: 1
   m_StartGridSize: 64
   m_LastFolders:
-  - Packages
+  - Assets/Scripts
   m_LastFoldersGridSize: -1
-  m_LastProjectPath: /Users/devin_thaker/RiderProjects/CS371Game/The_Game
+  m_LastProjectPath: C:\Users\Hamnp\CS371Game\The_Game
   m_LockTracker:
     m_IsLocked: 0
   m_FolderTreeState:
     scrollPos: {x: 0, y: 0}
-    m_SelectedIDs: ffffff7f
-    m_LastClickedID: 2147483647
-    m_ExpandedIDs: 000000005239000000ca9a3b
+    m_SelectedIDs: 203a0000
+    m_LastClickedID: 14880
+    m_ExpandedIDs: 000000006639000000ca9a3b
     m_RenameOverlay:
       m_UserAcceptedRename: 0
       m_Name: 
@@ -411,7 +503,7 @@
     scrollPos: {x: 0, y: 0}
     m_SelectedIDs: 
     m_LastClickedID: 0
-    m_ExpandedIDs: 0000000052390000
+    m_ExpandedIDs: 0000000066390000
     m_RenameOverlay:
       m_UserAcceptedRename: 0
       m_Name: 
@@ -455,7 +547,7 @@
       m_IsRenaming: 0
       m_OriginalEventType: 11
       m_IsRenamingFilename: 1
-      m_ClientGUIView: {fileID: 0}
+      m_ClientGUIView: {fileID: 5}
     m_CreateAssetUtility:
       m_EndAction: {fileID: 0}
       m_InstanceID: 0
@@ -467,7 +559,7 @@
     m_GridSize: 64
   m_SkipHiddenPackages: 0
   m_DirectoriesAreaWidth: 115
---- !u!114 &15
+--- !u!114 &16
 MonoBehaviour:
   m_ObjectHideFlags: 52
   m_CorrespondingSourceObject: {fileID: 0}
@@ -488,10 +580,10 @@
     m_Tooltip: 
   m_Pos:
     serializedVersion: 2
-    x: 744
+    x: 913
     y: 81
-    width: 327
-    height: 551
+    width: 405
+    height: 917
   m_ViewDataDictionary: {fileID: 0}
   m_OpenAddComponentMenu: 0
   m_ObjectsLockedBeforeSerialization: []
@@ -505,7 +597,7 @@
   m_PreviewWindow: {fileID: 0}
   m_LastInspectedObjectInstanceID: -1
   m_LastVerticalScrollValue: 0
---- !u!114 &16
+--- !u!114 &17
 MonoBehaviour:
   m_ObjectHideFlags: 52
   m_CorrespondingSourceObject: {fileID: 0}
@@ -526,17 +618,17 @@
     m_Tooltip: 
   m_Pos:
     serializedVersion: 2
-    x: 8
+    x: 1
     y: 81
-    width: 317
-    height: 236
+    width: 278
+    height: 405
   m_ViewDataDictionary: {fileID: 0}
   m_SceneHierarchy:
     m_TreeViewState:
       scrollPos: {x: 0, y: 0}
-      m_SelectedIDs: 6a390000
+      m_SelectedIDs: 
       m_LastClickedID: 0
-      m_ExpandedIDs: 1afbffff
+      m_ExpandedIDs: c0ebfffffafaffff
       m_RenameOverlay:
         m_UserAcceptedRename: 0
         m_Name: 
@@ -560,7 +652,7 @@
       m_IsLocked: 0
     m_CurrentSortingName: TransformSorting
   m_WindowGUID: ef44eb1e44ce761449f5274930dc3fd1
---- !u!114 &17
+--- !u!114 &18
 MonoBehaviour:
   m_ObjectHideFlags: 52
   m_CorrespondingSourceObject: {fileID: 0}
@@ -581,10 +673,10 @@
     m_Tooltip: 
   m_Pos:
     serializedVersion: 2
-    x: 326
+    x: 280
     y: 81
-    width: 416
-    height: 236
+    width: 631
+    height: 405
   m_ViewDataDictionary: {fileID: 0}
   m_ShowContextualTools: 0
   m_WindowGUID: 24009e952544c7342950c3ef739af859
@@ -596,9 +688,9 @@
   m_PlayAudio: 0
   m_AudioPlay: 0
   m_Position:
-    m_Target: {x: 0, y: 0, z: 0}
+    m_Target: {x: 4.3855743, y: 0.94446987, z: -373.49155}
     speed: 2
-    m_Value: {x: 0, y: 0, z: 0}
+    m_Value: {x: 3.473249, y: 0.94446987, z: -373.4044}
   m_RenderMode: 0
   m_CameraMode:
     drawMode: 0
@@ -648,16 +740,16 @@
     speed: 2
     m_Value: {x: 0, y: 0, z: 0, w: 1}
   m_Size:
-    m_Target: 10
+    m_Target: 20.232872
     speed: 2
-    m_Value: 10
+    m_Value: 19.3616
   m_Ortho:
     m_Target: 1
     speed: 2
     m_Value: 1
   m_CameraSettings:
     m_Speed: 1
-    m_SpeedNormalized: 0.5
+    m_SpeedNormalized: 0.49748743
     m_SpeedMin: 0.01
     m_SpeedMax: 2
     m_EasingEnabled: 1
@@ -675,98 +767,6 @@
   m_SceneVisActive: 1
   m_LastLockedObject: {fileID: 0}
   m_ViewIsLockedToObject: 0
---- !u!114 &18
-MonoBehaviour:
-  m_ObjectHideFlags: 52
-  m_CorrespondingSourceObject: {fileID: 0}
-  m_PrefabInstance: {fileID: 0}
-  m_PrefabAsset: {fileID: 0}
-  m_GameObject: {fileID: 0}
-  m_Enabled: 1
-  m_EditorHideFlags: 1
-  m_Script: {fileID: 12015, guid: 0000000000000000e000000000000000, type: 0}
-  m_Name: 
-  m_EditorClassIdentifier: 
-  m_MinSize: {x: 200, y: 200}
-  m_MaxSize: {x: 4000, y: 4000}
-  m_TitleContent:
-    m_Text: Game
-    m_Image: {fileID: -6423792434712278376, guid: 0000000000000000d000000000000000,
-      type: 0}
-    m_Tooltip: 
-  m_Pos:
-    serializedVersion: 2
-    x: 402
-    y: 73
-    width: 962
-    height: 411
-  m_ViewDataDictionary: {fileID: 0}
-  m_SerializedViewNames: []
-  m_SerializedViewValues: []
-  m_SerializedCustomFieldsNames: []
-  m_SerializedCustomFieldsValues: []
-  m_PlayModeViewName: GameView
-  m_ShowGizmos: 0
-  m_TargetDisplay: 0
-  m_ClearColor: {r: 0, g: 0, b: 0, a: 0}
-  m_TargetSize: {x: 962, y: 390}
-  m_TextureFilterMode: 0
-  m_TextureHideFlags: 61
-  m_RenderIMGUI: 1
-  m_MaximizeOnPlay: 0
-  m_UseMipMap: 0
-  m_VSyncEnabled: 0
-  m_Gizmos: 0
-  m_Stats: 0
-  m_SelectedSizes: 00000000000000000000000000000000000000000000000000000000000000000000000000000000
-  m_ZoomArea:
-    m_HRangeLocked: 0
-    m_VRangeLocked: 0
-    hZoomLockedByDefault: 0
-    vZoomLockedByDefault: 0
-    m_HBaseRangeMin: -481
-    m_HBaseRangeMax: 481
-    m_VBaseRangeMin: -205.5
-    m_VBaseRangeMax: 205.5
-    m_HAllowExceedBaseRangeMin: 1
-    m_HAllowExceedBaseRangeMax: 1
-    m_VAllowExceedBaseRangeMin: 1
-    m_VAllowExceedBaseRangeMax: 1
-    m_ScaleWithWindow: 0
-    m_HSlider: 0
-    m_VSlider: 0
-    m_IgnoreScrollWheelUntilClicked: 0
-    m_EnableMouseInput: 1
-    m_EnableSliderZoomHorizontal: 0
-    m_EnableSliderZoomVertical: 0
-    m_UniformScale: 1
-    m_UpDirection: 1
-    m_DrawArea:
-      serializedVersion: 2
-      x: 0
-      y: 0
-      width: 962
-      height: 411
-    m_Scale: {x: 1, y: 1}
-    m_Translation: {x: 481, y: 205.5}
-    m_MarginLeft: 0
-    m_MarginRight: 0
-    m_MarginTop: 0
-    m_MarginBottom: 0
-    m_LastShownAreaInsideMargins:
-      serializedVersion: 2
-      x: -481
-      y: -205.5
-      width: 962
-      height: 411
-    m_MinimalGUI: 1
-  m_defaultScale: 1
-  m_LastWindowPixelSize: {x: 962, y: 411}
-  m_ClearInEditMode: 1
-  m_NoCameraWarning: 1
-  m_LowResolutionForAspectRatios: 01000000000000000000
-  m_XRRenderMode: 0
-  m_RenderTexture: {fileID: 0}
 --- !u!114 &19
 MonoBehaviour:
   m_ObjectHideFlags: 52
@@ -788,8 +788,8 @@
     m_Tooltip: 
   m_Pos:
     serializedVersion: 2
-    x: 8
-    y: 718
-    width: 1366
-    height: 308
+    x: 0
+    y: 503
+    width: 1325
+    height: 496
   m_ViewDataDictionary: {fileID: 0}
Index: Library/InspectorExpandedItems.asset
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\u0000\u0000\u00031\u0000\u0000\u0010\b\u0000\u0000\u0000\u0015\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u00002019.4.11f1\u0000����\u0001\u0001\u0000\u0000\u0000\u0018\u0004\u0000\u0000\u0000��p� ��\u0001h����8bU�)\u0013\u0000\u0000\u0000t\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u00007\u0000\u0000�����\u0000\u0000\u0000\u0000\u0000�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000�\u0003\u0000��\u0001\u0000�\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000�\u0003\u0000�\u0017\u0000\u0000\u0000����\u0002\u0000\u0000\u0000\u0000�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0002\u00011\u0000\u0000�1\u0000\u0000�����\u0003\u0000\u0000\u0000\u0000�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0003\u0000�\u0000\u0000�\u001B\u0003\u0000�\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0003\u0000&\u0000\u0000\u0000j\u0000\u0000�����\u0005\u0000\u0000\u0000\u0000�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0004\u0000L\u0000\u0000�3\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0004\u0000\u001B\u0004\u0000�G\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0004\u0000H\u0003\u0000�Q\u0000\u0000\u0000����\b\u0000\u0000\u0000\u0000�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0005\u00011\u0000\u0000�1\u0000\u0000�����\t\u0000\u0000\u0000\u0001@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0006\u0000�\u0000\u0000�\u001B\u0003\u0000�\u0004\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0006\u0000Q\u0000\u0000�j\u0000\u0000�\u0001\u0000\u0000\u0000\u000B\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0004\u0000�\u0003\u0000�_\u0000\u0000\u0000����\f\u0000\u0000\u0000\u0000�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0005\u00011\u0000\u0000�1\u0000\u0000�����\r\u0000\u0000\u0000\u0000�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0006\u0000�\u0000\u0000�\u001B\u0003\u0000�\u0004\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0006\u0000H\u0003\u0000�j\u0000\u0000�����\u000F\u0000\u0000\u0000\u0000�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0007\u00011\u0000\u0000�1\u0000\u0000�����\u0010\u0000\u0000\u0000\u0001@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\b\u0000�\u0000\u0000�\u001B\u0003\u0000�\u0004\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\b\u0000Q\u0000\u0000�j\u0000\u0000�\u0001\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000InspectorExpandedState\u0000m_ExpandedData\u0000ExpandedData\u0000m_InspectorExpanded\u0000m_ClassID\u0000m_ScriptClass\u0000m_ExpandedProperties\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Library/InspectorExpandedItems.asset	(revision c48c6c44b412e2223cd63bb83caac2f8baf651f2)
+++ Library/InspectorExpandedItems.asset	(date 1602120286447)
@@ -1,3 +1,3 @@
-  1            2019.4.11f1 ����      ��p� ��h����8bU�)   t          7  �����     �            � �� �                   � �   ����    �           1  �1  �����    �            �  � �                    &   j  �����    �            L  �3          @             �G                       H �Q   ����    �           1  �1  �����	   @            �  � �   
+  1  L          2019.4.11f1 ����      ��p� ��h����8bU�)   t          7  �����     �            � �� �                   � �   ����    �           1  �1  �����    �            �  � �                    &   j  �����    �            L  �3          @             �G                       H �Q   ����    �           1  �1  �����	   @            �  � �   
                 Q  �j  �                   � �_   ����    �           1  �1  �����
-    �            �  � �                    H �j  �����    �           1  �1  �����   @            �  � �                   Q  �j  �                 InspectorExpandedState m_ExpandedData ExpandedData m_InspectorExpanded m_ClassID m_ScriptClass m_ExpandedProperties                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
\ No newline at end of file
+    �            �  � �                    H �j  �����    �           1  �1  �����   @            �  � �                   Q  �j  �                 InspectorExpandedState m_ExpandedData ExpandedData m_InspectorExpanded m_ClassID m_ScriptClass m_ExpandedProperties                   L                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         r                            N             m_SortingLayers 
\ No newline at end of file
Index: .idea/.idea.The_Game/.idea/contentModel.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ContentModelStore\">\n    <e p=\"$USER_HOME$/Library/Caches/JetBrains/Rider2020.2/extResources\" t=\"IncludeRecursive\" />\n    <e p=\"$USER_HOME$/Library/Caches/JetBrains/Rider2020.2/resharper-host/local/Transient/Rider/v202/SolutionCaches/_The_Game.2054024159.00\" t=\"ExcludeRecursive\" />\n    <e p=\"$PROJECT_DIR$\" t=\"IncludeRecursive\">\n      <e p=\"Assembly-CSharp.csproj\" t=\"IncludeRecursive\" />\n      <e p=\"Assets\" t=\"Include\">\n        <e p=\"Characters\" t=\"Include\">\n          <e p=\"BaseAir.cs\" t=\"Include\" />\n          <e p=\"BaseCharacter.cs\" t=\"Include\" />\n          <e p=\"BaseEarth.cs\" t=\"Include\" />\n          <e p=\"BaseFire.cs\" t=\"Include\" />\n          <e p=\"BaseWater.cs\" t=\"Include\" />\n          <e p=\"player.cs\" t=\"Include\" />\n        </e>\n        <e p=\"TestGUI.cs\" t=\"Include\" />\n      </e>\n      <e p=\"obj\" t=\"ExcludeRecursive\" />\n      <e p=\"Packages\" t=\"ExcludeRecursive\" />\n      <e p=\"Temp/bin\" t=\"ExcludeRecursive\" />\n      <e p=\"The_Game.sln\" t=\"IncludeFlat\" />\n    </e>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/.idea.The_Game/.idea/contentModel.xml	(revision afa954d1faa0e6fe3690f1793aab3debda665659)
+++ .idea/.idea.The_Game/.idea/contentModel.xml	(date 1602120636467)
@@ -8,11 +8,38 @@
       <e p="Assets" t="Include">
         <e p="Characters" t="Include">
           <e p="BaseAir.cs" t="Include" />
-          <e p="BaseCharacter.cs" t="Include" />
           <e p="BaseEarth.cs" t="Include" />
           <e p="BaseFire.cs" t="Include" />
           <e p="BaseWater.cs" t="Include" />
-          <e p="player.cs" t="Include" />
+        </e>
+        <e p="CodeMonkey" t="Include">
+          <e p="Assets.cs" t="Include" />
+          <e p="CMDebug.cs" t="Include" />
+          <e p="MonoBehaviours" t="Include">
+            <e p="CameraFollow.cs" t="Include" />
+            <e p="CameraFollowSetup.cs" t="Include" />
+            <e p="ComponentActions.cs" t="Include" />
+            <e p="PositionRendererSorter.cs" t="Include" />
+          </e>
+          <e p="README.txt" t="Include" />
+          <e p="Utils" t="Include">
+            <e p="Button_Sprite.cs" t="Include" />
+            <e p="Button_UI.cs" t="Include" />
+            <e p="FunctionPeriodic.cs" t="Include" />
+            <e p="FunctionTimer.cs" t="Include" />
+            <e p="FunctionUpdater.cs" t="Include" />
+            <e p="UI_Bar.cs" t="Include" />
+            <e p="UI_BarMultiple.cs" t="Include" />
+            <e p="UI_Sprite.cs" t="Include" />
+            <e p="UI_TextComplex.cs" t="Include" />
+            <e p="UtilsClass.cs" t="Include" />
+            <e p="World_Bar.cs" t="Include" />
+            <e p="World_Mesh.cs" t="Include" />
+            <e p="World_Sprite.cs" t="Include" />
+          </e>
+        </e>
+        <e p="Scripts" t="Include">
+          <e p="GameHandler.cs" t="Include" />
         </e>
         <e p="TestGUI.cs" t="Include" />
       </e>
